{
    "btypes": [
        "WindowFramework::BackgroundType",
        "float",
        "uint32_t",
        "GeomEnums::NumericType",
        "GeomEnums::UsageHint",
        "GeomEnums::ShadeModel",
        "GeomEnums::PrimitiveType",
        "TextEncoder::Encoding",
        "std::streamsize",
        "time_t",
        "Filename::Type",
        "char",
        "vector_uchar",
        "unsigned short int",
        "LogicOpAttrib::Operation",
        "TransparencyAttrib::Mode",
        "RenderModeAttrib::Mode",
        "RenderAttrib::TexGenMode",
        "PN_stdfloat",
        "NodePath::ErrorType",
        "BoundingVolume::BoundsType",
        "unsigned int",
        "std::size_t",
        "bool",
        "void",
        "int",
        "TypedWritableReferenceCount *",
        "PandaNode *",
        "Namable *",
        "LinkedListNode *",
        "PointerTo< PandaNode > *",
        "PandaNode::Stashed *",
        "ConstPointerTo< RenderAttrib > *",
        "ConstPointerTo< RenderEffect > *",
        "ConstPointerTo< RenderState > *",
        "ConstPointerTo< RenderEffects > *",
        "ConstPointerTo< TransformState > *",
        "char const *",
        "DrawMask *",
        "CollideMask *",
        "ConstPointerTo< BoundingVolume > *",
        "Light *",
        "PandaNode::Children *",
        "PandaNode::Parents *",
        "LensNode *",
        "Lens *",
        "Camera *",
        "NodePath const *",
        "NodePath *",
        "NodePathCollection *",
        "RenderState const *",
        "RenderAttrib const *",
        "RenderEffect const *",
        "RenderEffects const *",
        "TransformState const *",
        "LPoint3 *",
        "LVector3 *",
        "LVecBase3 *",
        "LQuaternion *",
        "LMatrix4 const *",
        "LMatrix4 *",
        "LColor *",
        "LVecBase4 const *",
        "Texture *",
        "SamplerState const *",
        "Shader const *",
        "ShaderInput *",
        "LVecBase2 *",
        "InternalNameCollection *",
        "TextureCollection *",
        "TextureStage *",
        "TextureStageCollection *",
        "Material *",
        "MaterialCollection *",
        "PointerTo< Material > *",
        "Fog *",
        "PointerTo< BoundingVolume > *",
        "DisplayRegion *",
        "BoundingVolume *",
        "AuxSceneData *",
        "ConfigPage *",
        "ConfigDeclaration *",
        "ConfigDeclaration const *",
        "Filename *",
        "Filename const *",
        "wchar_t const *",
        "CopyOnWriteObject *",
        "Geom *",
        "GeomEnums *",
        "ConstPointerTo< GeomVertexData > *",
        "PointerTo< GeomVertexData > *",
        "ConstPointerTo< GeomPrimitive > *",
        "PointerTo< GeomPrimitive > *",
        "PointerTo< Geom > *",
        "UpdateSeq *",
        "GeomContext *",
        "GeomNode *",
        "ConstPointerTo< Geom > *",
        "GeomNode::Geoms *",
        "GeomPrimitive *",
        "ConstPointerTo< GeomVertexArrayData > *",
        "ConstPointerTo< GeomVertexArrayDataHandle > *",
        "PointerTo< GeomVertexArrayData > *",
        "PointerTo< GeomVertexArrayDataHandle > *",
        "CPTA_int *",
        "PTA_int *",
        "IndexBufferContext *",
        "GeomVertexArrayFormat const *",
        "GeomTriangles *",
        "GeomVertexData *",
        "GeomVertexFormat const *",
        "GeomVertexFormat *",
        "ConstPointerTo< GeomVertexFormat > *",
        "GeomVertexAnimationSpec const *",
        "GeomVertexArrayFormat *",
        "GeomVertexColumn const *",
        "InternalName const *",
        "PointerTo< InternalName > *",
        "InternalName *",
        "TransformTable const *",
        "ConstPointerTo< TransformBlendTable > *",
        "PointerTo< TransformBlendTable > *",
        "SliderTable const *",
        "GeomVertexWriter *",
        "GeomVertexArrayData *",
        "GeomVertexArrayDataHandle *",
        "Thread *",
        "LVecBase3f *",
        "LVecBase3f const *",
        "LVecBase2f *",
        "LVecBase3f::EVector3 *",
        "MemoryBase *",
        "PandaFramework *",
        "GraphicsPipe *",
        "GraphicsEngine *",
        "EventHandler *",
        "AsyncTaskManager *",
        "WindowFramework *",
        "RecorderController *",
        "PandaSystem *",
        "ReferenceCount *",
        "WeakReferenceList *",
        "TypedReferenceCount *",
        "PointerTo< Thread > *",
        "Thread::PStatsCallback *",
        "TypedObject *",
        "TypedObject const *",
        "TypedWritable *",
        "GraphicsWindow *",
        "GraphicsOutput *",
        "TextFont *",
        "Engine *",
        "PointerTo< GeomTriangles > *"
    ],
    "classes": {
        "": {
            "bases": [],
            "enums": {
                "AutoTextureScale": [
                    [
                        "ATS_down",
                        1
                    ],
                    [
                        "ATS_none",
                        0
                    ],
                    [
                        "ATS_pad",
                        3
                    ],
                    [
                        "ATS_unspecified",
                        4
                    ],
                    [
                        "ATS_up",
                        2
                    ]
                ],
                "ColorSpace": [
                    [
                        "CS_linear",
                        1
                    ],
                    [
                        "CS_sRGB",
                        2
                    ],
                    [
                        "CS_scRGB",
                        3
                    ],
                    [
                        "CS_unspecified",
                        0
                    ]
                ],
                "CoordinateSystem": [
                    [
                        "CS_default",
                        0
                    ],
                    [
                        "CS_invalid",
                        5
                    ],
                    [
                        "CS_yup_left",
                        4
                    ],
                    [
                        "CS_yup_right",
                        2
                    ],
                    [
                        "CS_zup_left",
                        3
                    ],
                    [
                        "CS_zup_right",
                        1
                    ]
                ],
                "ErrorUtilCode": [
                    [
                        "EU_eof",
                        6
                    ],
                    [
                        "EU_error_abort",
                        -1
                    ],
                    [
                        "EU_error_file_empty",
                        -2
                    ],
                    [
                        "EU_error_file_invalid",
                        -3
                    ],
                    [
                        "EU_error_http_gateway_timeout",
                        -71
                    ],
                    [
                        "EU_error_http_proxy_authentication",
                        -73
                    ],
                    [
                        "EU_error_http_server_timeout",
                        -70
                    ],
                    [
                        "EU_error_http_service_unavailable",
                        -72
                    ],
                    [
                        "EU_error_invalid_checksum",
                        -4
                    ],
                    [
                        "EU_error_network_buffer_overflow",
                        -41
                    ],
                    [
                        "EU_error_network_dead",
                        -30
                    ],
                    [
                        "EU_error_network_disconnected",
                        -32
                    ],
                    [
                        "EU_error_network_disconnected_locally",
                        -40
                    ],
                    [
                        "EU_error_network_disk_quota_exceeded",
                        -42
                    ],
                    [
                        "EU_error_network_no_data",
                        -34
                    ],
                    [
                        "EU_error_network_remote_host_disconnected",
                        -50
                    ],
                    [
                        "EU_error_network_remote_host_down",
                        -51
                    ],
                    [
                        "EU_error_network_remote_host_no_response",
                        -54
                    ],
                    [
                        "EU_error_network_remote_host_not_found",
                        -53
                    ],
                    [
                        "EU_error_network_remote_host_unreachable",
                        -52
                    ],
                    [
                        "EU_error_network_timeout",
                        -33
                    ],
                    [
                        "EU_error_network_unreachable",
                        -31
                    ],
                    [
                        "EU_error_write_disk_fault",
                        -66
                    ],
                    [
                        "EU_error_write_disk_full",
                        -63
                    ],
                    [
                        "EU_error_write_disk_not_found",
                        -64
                    ],
                    [
                        "EU_error_write_disk_sector_not_found",
                        -65
                    ],
                    [
                        "EU_error_write_file_rename",
                        -67
                    ],
                    [
                        "EU_error_write_out_of_files",
                        -60
                    ],
                    [
                        "EU_error_write_out_of_memory",
                        -61
                    ],
                    [
                        "EU_error_write_sharing_violation",
                        -62
                    ],
                    [
                        "EU_error_zlib",
                        -80
                    ],
                    [
                        "EU_http_redirect",
                        7
                    ],
                    [
                        "EU_network_no_data",
                        5
                    ],
                    [
                        "EU_ok",
                        2
                    ],
                    [
                        "EU_success",
                        1
                    ],
                    [
                        "EU_write",
                        3
                    ],
                    [
                        "EU_write_ram",
                        4
                    ]
                ],
                "LODNodeType": [
                    [
                        "LNT_fade",
                        1
                    ],
                    [
                        "LNT_pop",
                        0
                    ]
                ],
                "NotifySeverity": [
                    [
                        "NS_debug",
                        2
                    ],
                    [
                        "NS_error",
                        5
                    ],
                    [
                        "NS_fatal",
                        6
                    ],
                    [
                        "NS_info",
                        3
                    ],
                    [
                        "NS_spam",
                        1
                    ],
                    [
                        "NS_unspecified",
                        0
                    ],
                    [
                        "NS_warning",
                        4
                    ]
                ],
                "PointerType": [
                    [
                        "eraser",
                        4
                    ],
                    [
                        "finger",
                        2
                    ],
                    [
                        "mouse",
                        1
                    ],
                    [
                        "stylus",
                        3
                    ],
                    [
                        "unknown",
                        0
                    ]
                ],
                "ThreadPriority": [
                    [
                        "TP_high",
                        2
                    ],
                    [
                        "TP_low",
                        0
                    ],
                    [
                        "TP_normal",
                        1
                    ],
                    [
                        "TP_urgent",
                        3
                    ]
                ],
                "TiXmlEncoding": [
                    [
                        "TIXML_ENCODING_LEGACY",
                        2
                    ],
                    [
                        "TIXML_ENCODING_UNKNOWN",
                        0
                    ],
                    [
                        "TIXML_ENCODING_UTF8",
                        1
                    ]
                ]
            },
            "proto": []
        },
        "CachedTypedWritableReferenceCount": {
            "bases": [
                "TypedWritableReferenceCount"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "CachedTypedWritableReferenceCount const *"
                    ],
                    "c_ref": "CachedTypedWritableReferenceCount$_$get_cache_ref_count(CachedTypedWritableReferenceCount const *param0)",
                    "c_type": "int",
                    "cn": "CachedTypedWritableReferenceCount",
                    "cni": "CachedTypedWritableReferenceCount_C_get_cache_ref_count_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f63616368655f7265665f636f756e7428293b",
                    "cpp_ref": "inline int CachedTypedWritableReferenceCount::get_cache_ref_count(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "CachedTypedWritableReferenceCount$_$get_cache_ref_count",
                    "extern": [
                        "int",
                        "CachedTypedWritableReferenceCount$_$get_cache_ref_count(CachedTypedWritableReferenceCount const *param0)"
                    ],
                    "fn": "get_cache_ref_count",
                    "indexed": "CachedTypedWritableReferenceCount$1$get_cache_ref_count",
                    "mangled": "_inCAAAA3cWf",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "CachedTypedWritableReferenceCount const *"
                    ],
                    "c_ref": "CachedTypedWritableReferenceCount$_$cache_ref(CachedTypedWritableReferenceCount const *param0)",
                    "c_type": "void",
                    "cn": "CachedTypedWritableReferenceCount",
                    "cni": "CachedTypedWritableReferenceCount_C_cache_ref_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e63616368655f72656628293b",
                    "cpp_ref": "inline void CachedTypedWritableReferenceCount::cache_ref(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "CachedTypedWritableReferenceCount$_$cache_ref",
                    "extern": [
                        "void",
                        "CachedTypedWritableReferenceCount$_$cache_ref(CachedTypedWritableReferenceCount const *param0)"
                    ],
                    "fn": "cache_ref",
                    "indexed": "CachedTypedWritableReferenceCount$2$cache_ref",
                    "mangled": "_inCAAAAEGtE",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "CachedTypedWritableReferenceCount const *"
                    ],
                    "c_ref": "CachedTypedWritableReferenceCount$_$cache_unref(CachedTypedWritableReferenceCount const *param0)",
                    "c_type": "bool",
                    "cn": "CachedTypedWritableReferenceCount",
                    "cni": "CachedTypedWritableReferenceCount_C_cache_unref_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e63616368655f756e72656628293b",
                    "cpp_ref": "inline bool CachedTypedWritableReferenceCount::cache_unref(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "CachedTypedWritableReferenceCount$_$cache_unref",
                    "extern": [
                        "bool",
                        "CachedTypedWritableReferenceCount$_$cache_unref(CachedTypedWritableReferenceCount const *param0)"
                    ],
                    "fn": "cache_unref",
                    "indexed": "CachedTypedWritableReferenceCount$3$cache_unref",
                    "mangled": "_inCAAAAC2Hz",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "CachedTypedWritableReferenceCount const *"
                    ],
                    "c_ref": "CachedTypedWritableReferenceCount$_$test_ref_count_integrity(CachedTypedWritableReferenceCount const *param0)",
                    "c_type": "bool",
                    "cn": "CachedTypedWritableReferenceCount",
                    "cni": "CachedTypedWritableReferenceCount_C_test_ref_count_integrity_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e746573745f7265665f636f756e745f696e7465677269747928293b",
                    "cpp_ref": "inline bool CachedTypedWritableReferenceCount::test_ref_count_integrity(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "CachedTypedWritableReferenceCount$_$test_ref_count_integrity",
                    "extern": [
                        "bool",
                        "CachedTypedWritableReferenceCount$_$test_ref_count_integrity(CachedTypedWritableReferenceCount const *param0)"
                    ],
                    "fn": "test_ref_count_integrity",
                    "indexed": "CachedTypedWritableReferenceCount$4$test_ref_count_integrity",
                    "mangled": "_inCAAAAbkjU",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "CachedTypedWritableReferenceCount const *"
                    ],
                    "c_ref": "CachedTypedWritableReferenceCount$_$cache_ref_only(CachedTypedWritableReferenceCount const *param0)",
                    "c_type": "void",
                    "cn": "CachedTypedWritableReferenceCount",
                    "cni": "CachedTypedWritableReferenceCount_C_cache_ref_only_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e63616368655f7265665f6f6e6c7928293b",
                    "cpp_ref": "inline void CachedTypedWritableReferenceCount::cache_ref_only(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "CachedTypedWritableReferenceCount$_$cache_ref_only",
                    "extern": [
                        "void",
                        "CachedTypedWritableReferenceCount$_$cache_ref_only(CachedTypedWritableReferenceCount const *param0)"
                    ],
                    "fn": "cache_ref_only",
                    "indexed": "CachedTypedWritableReferenceCount$5$cache_ref_only",
                    "mangled": "_inCAAAAwJ6M",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "CachedTypedWritableReferenceCount$_$get_class_type()",
                    "c_type": "int",
                    "cn": "CachedTypedWritableReferenceCount",
                    "cni": "CachedTypedWritableReferenceCount_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202843616368656454797065645772697461626c655265666572656e6365436f756e743a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle CachedTypedWritableReferenceCount::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "CachedTypedWritableReferenceCount$_$get_class_type",
                    "extern": [
                        "int",
                        "CachedTypedWritableReferenceCount$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "CachedTypedWritableReferenceCount$6$get_class_type",
                    "mangled": "_inCAAAAXAeA",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "CachedTypedWritableReferenceCount$_$init_type()",
                    "c_type": "void",
                    "cn": "CachedTypedWritableReferenceCount",
                    "cni": "CachedTypedWritableReferenceCount_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202043616368656454797065645772697461626c655265666572656e6365436f756e743a3a696e69745f7479706528293b",
                    "cpp_ref": "static void CachedTypedWritableReferenceCount::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "CachedTypedWritableReferenceCount$_$init_type",
                    "extern": [
                        "void",
                        "CachedTypedWritableReferenceCount$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "CachedTypedWritableReferenceCount$7$init_type",
                    "mangled": "_inCAAAA5wgP",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "Camera": {
            "bases": [
                "LensNode"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 1,
                    "argn": [
                        "copy"
                    ],
                    "args": [
                        "Camera const &copy"
                    ],
                    "argt": [
                        "Camera const&"
                    ],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$Camera(Camera const *param0)",
                    "c_type": "Camera *",
                    "cn": "Camera",
                    "cni": "Camera_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772043616d657261282a706172616d30293b",
                    "cpp_ref": "Camera::Camera(Camera const &copy)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Camera$_$Camera",
                    "extern": [
                        "Camera *",
                        "Camera$_$Camera(Camera const *param0)"
                    ],
                    "fn": "Camera",
                    "indexed": "Camera$1$Camera",
                    "mangled": "_inCAAAAm2Nz",
                    "ot": "",
                    "rt": "Camera"
                },
                {
                    "argc": 2,
                    "argn": [
                        "name",
                        "lens"
                    ],
                    "args": [
                        "std::string const &name",
                        "Lens *lens"
                    ],
                    "argt": [
                        "std::string const&",
                        "Lens*"
                    ],
                    "c_argv": [
                        "char const *",
                        "Lens *"
                    ],
                    "c_ref": "Camera$_$Camera(char const *param0, Lens *param1)",
                    "c_type": "Camera *",
                    "cn": "Camera",
                    "cni": "Camera_C_ctor_p_sp",
                    "cni_args": "sp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772043616d657261287374643a3a737472696e6728706172616d30292c20706172616d31293b",
                    "cpp_ref": "explicit Camera::Camera(std::string const &name, Lens *lens)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Camera$_$Camera",
                    "extern": [
                        "Camera *",
                        "Camera$_$Camera(char const *param0, Lens *param1)"
                    ],
                    "fn": "Camera",
                    "indexed": "Camera$2$Camera",
                    "mangled": "_inCAAAAkcU2",
                    "ot": "explicit",
                    "rt": "Camera"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Camera$_$Camera(char const *param0)",
                    "c_type": "Camera *",
                    "cn": "Camera",
                    "cni": "Camera_C_ctor_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772043616d657261287374643a3a737472696e6728706172616d3029293b",
                    "cpp_ref": "explicit Camera::Camera(std::string const &name, Lens *lens)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Camera$_$Camera",
                    "extern": [
                        "Camera *",
                        "Camera$_$Camera(char const *param0)"
                    ],
                    "fn": "Camera",
                    "indexed": "Camera$3$Camera",
                    "mangled": "_inCAAAAS_DP",
                    "ot": "explicit",
                    "rt": "Camera"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$make_copy(Camera const *param0)",
                    "c_type": "PandaNode *",
                    "cn": "Camera",
                    "cni": "Camera_C_make_copy_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f636f707928293b",
                    "cpp_ref": "virtual PandaNode *Camera::make_copy(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$make_copy",
                    "extern": [
                        "PandaNode *",
                        "Camera$_$make_copy(Camera const *param0)"
                    ],
                    "fn": "make_copy",
                    "indexed": "Camera$4$make_copy",
                    "mangled": "_inCAAAAf7a8",
                    "ot": "virtual PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$safe_to_flatten(Camera const *param0)",
                    "c_type": "bool",
                    "cn": "Camera",
                    "cni": "Camera_C_safe_to_flatten_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f666c617474656e28293b",
                    "cpp_ref": "virtual bool Camera::safe_to_flatten(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$safe_to_flatten",
                    "extern": [
                        "bool",
                        "Camera$_$safe_to_flatten(Camera const *param0)"
                    ],
                    "fn": "safe_to_flatten",
                    "indexed": "Camera$5$safe_to_flatten",
                    "mangled": "_inCAAAA2EYe",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$safe_to_transform(Camera const *param0)",
                    "c_type": "bool",
                    "cn": "Camera",
                    "cni": "Camera_C_safe_to_transform_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f7472616e73666f726d28293b",
                    "cpp_ref": "virtual bool Camera::safe_to_transform(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$safe_to_transform",
                    "extern": [
                        "bool",
                        "Camera$_$safe_to_transform(Camera const *param0)"
                    ],
                    "fn": "safe_to_transform",
                    "indexed": "Camera$6$safe_to_transform",
                    "mangled": "_inCAAAA_uN5",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "active"
                    ],
                    "args": [
                        "bool active"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "Camera *",
                        "bool"
                    ],
                    "c_ref": "Camera$_$set_active(Camera *param0, bool param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_active_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f61637469766528706172616d31293b",
                    "cpp_ref": "inline void Camera::set_active(bool active)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_active",
                    "extern": [
                        "void",
                        "Camera$_$set_active(Camera *param0, bool param1)"
                    ],
                    "fn": "set_active",
                    "indexed": "Camera$7$set_active",
                    "mangled": "_inCAAAA3QAN",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$is_active(Camera const *param0)",
                    "c_type": "bool",
                    "cn": "Camera",
                    "cni": "Camera_C_is_active_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f61637469766528293b",
                    "cpp_ref": "inline bool Camera::is_active(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$is_active",
                    "extern": [
                        "bool",
                        "Camera$_$is_active(Camera const *param0)"
                    ],
                    "fn": "is_active",
                    "indexed": "Camera$8$is_active",
                    "mangled": "_inCAAAAQY9N",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "scene"
                    ],
                    "args": [
                        "NodePath const &scene"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "Camera *",
                        "NodePath const *"
                    ],
                    "c_ref": "Camera$_$set_scene(Camera *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_scene_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7363656e65282a706172616d31293b",
                    "cpp_ref": "inline void Camera::set_scene(NodePath const &scene)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_scene",
                    "extern": [
                        "void",
                        "Camera$_$set_scene(Camera *param0, NodePath const *param1)"
                    ],
                    "fn": "set_scene",
                    "indexed": "Camera$9$set_scene",
                    "mangled": "_inCAAAA1aj6",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_scene(Camera const *param0)",
                    "c_type": "NodePath const *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_scene_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f7363656e652829293b",
                    "cpp_ref": "inline NodePath const &Camera::get_scene(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_scene",
                    "extern": [
                        "NodePath const *",
                        "Camera$_$get_scene(Camera const *param0)"
                    ],
                    "fn": "get_scene",
                    "indexed": "Camera$10$get_scene",
                    "mangled": "_inCAAAA_CJc",
                    "ot": "inline NodePath const&",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_num_display_regions(Camera const *param0)",
                    "c_type": "std::size_t",
                    "cn": "Camera",
                    "cni": "Camera_C_get_num_display_regions_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f646973706c61795f726567696f6e7328293b",
                    "cpp_ref": "inline std::size_t Camera::get_num_display_regions(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_num_display_regions",
                    "extern": [
                        "std::size_t",
                        "Camera$_$get_num_display_regions(Camera const *param0)"
                    ],
                    "fn": "get_num_display_regions",
                    "indexed": "Camera$11$get_num_display_regions",
                    "mangled": "_inCAAAAfkXi",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "Camera const *",
                        "std::size_t"
                    ],
                    "c_ref": "Camera$_$get_display_region(Camera const *param0, std::size_t param1)",
                    "c_type": "DisplayRegion *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_display_region_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f646973706c61795f726567696f6e28706172616d31293b",
                    "cpp_ref": "inline DisplayRegion *Camera::get_display_region(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_display_region",
                    "extern": [
                        "DisplayRegion *",
                        "Camera$_$get_display_region(Camera const *param0, std::size_t param1)"
                    ],
                    "fn": "get_display_region",
                    "indexed": "Camera$12$get_display_region",
                    "mangled": "_inCAAAANjis",
                    "ot": "inline DisplayRegion*",
                    "rt": "DisplayRegion"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mask"
                    ],
                    "args": [
                        "DrawMask mask"
                    ],
                    "argt": [
                        "DrawMask"
                    ],
                    "c_argv": [
                        "Camera *",
                        "DrawMask *"
                    ],
                    "c_ref": "Camera$_$set_camera_mask(Camera *param0, DrawMask *param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_camera_mask_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f63616d6572615f6d61736b282a706172616d31293b",
                    "cpp_ref": "inline void Camera::set_camera_mask(DrawMask mask)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_camera_mask",
                    "extern": [
                        "void",
                        "Camera$_$set_camera_mask(Camera *param0, DrawMask *param1)"
                    ],
                    "fn": "set_camera_mask",
                    "indexed": "Camera$13$set_camera_mask",
                    "mangled": "_inCAAAAh7fm",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_camera_mask(Camera const *param0)",
                    "c_type": "DrawMask *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_camera_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720447261774d61736b28282a706172616d30292e6765745f63616d6572615f6d61736b2829293b",
                    "cpp_ref": "inline DrawMask Camera::get_camera_mask(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_camera_mask",
                    "extern": [
                        "DrawMask *",
                        "Camera$_$get_camera_mask(Camera const *param0)"
                    ],
                    "fn": "get_camera_mask",
                    "indexed": "Camera$14$get_camera_mask",
                    "mangled": "_inCAAAAXHXi",
                    "ot": "inline DrawMask",
                    "rt": "DrawMask"
                },
                {
                    "argc": 1,
                    "argn": [
                        "cull_center"
                    ],
                    "args": [
                        "NodePath const &cull_center"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "Camera *",
                        "NodePath const *"
                    ],
                    "c_ref": "Camera$_$set_cull_center(Camera *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_cull_center_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f63756c6c5f63656e746572282a706172616d31293b",
                    "cpp_ref": "inline void Camera::set_cull_center(NodePath const &cull_center)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_cull_center",
                    "extern": [
                        "void",
                        "Camera$_$set_cull_center(Camera *param0, NodePath const *param1)"
                    ],
                    "fn": "set_cull_center",
                    "indexed": "Camera$15$set_cull_center",
                    "mangled": "_inCAAAAdwtU",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_cull_center(Camera const *param0)",
                    "c_type": "NodePath const *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_cull_center_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f63756c6c5f63656e7465722829293b",
                    "cpp_ref": "inline NodePath const &Camera::get_cull_center(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_cull_center",
                    "extern": [
                        "NodePath const *",
                        "Camera$_$get_cull_center(Camera const *param0)"
                    ],
                    "fn": "get_cull_center",
                    "indexed": "Camera$16$get_cull_center",
                    "mangled": "_inCAAAAYdSn",
                    "ot": "inline NodePath const&",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "cull_bounds"
                    ],
                    "args": [
                        "BoundingVolume *cull_bounds"
                    ],
                    "argt": [
                        "BoundingVolume*"
                    ],
                    "c_argv": [
                        "Camera *",
                        "BoundingVolume *"
                    ],
                    "c_ref": "Camera$_$set_cull_bounds(Camera *param0, BoundingVolume *param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_cull_bounds_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f63756c6c5f626f756e647328706172616d31293b",
                    "cpp_ref": "inline void Camera::set_cull_bounds(BoundingVolume *cull_bounds)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_cull_bounds",
                    "extern": [
                        "void",
                        "Camera$_$set_cull_bounds(Camera *param0, BoundingVolume *param1)"
                    ],
                    "fn": "set_cull_bounds",
                    "indexed": "Camera$17$set_cull_bounds",
                    "mangled": "_inCAAAACT5f",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_cull_bounds(Camera const *param0)",
                    "c_type": "BoundingVolume *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_cull_bounds_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f63756c6c5f626f756e647328293b",
                    "cpp_ref": "inline BoundingVolume *Camera::get_cull_bounds(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_cull_bounds",
                    "extern": [
                        "BoundingVolume *",
                        "Camera$_$get_cull_bounds(Camera const *param0)"
                    ],
                    "fn": "get_cull_bounds",
                    "indexed": "Camera$18$get_cull_bounds",
                    "mangled": "_inCAAAAXo9d",
                    "ot": "inline BoundingVolume*",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 1,
                    "argn": [
                        "lod_center"
                    ],
                    "args": [
                        "NodePath const &lod_center"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "Camera *",
                        "NodePath const *"
                    ],
                    "c_ref": "Camera$_$set_lod_center(Camera *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_lod_center_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c6f645f63656e746572282a706172616d31293b",
                    "cpp_ref": "inline void Camera::set_lod_center(NodePath const &lod_center)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_lod_center",
                    "extern": [
                        "void",
                        "Camera$_$set_lod_center(Camera *param0, NodePath const *param1)"
                    ],
                    "fn": "set_lod_center",
                    "indexed": "Camera$19$set_lod_center",
                    "mangled": "_inCAAAAA5qa",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_lod_center(Camera const *param0)",
                    "c_type": "NodePath const *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_lod_center_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f6c6f645f63656e7465722829293b",
                    "cpp_ref": "inline NodePath const &Camera::get_lod_center(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_lod_center",
                    "extern": [
                        "NodePath const *",
                        "Camera$_$get_lod_center(Camera const *param0)"
                    ],
                    "fn": "get_lod_center",
                    "indexed": "Camera$20$get_lod_center",
                    "mangled": "_inCAAAAX15y",
                    "ot": "inline NodePath const&",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "state"
                    ],
                    "args": [
                        "RenderState const *state"
                    ],
                    "argt": [
                        "RenderState const*"
                    ],
                    "c_argv": [
                        "Camera *",
                        "RenderState const *"
                    ],
                    "c_ref": "Camera$_$set_initial_state(Camera *param0, RenderState const *param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_initial_state_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f696e697469616c5f737461746528706172616d31293b",
                    "cpp_ref": "inline void Camera::set_initial_state(RenderState const *state)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_initial_state",
                    "extern": [
                        "void",
                        "Camera$_$set_initial_state(Camera *param0, RenderState const *param1)"
                    ],
                    "fn": "set_initial_state",
                    "indexed": "Camera$21$set_initial_state",
                    "mangled": "_inCAAAARVZ2",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_initial_state(Camera const *param0)",
                    "c_type": "ConstPointerTo< RenderState > *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_initial_state_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e6465725374617465203e28282a706172616d30292e6765745f696e697469616c5f73746174652829293b",
                    "cpp_ref": "inline ConstPointerTo< RenderState > Camera::get_initial_state(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_initial_state",
                    "extern": [
                        "ConstPointerTo< RenderState > *",
                        "Camera$_$get_initial_state(Camera const *param0)"
                    ],
                    "fn": "get_initial_state",
                    "indexed": "Camera$22$get_initial_state",
                    "mangled": "_inCAAAAD4v3",
                    "ot": "inline ConstPointerTo< RenderState >",
                    "rt": "RenderState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "tag_state_key"
                    ],
                    "args": [
                        "std::string const &tag_state_key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Camera *",
                        "char const *"
                    ],
                    "c_ref": "Camera$_$set_tag_state_key(Camera *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_tag_state_key_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7461675f73746174655f6b6579287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "inline void Camera::set_tag_state_key(std::string const &tag_state_key)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_tag_state_key",
                    "extern": [
                        "void",
                        "Camera$_$set_tag_state_key(Camera *param0, char const *param1)"
                    ],
                    "fn": "set_tag_state_key",
                    "indexed": "Camera$23$set_tag_state_key",
                    "mangled": "_inCAAAArXcP",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_tag_state_key(Camera const *param0)",
                    "c_type": "char const *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_tag_state_key_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f7461675f73746174655f6b65792829292e635f73747228293b",
                    "cpp_ref": "inline std::string const &Camera::get_tag_state_key(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_tag_state_key",
                    "extern": [
                        "char const *",
                        "Camera$_$get_tag_state_key(Camera const *param0)"
                    ],
                    "fn": "get_tag_state_key",
                    "indexed": "Camera$24$get_tag_state_key",
                    "mangled": "_inCAAAAoh3v",
                    "ot": "inline std::string const&",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "PN_stdfloat value"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "Camera *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "Camera$_$set_lod_scale(Camera *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_lod_scale_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c6f645f7363616c6528706172616d31293b",
                    "cpp_ref": "inline void Camera::set_lod_scale(PN_stdfloat value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_lod_scale",
                    "extern": [
                        "void",
                        "Camera$_$set_lod_scale(Camera *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_lod_scale",
                    "indexed": "Camera$25$set_lod_scale",
                    "mangled": "_inCAAAAF_51",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_lod_scale(Camera const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "Camera",
                    "cni": "Camera_C_get_lod_scale_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6c6f645f7363616c6528293b",
                    "cpp_ref": "inline PN_stdfloat Camera::get_lod_scale(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_lod_scale",
                    "extern": [
                        "PN_stdfloat",
                        "Camera$_$get_lod_scale(Camera const *param0)"
                    ],
                    "fn": "get_lod_scale",
                    "indexed": "Camera$26$get_lod_scale",
                    "mangled": "_inCAAAAoccW",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 2,
                    "argn": [
                        "tag_state",
                        "state"
                    ],
                    "args": [
                        "std::string const &tag_state",
                        "RenderState const *state"
                    ],
                    "argt": [
                        "std::string const&",
                        "RenderState const*"
                    ],
                    "c_argv": [
                        "Camera *",
                        "char const *",
                        "RenderState const *"
                    ],
                    "c_ref": "Camera$_$set_tag_state(Camera *param0, char const *param1, RenderState const *param2)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_tag_state_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7461675f7374617465287374643a3a737472696e6728706172616d31292c20706172616d32293b",
                    "cpp_ref": "void Camera::set_tag_state(std::string const &tag_state, RenderState const *state)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_tag_state",
                    "extern": [
                        "void",
                        "Camera$_$set_tag_state(Camera *param0, char const *param1, RenderState const *param2)"
                    ],
                    "fn": "set_tag_state",
                    "indexed": "Camera$27$set_tag_state",
                    "mangled": "_inCAAAAyKbS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "tag_state"
                    ],
                    "args": [
                        "std::string const &tag_state"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Camera *",
                        "char const *"
                    ],
                    "c_ref": "Camera$_$clear_tag_state(Camera *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_clear_tag_state_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7461675f7374617465287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void Camera::clear_tag_state(std::string const &tag_state)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$clear_tag_state",
                    "extern": [
                        "void",
                        "Camera$_$clear_tag_state(Camera *param0, char const *param1)"
                    ],
                    "fn": "clear_tag_state",
                    "indexed": "Camera$28$clear_tag_state",
                    "mangled": "_inCAAAA9VLq",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera *"
                    ],
                    "c_ref": "Camera$_$clear_tag_states(Camera *param0)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_clear_tag_states_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7461675f73746174657328293b",
                    "cpp_ref": "void Camera::clear_tag_states(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$clear_tag_states",
                    "extern": [
                        "void",
                        "Camera$_$clear_tag_states(Camera *param0)"
                    ],
                    "fn": "clear_tag_states",
                    "indexed": "Camera$29$clear_tag_states",
                    "mangled": "_inCAAAAJLW_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "tag_state"
                    ],
                    "args": [
                        "std::string const &tag_state"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Camera const *",
                        "char const *"
                    ],
                    "c_ref": "Camera$_$has_tag_state(Camera const *param0, char const *param1)",
                    "c_type": "bool",
                    "cn": "Camera",
                    "cni": "Camera_C_has_tag_state_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7461675f7374617465287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "bool Camera::has_tag_state(std::string const &tag_state) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$has_tag_state",
                    "extern": [
                        "bool",
                        "Camera$_$has_tag_state(Camera const *param0, char const *param1)"
                    ],
                    "fn": "has_tag_state",
                    "indexed": "Camera$30$has_tag_state",
                    "mangled": "_inCAAAAoKxm",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "tag_state"
                    ],
                    "args": [
                        "std::string const &tag_state"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Camera const *",
                        "char const *"
                    ],
                    "c_ref": "Camera$_$get_tag_state(Camera const *param0, char const *param1)",
                    "c_type": "ConstPointerTo< RenderState > *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_tag_state_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e6465725374617465203e28282a706172616d30292e6765745f7461675f7374617465287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "ConstPointerTo< RenderState > Camera::get_tag_state(std::string const &tag_state) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_tag_state",
                    "extern": [
                        "ConstPointerTo< RenderState > *",
                        "Camera$_$get_tag_state(Camera const *param0, char const *param1)"
                    ],
                    "fn": "get_tag_state",
                    "indexed": "Camera$31$get_tag_state",
                    "mangled": "_inCAAAA8THl",
                    "ot": "ConstPointerTo< RenderState >",
                    "rt": "RenderState"
                },
                {
                    "argc": 2,
                    "argn": [
                        "node_path",
                        "data"
                    ],
                    "args": [
                        "NodePath const &node_path",
                        "AuxSceneData *data"
                    ],
                    "argt": [
                        "NodePath const&",
                        "AuxSceneData*"
                    ],
                    "c_argv": [
                        "Camera *",
                        "NodePath const *",
                        "AuxSceneData *"
                    ],
                    "c_ref": "Camera$_$set_aux_scene_data(Camera *param0, NodePath const *param1, AuxSceneData *param2)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_set_aux_scene_data_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6175785f7363656e655f64617461282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void Camera::set_aux_scene_data(NodePath const &node_path, AuxSceneData *data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$set_aux_scene_data",
                    "extern": [
                        "void",
                        "Camera$_$set_aux_scene_data(Camera *param0, NodePath const *param1, AuxSceneData *param2)"
                    ],
                    "fn": "set_aux_scene_data",
                    "indexed": "Camera$32$set_aux_scene_data",
                    "mangled": "_inCAAAArz56",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node_path"
                    ],
                    "args": [
                        "NodePath const &node_path"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "Camera *",
                        "NodePath const *"
                    ],
                    "c_ref": "Camera$_$clear_aux_scene_data(Camera *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "Camera",
                    "cni": "Camera_C_clear_aux_scene_data_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636c6561725f6175785f7363656e655f64617461282a706172616d31293b",
                    "cpp_ref": "bool Camera::clear_aux_scene_data(NodePath const &node_path)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$clear_aux_scene_data",
                    "extern": [
                        "bool",
                        "Camera$_$clear_aux_scene_data(Camera *param0, NodePath const *param1)"
                    ],
                    "fn": "clear_aux_scene_data",
                    "indexed": "Camera$33$clear_aux_scene_data",
                    "mangled": "_inCAAAAgEb_",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node_path"
                    ],
                    "args": [
                        "NodePath const &node_path"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "Camera const *",
                        "NodePath const *"
                    ],
                    "c_ref": "Camera$_$get_aux_scene_data(Camera const *param0, NodePath const *param1)",
                    "c_type": "AuxSceneData *",
                    "cn": "Camera",
                    "cni": "Camera_C_get_aux_scene_data_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6175785f7363656e655f64617461282a706172616d31293b",
                    "cpp_ref": "AuxSceneData *Camera::get_aux_scene_data(NodePath const &node_path) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_aux_scene_data",
                    "extern": [
                        "AuxSceneData *",
                        "Camera$_$get_aux_scene_data(Camera const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_aux_scene_data",
                    "indexed": "Camera$34$get_aux_scene_data",
                    "mangled": "_inCAAAA9tPd",
                    "ot": "AuxSceneData*",
                    "rt": "AuxSceneData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "Camera const *",
                        "std::ostream *"
                    ],
                    "c_ref": "Camera$_$list_aux_scene_data(Camera const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_list_aux_scene_data_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6973745f6175785f7363656e655f64617461282a706172616d31293b",
                    "cpp_ref": "void Camera::list_aux_scene_data(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$list_aux_scene_data",
                    "extern": [
                        "void",
                        "Camera$_$list_aux_scene_data(Camera const *param0, std::ostream *param1)"
                    ],
                    "fn": "list_aux_scene_data",
                    "indexed": "Camera$35$list_aux_scene_data",
                    "mangled": "_inCAAAAkdvh",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "Camera *",
                        "Thread *"
                    ],
                    "c_ref": "Camera$_$cleanup_aux_scene_data(Camera *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "Camera",
                    "cni": "Camera_C_cleanup_aux_scene_data_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636c65616e75705f6175785f7363656e655f6461746128706172616d31293b",
                    "cpp_ref": "int Camera::cleanup_aux_scene_data(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$cleanup_aux_scene_data",
                    "extern": [
                        "int",
                        "Camera$_$cleanup_aux_scene_data(Camera *param0, Thread *param1)"
                    ],
                    "fn": "cleanup_aux_scene_data",
                    "indexed": "Camera$36$cleanup_aux_scene_data",
                    "mangled": "_inCAAAAUUgw",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera *"
                    ],
                    "c_ref": "Camera$_$cleanup_aux_scene_data(Camera *param0)",
                    "c_type": "int",
                    "cn": "Camera",
                    "cni": "Camera_C_cleanup_aux_scene_data_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636c65616e75705f6175785f7363656e655f6461746128293b",
                    "cpp_ref": "int Camera::cleanup_aux_scene_data(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$cleanup_aux_scene_data",
                    "extern": [
                        "int",
                        "Camera$_$cleanup_aux_scene_data(Camera *param0)"
                    ],
                    "fn": "cleanup_aux_scene_data",
                    "indexed": "Camera$37$cleanup_aux_scene_data",
                    "mangled": "_inCAAAAARBt",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Camera$_$register_with_read_factory()",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_register_with_read_factory_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202043616d6572613a3a72656769737465725f776974685f726561645f666163746f727928293b",
                    "cpp_ref": "static void Camera::register_with_read_factory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Camera$_$register_with_read_factory",
                    "extern": [
                        "void",
                        "Camera$_$register_with_read_factory()"
                    ],
                    "fn": "register_with_read_factory",
                    "indexed": "Camera$38$register_with_read_factory",
                    "mangled": "_inCAAAA7AQ3",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "Camera *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "Camera$_$write_datagram(Camera *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void Camera::write_datagram(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$write_datagram",
                    "extern": [
                        "void",
                        "Camera$_$write_datagram(Camera *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "Camera$39$write_datagram",
                    "mangled": "_inCAAAA1pBM",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Camera$_$get_class_type()",
                    "c_type": "int",
                    "cn": "Camera",
                    "cni": "Camera_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202843616d6572613a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle Camera::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Camera$_$get_class_type",
                    "extern": [
                        "int",
                        "Camera$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "Camera$40$get_class_type",
                    "mangled": "_inCAAAA7jVC",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Camera$_$init_type()",
                    "c_type": "void",
                    "cn": "Camera",
                    "cni": "Camera_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202043616d6572613a3a696e69745f7479706528293b",
                    "cpp_ref": "static void Camera::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Camera$_$init_type",
                    "extern": [
                        "void",
                        "Camera$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "Camera$41$init_type",
                    "mangled": "_inCAAAAAzIF",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera const *"
                    ],
                    "c_ref": "Camera$_$get_type(Camera const *param0)",
                    "c_type": "int",
                    "cn": "Camera",
                    "cni": "Camera_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle Camera::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$get_type",
                    "extern": [
                        "int",
                        "Camera$_$get_type(Camera const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "Camera$42$get_type",
                    "mangled": "_inCAAAAhX45",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Camera *"
                    ],
                    "c_ref": "Camera$_$force_init_type(Camera *param0)",
                    "c_type": "int",
                    "cn": "Camera",
                    "cni": "Camera_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle Camera::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Camera$_$force_init_type",
                    "extern": [
                        "int",
                        "Camera$_$force_init_type(Camera *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "Camera$43$force_init_type",
                    "mangled": "_inCAAAAz6kI",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "ConfigPage": {
            "bases": [],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "ConfigPage$_$get_default_page()",
                    "c_type": "ConfigPage *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_default_page_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20436f6e666967506167653a3a6765745f64656661756c745f7061676528293b",
                    "cpp_ref": "static ConfigPage *ConfigPage::get_default_page(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_default_page",
                    "extern": [
                        "ConfigPage *",
                        "ConfigPage$_$get_default_page()"
                    ],
                    "fn": "get_default_page",
                    "indexed": "ConfigPage$1$get_default_page",
                    "mangled": "_inCAAAAPGVr",
                    "ot": "ConfigPage*",
                    "rt": "ConfigPage"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "ConfigPage$_$get_local_page()",
                    "c_type": "ConfigPage *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_local_page_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20436f6e666967506167653a3a6765745f6c6f63616c5f7061676528293b",
                    "cpp_ref": "static ConfigPage *ConfigPage::get_local_page(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_local_page",
                    "extern": [
                        "ConfigPage *",
                        "ConfigPage$_$get_local_page()"
                    ],
                    "fn": "get_local_page",
                    "indexed": "ConfigPage$2$get_local_page",
                    "mangled": "_inCAAAAL7Gu",
                    "ot": "ConfigPage*",
                    "rt": "ConfigPage"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ConfigPage const *"
                    ],
                    "c_ref": "ConfigPage$_$get_name(ConfigPage const *param0)",
                    "c_type": "char const *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_name_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f6e616d652829292e635f73747228293b",
                    "cpp_ref": "inline std::string const &ConfigPage::get_name(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_name",
                    "extern": [
                        "char const *",
                        "ConfigPage$_$get_name(ConfigPage const *param0)"
                    ],
                    "fn": "get_name",
                    "indexed": "ConfigPage$3$get_name",
                    "mangled": "_inCAAAAUNsX",
                    "ot": "inline std::string const&",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ConfigPage const *"
                    ],
                    "c_ref": "ConfigPage$_$is_special(ConfigPage const *param0)",
                    "c_type": "bool",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_is_special_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f7370656369616c28293b",
                    "cpp_ref": "inline bool ConfigPage::is_special(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$is_special",
                    "extern": [
                        "bool",
                        "ConfigPage$_$is_special(ConfigPage const *param0)"
                    ],
                    "fn": "is_special",
                    "indexed": "ConfigPage$4$is_special",
                    "mangled": "_inCAAAAJyhA",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ConfigPage const *"
                    ],
                    "c_ref": "ConfigPage$_$is_implicit(ConfigPage const *param0)",
                    "c_type": "bool",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_is_implicit_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f696d706c6963697428293b",
                    "cpp_ref": "inline bool ConfigPage::is_implicit(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$is_implicit",
                    "extern": [
                        "bool",
                        "ConfigPage$_$is_implicit(ConfigPage const *param0)"
                    ],
                    "fn": "is_implicit",
                    "indexed": "ConfigPage$5$is_implicit",
                    "mangled": "_inCAAAAeRrb",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sort"
                    ],
                    "args": [
                        "int sort"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "ConfigPage *",
                        "int"
                    ],
                    "c_ref": "ConfigPage$_$set_sort(ConfigPage *param0, int param1)",
                    "c_type": "void",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_set_sort_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f736f727428706172616d31293b",
                    "cpp_ref": "void ConfigPage::set_sort(int sort)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$set_sort",
                    "extern": [
                        "void",
                        "ConfigPage$_$set_sort(ConfigPage *param0, int param1)"
                    ],
                    "fn": "set_sort",
                    "indexed": "ConfigPage$6$set_sort",
                    "mangled": "_inCAAAAwgBJ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ConfigPage const *"
                    ],
                    "c_ref": "ConfigPage$_$get_sort(ConfigPage const *param0)",
                    "c_type": "int",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_sort_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f736f727428293b",
                    "cpp_ref": "inline int ConfigPage::get_sort(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_sort",
                    "extern": [
                        "int",
                        "ConfigPage$_$get_sort(ConfigPage const *param0)"
                    ],
                    "fn": "get_sort",
                    "indexed": "ConfigPage$7$get_sort",
                    "mangled": "_inCAAAA4bV_",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ConfigPage const *"
                    ],
                    "c_ref": "ConfigPage$_$get_page_seq(ConfigPage const *param0)",
                    "c_type": "int",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_page_seq_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f706167655f73657128293b",
                    "cpp_ref": "inline int ConfigPage::get_page_seq(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_page_seq",
                    "extern": [
                        "int",
                        "ConfigPage$_$get_page_seq(ConfigPage const *param0)"
                    ],
                    "fn": "get_page_seq",
                    "indexed": "ConfigPage$8$get_page_seq",
                    "mangled": "_inCAAAAKe18",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ConfigPage const *"
                    ],
                    "c_ref": "ConfigPage$_$get_trust_level(ConfigPage const *param0)",
                    "c_type": "int",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_trust_level_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f74727573745f6c6576656c28293b",
                    "cpp_ref": "inline int ConfigPage::get_trust_level(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_trust_level",
                    "extern": [
                        "int",
                        "ConfigPage$_$get_trust_level(ConfigPage const *param0)"
                    ],
                    "fn": "get_trust_level",
                    "indexed": "ConfigPage$9$get_trust_level",
                    "mangled": "_inCAAAAK7vW",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "trust_level"
                    ],
                    "args": [
                        "int trust_level"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "ConfigPage *",
                        "int"
                    ],
                    "c_ref": "ConfigPage$_$set_trust_level(ConfigPage *param0, int param1)",
                    "c_type": "void",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_set_trust_level_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f74727573745f6c6576656c28706172616d31293b",
                    "cpp_ref": "inline void ConfigPage::set_trust_level(int trust_level)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$set_trust_level",
                    "extern": [
                        "void",
                        "ConfigPage$_$set_trust_level(ConfigPage *param0, int param1)"
                    ],
                    "fn": "set_trust_level",
                    "indexed": "ConfigPage$10$set_trust_level",
                    "mangled": "_inCAAAAQ6Y4",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ConfigPage const *"
                    ],
                    "c_ref": "ConfigPage$_$get_signature(ConfigPage const *param0)",
                    "c_type": "char const *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_signature_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f7369676e61747572652829292e635f73747228293b",
                    "cpp_ref": "inline std::string const &ConfigPage::get_signature(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_signature",
                    "extern": [
                        "char const *",
                        "ConfigPage$_$get_signature(ConfigPage const *param0)"
                    ],
                    "fn": "get_signature",
                    "indexed": "ConfigPage$11$get_signature",
                    "mangled": "_inCAAAAobQg",
                    "ot": "inline std::string const&",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ConfigPage *"
                    ],
                    "c_ref": "ConfigPage$_$clear(ConfigPage *param0)",
                    "c_type": "void",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_clear_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c65617228293b",
                    "cpp_ref": "void ConfigPage::clear(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$clear",
                    "extern": [
                        "void",
                        "ConfigPage$_$clear(ConfigPage *param0)"
                    ],
                    "fn": "clear",
                    "indexed": "ConfigPage$12$clear",
                    "mangled": "_inCAAAAp8Hx",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "in"
                    ],
                    "args": [
                        "std::istream &in"
                    ],
                    "argt": [
                        "std::istream&"
                    ],
                    "c_argv": [
                        "ConfigPage *",
                        "std::istream *"
                    ],
                    "c_ref": "ConfigPage$_$read_prc(ConfigPage *param0, std::istream *param1)",
                    "c_type": "bool",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_read_prc_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726561645f707263282a706172616d31293b",
                    "cpp_ref": "bool ConfigPage::read_prc(std::istream &in)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$read_prc",
                    "extern": [
                        "bool",
                        "ConfigPage$_$read_prc(ConfigPage *param0, std::istream *param1)"
                    ],
                    "fn": "read_prc",
                    "indexed": "ConfigPage$13$read_prc",
                    "mangled": "_inCAAAAhr02",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "in",
                        "password"
                    ],
                    "args": [
                        "std::istream &in",
                        "std::string const &password"
                    ],
                    "argt": [
                        "std::istream&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "ConfigPage *",
                        "std::istream *",
                        "char const *"
                    ],
                    "c_ref": "ConfigPage$_$read_encrypted_prc(ConfigPage *param0, std::istream *param1, char const *param2)",
                    "c_type": "bool",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_read_encrypted_prc_B_pps",
                    "cni_args": "pps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726561645f656e637279707465645f707263282a706172616d312c207374643a3a737472696e6728706172616d3229293b",
                    "cpp_ref": "bool ConfigPage::read_encrypted_prc(std::istream &in, std::string const &password)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$read_encrypted_prc",
                    "extern": [
                        "bool",
                        "ConfigPage$_$read_encrypted_prc(ConfigPage *param0, std::istream *param1, char const *param2)"
                    ],
                    "fn": "read_encrypted_prc",
                    "indexed": "ConfigPage$14$read_encrypted_prc",
                    "mangled": "_inCAAAAK9a3",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "variable",
                        "value"
                    ],
                    "args": [
                        "ConfigVariableCore *variable",
                        "std::string const &value"
                    ],
                    "argt": [
                        "ConfigVariableCore*",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "ConfigPage *",
                        "ConfigVariableCore *",
                        "char const *"
                    ],
                    "c_ref": "ConfigPage$_$make_declaration(ConfigPage *param0, ConfigVariableCore *param1, char const *param2)",
                    "c_type": "ConfigDeclaration *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_make_declaration_p_pps",
                    "cni_args": "pps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f6465636c61726174696f6e28706172616d312c207374643a3a737472696e6728706172616d3229293b",
                    "cpp_ref": "ConfigDeclaration *ConfigPage::make_declaration(ConfigVariableCore *variable, std::string const &value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$make_declaration",
                    "extern": [
                        "ConfigDeclaration *",
                        "ConfigPage$_$make_declaration(ConfigPage *param0, ConfigVariableCore *param1, char const *param2)"
                    ],
                    "fn": "make_declaration",
                    "indexed": "ConfigPage$15$make_declaration",
                    "mangled": "_inCAAAAH_US",
                    "ot": "ConfigDeclaration*",
                    "rt": "ConfigDeclaration"
                },
                {
                    "argc": 2,
                    "argn": [
                        "variable",
                        "value"
                    ],
                    "args": [
                        "std::string const &variable",
                        "std::string const &value"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "ConfigPage *",
                        "char const *",
                        "char const *"
                    ],
                    "c_ref": "ConfigPage$_$make_declaration(ConfigPage *param0, char const *param1, char const *param2)",
                    "c_type": "ConfigDeclaration *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_make_declaration_p_pss",
                    "cni_args": "pss",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f6465636c61726174696f6e287374643a3a737472696e6728706172616d31292c207374643a3a737472696e6728706172616d3229293b",
                    "cpp_ref": "ConfigDeclaration *ConfigPage::make_declaration(std::string const &variable, std::string const &value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$make_declaration",
                    "extern": [
                        "ConfigDeclaration *",
                        "ConfigPage$_$make_declaration(ConfigPage *param0, char const *param1, char const *param2)"
                    ],
                    "fn": "make_declaration",
                    "indexed": "ConfigPage$16$make_declaration",
                    "mangled": "_inCAAAAGLJN",
                    "ot": "ConfigDeclaration*",
                    "rt": "ConfigDeclaration"
                },
                {
                    "argc": 1,
                    "argn": [
                        "decl"
                    ],
                    "args": [
                        "ConfigDeclaration *decl"
                    ],
                    "argt": [
                        "ConfigDeclaration*"
                    ],
                    "c_argv": [
                        "ConfigPage *",
                        "ConfigDeclaration *"
                    ],
                    "c_ref": "ConfigPage$_$delete_declaration(ConfigPage *param0, ConfigDeclaration *param1)",
                    "c_type": "bool",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_delete_declaration_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e64656c6574655f6465636c61726174696f6e28706172616d31293b",
                    "cpp_ref": "bool ConfigPage::delete_declaration(ConfigDeclaration *decl)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$delete_declaration",
                    "extern": [
                        "bool",
                        "ConfigPage$_$delete_declaration(ConfigPage *param0, ConfigDeclaration *param1)"
                    ],
                    "fn": "delete_declaration",
                    "indexed": "ConfigPage$17$delete_declaration",
                    "mangled": "_inCAAAAUNQd",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ConfigPage const *"
                    ],
                    "c_ref": "ConfigPage$_$get_num_declarations(ConfigPage const *param0)",
                    "c_type": "std::size_t",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_num_declarations_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f6465636c61726174696f6e7328293b",
                    "cpp_ref": "std::size_t ConfigPage::get_num_declarations(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_num_declarations",
                    "extern": [
                        "std::size_t",
                        "ConfigPage$_$get_num_declarations(ConfigPage const *param0)"
                    ],
                    "fn": "get_num_declarations",
                    "indexed": "ConfigPage$18$get_num_declarations",
                    "mangled": "_inCAAAA4OlT",
                    "ot": "std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "ConfigPage const *",
                        "std::size_t"
                    ],
                    "c_ref": "ConfigPage$_$get_declaration(ConfigPage const *param0, std::size_t param1)",
                    "c_type": "ConfigDeclaration const *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_declaration_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6465636c61726174696f6e28706172616d31293b",
                    "cpp_ref": "ConfigDeclaration const *ConfigPage::get_declaration(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_declaration",
                    "extern": [
                        "ConfigDeclaration const *",
                        "ConfigPage$_$get_declaration(ConfigPage const *param0, std::size_t param1)"
                    ],
                    "fn": "get_declaration",
                    "indexed": "ConfigPage$19$get_declaration",
                    "mangled": "_inCAAAArbFa",
                    "ot": "ConfigDeclaration const*",
                    "rt": "ConfigDeclaration"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "ConfigPage *",
                        "std::size_t"
                    ],
                    "c_ref": "ConfigPage$_$modify_declaration(ConfigPage *param0, std::size_t param1)",
                    "c_type": "ConfigDeclaration *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_modify_declaration_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6d6f646966795f6465636c61726174696f6e28706172616d31293b",
                    "cpp_ref": "ConfigDeclaration *ConfigPage::modify_declaration(std::size_t n)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$modify_declaration",
                    "extern": [
                        "ConfigDeclaration *",
                        "ConfigPage$_$modify_declaration(ConfigPage *param0, std::size_t param1)"
                    ],
                    "fn": "modify_declaration",
                    "indexed": "ConfigPage$20$modify_declaration",
                    "mangled": "_inCAAAAHdB9",
                    "ot": "ConfigDeclaration*",
                    "rt": "ConfigDeclaration"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "ConfigPage const *",
                        "std::size_t"
                    ],
                    "c_ref": "ConfigPage$_$get_variable_name(ConfigPage const *param0, std::size_t param1)",
                    "c_type": "char const *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_variable_name_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f7661726961626c655f6e616d6528706172616d31293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string ConfigPage::get_variable_name(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_variable_name",
                    "extern": [
                        "char const *",
                        "ConfigPage$_$get_variable_name(ConfigPage const *param0, std::size_t param1)"
                    ],
                    "fn": "get_variable_name",
                    "indexed": "ConfigPage$21$get_variable_name",
                    "mangled": "_inCAAAAmuhF",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "ConfigPage const *",
                        "std::size_t"
                    ],
                    "c_ref": "ConfigPage$_$get_string_value(ConfigPage const *param0, std::size_t param1)",
                    "c_type": "char const *",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_get_string_value_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f737472696e675f76616c756528706172616d31293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string ConfigPage::get_string_value(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$get_string_value",
                    "extern": [
                        "char const *",
                        "ConfigPage$_$get_string_value(ConfigPage const *param0, std::size_t param1)"
                    ],
                    "fn": "get_string_value",
                    "indexed": "ConfigPage$22$get_string_value",
                    "mangled": "_inCAAAAiPgf",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "ConfigPage const *",
                        "std::size_t"
                    ],
                    "c_ref": "ConfigPage$_$is_variable_used(ConfigPage const *param0, std::size_t param1)",
                    "c_type": "bool",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_is_variable_used_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f7661726961626c655f7573656428706172616d31293b",
                    "cpp_ref": "bool ConfigPage::is_variable_used(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$is_variable_used",
                    "extern": [
                        "bool",
                        "ConfigPage$_$is_variable_used(ConfigPage const *param0, std::size_t param1)"
                    ],
                    "fn": "is_variable_used",
                    "indexed": "ConfigPage$23$is_variable_used",
                    "mangled": "_inCAAAA_22J",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "ConfigPage const *",
                        "std::ostream *"
                    ],
                    "c_ref": "ConfigPage$_$output(ConfigPage const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "void ConfigPage::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$output",
                    "extern": [
                        "void",
                        "ConfigPage$_$output(ConfigPage const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "ConfigPage$24$output",
                    "mangled": "_inCAAAAVsqK",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "ConfigPage const *",
                        "std::ostream *"
                    ],
                    "c_ref": "ConfigPage$_$output_brief_signature(ConfigPage const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_output_brief_signature_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f75747075745f62726965665f7369676e6174757265282a706172616d31293b",
                    "cpp_ref": "void ConfigPage::output_brief_signature(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$output_brief_signature",
                    "extern": [
                        "void",
                        "ConfigPage$_$output_brief_signature(ConfigPage const *param0, std::ostream *param1)"
                    ],
                    "fn": "output_brief_signature",
                    "indexed": "ConfigPage$25$output_brief_signature",
                    "mangled": "_inCAAAANMSr",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "ConfigPage const *",
                        "std::ostream *"
                    ],
                    "c_ref": "ConfigPage$_$write(ConfigPage const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "ConfigPage",
                    "cni": "ConfigPage_C_write_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d31293b",
                    "cpp_ref": "void ConfigPage::write(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ConfigPage$_$write",
                    "extern": [
                        "void",
                        "ConfigPage$_$write(ConfigPage const *param0, std::ostream *param1)"
                    ],
                    "fn": "write",
                    "indexed": "ConfigPage$26$write",
                    "mangled": "_inCAAAA6sZT",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "CopyOnWriteObject": {
            "bases": [
                "CachedTypedWritableReferenceCount"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "CopyOnWriteObject *"
                    ],
                    "c_ref": "CopyOnWriteObject$_$downcast_to_Geom(CopyOnWriteObject *param0)",
                    "c_type": "Geom *",
                    "cn": "CopyOnWriteObject",
                    "cni": "CopyOnWriteObject_C_downcast_to_Geom_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d202a29706172616d303b",
                    "cpp_ref": "Geom *CopyOnWriteObject::downcast_to_Geom(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "CopyOnWriteObject$_$downcast_to_Geom",
                    "extern": [
                        "Geom *",
                        "CopyOnWriteObject$_$downcast_to_Geom(CopyOnWriteObject *param0)"
                    ],
                    "fn": "downcast_to_Geom",
                    "indexed": "CopyOnWriteObject$1$downcast_to_Geom",
                    "mangled": "_inCAAAA7MTJ",
                    "ot": "Geom*",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "CopyOnWriteObject *"
                    ],
                    "c_ref": "CopyOnWriteObject$_$downcast_to_GeomPrimitive(CopyOnWriteObject *param0)",
                    "c_type": "GeomPrimitive *",
                    "cn": "CopyOnWriteObject",
                    "cni": "CopyOnWriteObject_C_downcast_to_GeomPrimitive_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d5072696d6974697665202a29706172616d303b",
                    "cpp_ref": "GeomPrimitive *CopyOnWriteObject::downcast_to_GeomPrimitive(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "CopyOnWriteObject$_$downcast_to_GeomPrimitive",
                    "extern": [
                        "GeomPrimitive *",
                        "CopyOnWriteObject$_$downcast_to_GeomPrimitive(CopyOnWriteObject *param0)"
                    ],
                    "fn": "downcast_to_GeomPrimitive",
                    "indexed": "CopyOnWriteObject$2$downcast_to_GeomPrimitive",
                    "mangled": "_inCAAAAdtth",
                    "ot": "GeomPrimitive*",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "CopyOnWriteObject *"
                    ],
                    "c_ref": "CopyOnWriteObject$_$downcast_to_GeomVertexData(CopyOnWriteObject *param0)",
                    "c_type": "GeomVertexData *",
                    "cn": "CopyOnWriteObject",
                    "cni": "CopyOnWriteObject_C_downcast_to_GeomVertexData_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d56657274657844617461202a29706172616d303b",
                    "cpp_ref": "GeomVertexData *CopyOnWriteObject::downcast_to_GeomVertexData(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "CopyOnWriteObject$_$downcast_to_GeomVertexData",
                    "extern": [
                        "GeomVertexData *",
                        "CopyOnWriteObject$_$downcast_to_GeomVertexData(CopyOnWriteObject *param0)"
                    ],
                    "fn": "downcast_to_GeomVertexData",
                    "indexed": "CopyOnWriteObject$3$downcast_to_GeomVertexData",
                    "mangled": "_inCAAAAT3AG",
                    "ot": "GeomVertexData*",
                    "rt": "GeomVertexData"
                }
            ]
        },
        "Engine": {
            "bases": [],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Engine$_$Engine()",
                    "c_type": "Engine *",
                    "cn": "Engine",
                    "cni": "Engine_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720456e67696e6528293b",
                    "cpp_ref": "Engine::Engine(void)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Engine$_$Engine",
                    "extern": [
                        "Engine *",
                        "Engine$_$Engine()"
                    ],
                    "fn": "Engine",
                    "indexed": "Engine$1$Engine",
                    "mangled": "_inCAAAAa_qA",
                    "ot": "",
                    "rt": "Engine"
                },
                {
                    "argc": 1,
                    "argn": [
                        "arg0"
                    ],
                    "args": [
                        "Engine const &"
                    ],
                    "argt": [
                        "Engine const&"
                    ],
                    "c_argv": [
                        "Engine const *"
                    ],
                    "c_ref": "Engine$_$Engine(Engine const *param0)",
                    "c_type": "Engine *",
                    "cn": "Engine",
                    "cni": "Engine_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720456e67696e65282a706172616d30293b",
                    "cpp_ref": "inline Engine::Engine(Engine const &) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Engine$_$Engine",
                    "extern": [
                        "Engine *",
                        "Engine$_$Engine(Engine const *param0)"
                    ],
                    "fn": "Engine",
                    "indexed": "Engine$2$Engine",
                    "mangled": "_inCAAAA4GrH",
                    "ot": "inline",
                    "rt": "Engine"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Engine *"
                    ],
                    "c_ref": "Engine$_$dtor(Engine *param0)",
                    "c_type": "void",
                    "cn": "Engine",
                    "cni": "Engine_C_dtor_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e64746f7228293b",
                    "cpp_ref": "void Engine::dtor(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$dtor",
                    "extern": [
                        "void",
                        "Engine$_$dtor(Engine *param0)"
                    ],
                    "fn": "dtor",
                    "indexed": "Engine$3$dtor",
                    "mangled": "_inCAAAAw9bJ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Engine$_$stop()",
                    "c_type": "void",
                    "cn": "Engine",
                    "cni": "Engine_C_stop_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "20202020456e67696e653a3a73746f7028293b",
                    "cpp_ref": "static void Engine::stop(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Engine$_$stop",
                    "extern": [
                        "void",
                        "Engine$_$stop()"
                    ],
                    "fn": "stop",
                    "indexed": "Engine$4$stop",
                    "mangled": "_inCAAAAUUz_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Engine$_$is_alive()",
                    "c_type": "int",
                    "cn": "Engine",
                    "cni": "Engine_C_is_alive_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20456e67696e653a3a69735f616c69766528293b",
                    "cpp_ref": "static int Engine::is_alive(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Engine$_$is_alive",
                    "extern": [
                        "int",
                        "Engine$_$is_alive()"
                    ],
                    "fn": "is_alive",
                    "indexed": "Engine$5$is_alive",
                    "mangled": "_inCAAAAviGn",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Engine *"
                    ],
                    "c_ref": "Engine$_$HelloEngine(Engine *param0)",
                    "c_type": "int",
                    "cn": "Engine",
                    "cni": "Engine_C_HelloEngine_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e48656c6c6f456e67696e6528293b",
                    "cpp_ref": "int Engine::HelloEngine(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$HelloEngine",
                    "extern": [
                        "int",
                        "Engine$_$HelloEngine(Engine *param0)"
                    ],
                    "fn": "HelloEngine",
                    "indexed": "Engine$6$HelloEngine",
                    "mangled": "_inCAAAARIEu",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 3,
                    "argn": [
                        "i",
                        "s",
                        "b"
                    ],
                    "args": [
                        "int i",
                        "std::string s",
                        "bool b"
                    ],
                    "argt": [
                        "int",
                        "std::string",
                        "bool"
                    ],
                    "c_argv": [
                        "Engine *",
                        "int",
                        "char const *",
                        "bool"
                    ],
                    "c_ref": "Engine$_$casetest(Engine *param0, int param1, char const *param2, bool param3)",
                    "c_type": "int",
                    "cn": "Engine",
                    "cni": "Engine_C_casetest_i_pisB",
                    "cni_args": "pisB",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636173657465737428706172616d312c207374643a3a737472696e6728706172616d32292c20706172616d33293b",
                    "cpp_ref": "int Engine::casetest(int i, std::string s, bool b)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$casetest",
                    "extern": [
                        "int",
                        "Engine$_$casetest(Engine *param0, int param1, char const *param2, bool param3)"
                    ],
                    "fn": "casetest",
                    "indexed": "Engine$7$casetest",
                    "mangled": "_inCAAAAu07o",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "char const *filename"
                    ],
                    "argt": [
                        "char const*"
                    ],
                    "c_argv": [
                        "Engine *",
                        "char const *"
                    ],
                    "c_ref": "Engine$_$load_model(Engine *param0, char const *param1)",
                    "c_type": "NodePath *",
                    "cn": "Engine",
                    "cni": "Engine_C_load_model_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6c6f61645f6d6f64656c28706172616d31293b",
                    "cpp_ref": "NodePath *Engine::load_model(char const *filename)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$load_model",
                    "extern": [
                        "NodePath *",
                        "Engine$_$load_model(Engine *param0, char const *param1)"
                    ],
                    "fn": "load_model",
                    "indexed": "Engine$8$load_model",
                    "mangled": "_inCAAAAFoZ4",
                    "ot": "NodePath*",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "data",
                        "gvw_name"
                    ],
                    "args": [
                        "GeomVertexData *data",
                        "char const *gvw_name"
                    ],
                    "argt": [
                        "GeomVertexData*",
                        "char const*"
                    ],
                    "c_argv": [
                        "Engine *",
                        "GeomVertexData *",
                        "char const *"
                    ],
                    "c_ref": "Engine$_$new_GeomVertexWriter(Engine *param0, GeomVertexData *param1, char const *param2)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "Engine",
                    "cni": "Engine_C_new_GeomVertexWriter_p_pps",
                    "cni_args": "pps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6e65775f47656f6d56657274657857726974657228706172616d312c20706172616d32293b",
                    "cpp_ref": "GeomVertexWriter *Engine::new_GeomVertexWriter(GeomVertexData *data, char const *gvw_name)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$new_GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "Engine$_$new_GeomVertexWriter(Engine *param0, GeomVertexData *param1, char const *param2)"
                    ],
                    "fn": "new_GeomVertexWriter",
                    "indexed": "Engine$9$new_GeomVertexWriter",
                    "mangled": "_inCAAAASkdf",
                    "ot": "GeomVertexWriter*",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 2,
                    "argn": [
                        "geom",
                        "pri"
                    ],
                    "args": [
                        "Geom *geom",
                        "GeomTriangles *pri"
                    ],
                    "argt": [
                        "Geom*",
                        "GeomTriangles*"
                    ],
                    "c_argv": [
                        "Engine *",
                        "Geom *",
                        "GeomTriangles *"
                    ],
                    "c_ref": "Engine$_$add_primitive(Engine *param0, Geom *param1, GeomTriangles *param2)",
                    "c_type": "void",
                    "cn": "Engine",
                    "cni": "Engine_C_add_primitive_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f7072696d697469766528706172616d312c20706172616d32293b",
                    "cpp_ref": "void Engine::add_primitive(Geom *geom, GeomTriangles *pri)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$add_primitive",
                    "extern": [
                        "void",
                        "Engine$_$add_primitive(Engine *param0, Geom *param1, GeomTriangles *param2)"
                    ],
                    "fn": "add_primitive",
                    "indexed": "Engine$10$add_primitive",
                    "mangled": "_inCAAAA_O4M",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pri"
                    ],
                    "args": [
                        "GeomTriangles *pri"
                    ],
                    "argt": [
                        "GeomTriangles*"
                    ],
                    "c_argv": [
                        "Engine *",
                        "GeomTriangles *"
                    ],
                    "c_ref": "Engine$_$close_primitive(Engine *param0, GeomTriangles *param1)",
                    "c_type": "void",
                    "cn": "Engine",
                    "cni": "Engine_C_close_primitive_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6f73655f7072696d697469766528706172616d31293b",
                    "cpp_ref": "void Engine::close_primitive(GeomTriangles *pri)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$close_primitive",
                    "extern": [
                        "void",
                        "Engine$_$close_primitive(Engine *param0, GeomTriangles *param1)"
                    ],
                    "fn": "close_primitive",
                    "indexed": "Engine$11$close_primitive",
                    "mangled": "_inCAAAA9r7J",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Engine *"
                    ],
                    "c_ref": "Engine$_$new_GeomTriangles(Engine *param0)",
                    "c_type": "PointerTo< GeomTriangles > *",
                    "cn": "Engine",
                    "cni": "Engine_C_new_GeomTriangles_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d547269616e676c6573203e28282a706172616d30292e6e65775f47656f6d547269616e676c65732829293b",
                    "cpp_ref": "PointerTo< GeomTriangles > Engine::new_GeomTriangles(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$new_GeomTriangles",
                    "extern": [
                        "PointerTo< GeomTriangles > *",
                        "Engine$_$new_GeomTriangles(Engine *param0)"
                    ],
                    "fn": "new_GeomTriangles",
                    "indexed": "Engine$12$new_GeomTriangles",
                    "mangled": "_inCAAAAn6WY",
                    "ot": "PointerTo< GeomTriangles >",
                    "rt": "GeomTriangles"
                },
                {
                    "argc": 3,
                    "argn": [
                        "size",
                        "geom_name",
                        "gvd_name"
                    ],
                    "args": [
                        "float size",
                        "char const *geom_name",
                        "char const *gvd_name"
                    ],
                    "argt": [
                        "float",
                        "char const*",
                        "char const*"
                    ],
                    "c_argv": [
                        "Engine *",
                        "float",
                        "char const *",
                        "char const *"
                    ],
                    "c_ref": "Engine$_$new_Cube(Engine *param0, float param1, char const *param2, char const *param3)",
                    "c_type": "NodePath *",
                    "cn": "Engine",
                    "cni": "Engine_C_new_Cube_p_pfss",
                    "cni_args": "pfss",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6e65775f4375626528706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "NodePath *Engine::new_Cube(float size, char const *geom_name, char const *gvd_name)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$new_Cube",
                    "extern": [
                        "NodePath *",
                        "Engine$_$new_Cube(Engine *param0, float param1, char const *param2, char const *param3)"
                    ],
                    "fn": "new_Cube",
                    "indexed": "Engine$13$new_Cube",
                    "mangled": "_inCAAAAPpvK",
                    "ot": "NodePath*",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mdl"
                    ],
                    "args": [
                        "NodePath *mdl"
                    ],
                    "argt": [
                        "NodePath*"
                    ],
                    "c_argv": [
                        "Engine *",
                        "NodePath *"
                    ],
                    "c_ref": "Engine$_$attach(Engine *param0, NodePath *param1)",
                    "c_type": "void",
                    "cn": "Engine",
                    "cni": "Engine_C_attach_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e61747461636828706172616d31293b",
                    "cpp_ref": "void Engine::attach(NodePath *mdl)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$attach",
                    "extern": [
                        "void",
                        "Engine$_$attach(Engine *param0, NodePath *param1)"
                    ],
                    "fn": "attach",
                    "indexed": "Engine$14$attach",
                    "mangled": "_inCAAAA3rLd",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "rc"
                    ],
                    "args": [
                        "ReferenceCount *rc"
                    ],
                    "argt": [
                        "ReferenceCount*"
                    ],
                    "c_argv": [
                        "ReferenceCount *"
                    ],
                    "c_ref": "Engine$_$inc_ref(ReferenceCount *param0)",
                    "c_type": "int",
                    "cn": "Engine",
                    "cni": "Engine_C_inc_ref_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20456e67696e653a3a696e635f72656628706172616d30293b",
                    "cpp_ref": "static int Engine::inc_ref(ReferenceCount *rc)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Engine$_$inc_ref",
                    "extern": [
                        "int",
                        "Engine$_$inc_ref(ReferenceCount *param0)"
                    ],
                    "fn": "inc_ref",
                    "indexed": "Engine$15$inc_ref",
                    "mangled": "_inCAAAAlJYA",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "rc"
                    ],
                    "args": [
                        "ReferenceCount *rc"
                    ],
                    "argt": [
                        "ReferenceCount*"
                    ],
                    "c_argv": [
                        "ReferenceCount *"
                    ],
                    "c_ref": "Engine$_$dec_ref(ReferenceCount *param0)",
                    "c_type": "int",
                    "cn": "Engine",
                    "cni": "Engine_C_dec_ref_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20456e67696e653a3a6465635f72656628706172616d30293b",
                    "cpp_ref": "static int Engine::dec_ref(ReferenceCount *rc)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Engine$_$dec_ref",
                    "extern": [
                        "int",
                        "Engine$_$dec_ref(ReferenceCount *param0)"
                    ],
                    "fn": "dec_ref",
                    "indexed": "Engine$16$dec_ref",
                    "mangled": "_inCAAAAr8mf",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Engine *"
                    ],
                    "c_ref": "Engine$_$build(Engine *param0)",
                    "c_type": "void",
                    "cn": "Engine",
                    "cni": "Engine_C_build_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6275696c6428293b",
                    "cpp_ref": "void Engine::build(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$build",
                    "extern": [
                        "void",
                        "Engine$_$build(Engine *param0)"
                    ],
                    "fn": "build",
                    "indexed": "Engine$17$build",
                    "mangled": "_inCAAAAB_Fq",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Engine *"
                    ],
                    "c_ref": "Engine$_$step(Engine *param0)",
                    "c_type": "void",
                    "cn": "Engine",
                    "cni": "Engine_C_step_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7374657028293b",
                    "cpp_ref": "void Engine::step(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$step",
                    "extern": [
                        "void",
                        "Engine$_$step(Engine *param0)"
                    ],
                    "fn": "step",
                    "indexed": "Engine$18$step",
                    "mangled": "_inCAAAAMIC_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Engine$_$get_version_string()",
                    "c_type": "char const *",
                    "cn": "Engine",
                    "cni": "Engine_C_get_version_string_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20456e67696e653a3a6765745f76657273696f6e5f737472696e6728293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string Engine::get_version_string(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Engine$_$get_version_string",
                    "extern": [
                        "char const *",
                        "Engine$_$get_version_string()"
                    ],
                    "fn": "get_version_string",
                    "indexed": "Engine$19$get_version_string",
                    "mangled": "_inCAAAAcpk6",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Engine const *"
                    ],
                    "c_ref": "Engine$_$get_wframe(Engine const *param0)",
                    "c_type": "WindowFramework *",
                    "cn": "Engine",
                    "cni": "Engine_C_get_wframe_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2028706172616d30292d3e776672616d653b",
                    "cpp_ref": "WindowFramework *Engine::get_wframe(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$get_wframe",
                    "extern": [
                        "WindowFramework *",
                        "Engine$_$get_wframe(Engine const *param0)"
                    ],
                    "fn": "get_wframe",
                    "indexed": "Engine$20$get_wframe",
                    "mangled": "_inCAAAA4rrc",
                    "ot": "WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "WindowFramework *value"
                    ],
                    "argt": [
                        "WindowFramework*"
                    ],
                    "c_argv": [
                        "Engine *",
                        "WindowFramework *"
                    ],
                    "c_ref": "Engine$_$set_wframe(Engine *param0, WindowFramework *param1)",
                    "c_type": "void",
                    "cn": "Engine",
                    "cni": "Engine_C_set_wframe_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "2020202028706172616d30292d3e776672616d65203d20706172616d313b",
                    "cpp_ref": "void Engine::set_wframe(WindowFramework *value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$set_wframe",
                    "extern": [
                        "void",
                        "Engine$_$set_wframe(Engine *param0, WindowFramework *param1)"
                    ],
                    "fn": "set_wframe",
                    "indexed": "Engine$21$set_wframe",
                    "mangled": "_inCAAAAGUc7",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Engine const *"
                    ],
                    "c_ref": "Engine$_$get_framework(Engine const *param0)",
                    "c_type": "PandaFramework *",
                    "cn": "Engine",
                    "cni": "Engine_C_get_framework_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2028706172616d30292d3e6672616d65776f726b3b",
                    "cpp_ref": "PandaFramework *Engine::get_framework(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$get_framework",
                    "extern": [
                        "PandaFramework *",
                        "Engine$_$get_framework(Engine const *param0)"
                    ],
                    "fn": "get_framework",
                    "indexed": "Engine$22$get_framework",
                    "mangled": "_inCAAAAHww4",
                    "ot": "PandaFramework*",
                    "rt": "PandaFramework"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "PandaFramework *value"
                    ],
                    "argt": [
                        "PandaFramework*"
                    ],
                    "c_argv": [
                        "Engine *",
                        "PandaFramework *"
                    ],
                    "c_ref": "Engine$_$set_framework(Engine *param0, PandaFramework *param1)",
                    "c_type": "void",
                    "cn": "Engine",
                    "cni": "Engine_C_set_framework_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "2020202028706172616d30292d3e6672616d65776f726b203d20706172616d313b",
                    "cpp_ref": "void Engine::set_framework(PandaFramework *value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Engine$_$set_framework",
                    "extern": [
                        "void",
                        "Engine$_$set_framework(Engine *param0, PandaFramework *param1)"
                    ],
                    "fn": "set_framework",
                    "indexed": "Engine$23$set_framework",
                    "mangled": "_inCAAAAbucf",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "Filename": {
            "bases": [],
            "enums": {
                "Flags": [
                    [
                        "F_binary",
                        16
                    ],
                    [
                        "F_pattern",
                        64
                    ],
                    [
                        "F_text",
                        32
                    ],
                    [
                        "F_type",
                        15
                    ]
                ],
                "Type": [
                    [
                        "T_dso",
                        1
                    ],
                    [
                        "T_executable",
                        2
                    ],
                    [
                        "T_general",
                        0
                    ]
                ]
            },
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Filename$_$Filename()",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d6528293b",
                    "cpp_ref": "inline Filename::Filename(void)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Filename$_$Filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$Filename()"
                    ],
                    "fn": "Filename",
                    "indexed": "Filename$1$Filename",
                    "mangled": "_inCAAAAzHmO",
                    "ot": "inline",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "from"
                    ],
                    "args": [
                        "Filename &&from"
                    ],
                    "argt": [
                        "Filename&&"
                    ],
                    "c_argv": [
                        "Filename *"
                    ],
                    "c_ref": "Filename$_$Filename(Filename *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d65282a706172616d30293b",
                    "cpp_ref": "inline Filename::Filename(Filename &&from) noexcept",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Filename$_$Filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$Filename(Filename *param0)"
                    ],
                    "fn": "Filename",
                    "indexed": "Filename$2$Filename",
                    "mangled": "_inCAAAATAyl",
                    "ot": "inline",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "copy"
                    ],
                    "args": [
                        "Filename const &copy"
                    ],
                    "argt": [
                        "Filename const&"
                    ],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$Filename(Filename const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_ctor_p_p_1_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d65282a706172616d30293b",
                    "cpp_ref": "inline Filename::Filename(Filename const &copy)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Filename$_$Filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$Filename(Filename const *param0)"
                    ],
                    "fn": "Filename",
                    "indexed": "Filename$3$Filename",
                    "mangled": "_inCAAAA0xIC",
                    "ot": "inline",
                    "rt": "Filename"
                },
                {
                    "argc": 2,
                    "argn": [
                        "dirname",
                        "basename"
                    ],
                    "args": [
                        "Filename const &dirname",
                        "Filename const &basename"
                    ],
                    "argt": [
                        "Filename const&",
                        "Filename const&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$Filename(Filename const *param0, Filename const *param1)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_ctor_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d65282a706172616d302c202a706172616d31293b",
                    "cpp_ref": "Filename::Filename(Filename const &dirname, Filename const &basename)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Filename$_$Filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$Filename(Filename const *param0, Filename const *param1)"
                    ],
                    "fn": "Filename",
                    "indexed": "Filename$4$Filename",
                    "mangled": "_inCAAAAz3ik",
                    "ot": "",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "char const *filename"
                    ],
                    "argt": [
                        "char const*"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Filename$_$Filename(char const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_ctor_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d6528706172616d30293b",
                    "cpp_ref": "inline Filename::Filename(char const *filename)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Filename$_$Filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$Filename(char const *param0)"
                    ],
                    "fn": "Filename",
                    "indexed": "Filename$5$Filename",
                    "mangled": "_inCAAAAYS9H",
                    "ot": "inline",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "std::string const &filename"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Filename$_$Filename(char const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_ctor_p_s_1_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d65287374643a3a737472696e6728706172616d3029293b",
                    "cpp_ref": "inline Filename::Filename(std::string const &filename)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Filename$_$Filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$Filename(char const *param0)"
                    ],
                    "fn": "Filename",
                    "indexed": "Filename$6$Filename",
                    "mangled": "_inCAAAAygg9",
                    "ot": "inline",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "std::wstring const &filename"
                    ],
                    "argt": [
                        "std::wstring const&"
                    ],
                    "c_argv": [
                        "wchar_t const *"
                    ],
                    "c_ref": "Filename$_$Filename(wchar_t const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_ctor_p_p_1_p_p_2_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d65287374643a3a77737472696e6728706172616d3029293b",
                    "cpp_ref": "inline Filename::Filename(std::wstring const &filename)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Filename$_$Filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$Filename(wchar_t const *param0)"
                    ],
                    "fn": "Filename",
                    "indexed": "Filename$7$Filename",
                    "mangled": "_inCAAAAw0Fd",
                    "ot": "inline",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "Filename const &filename"
                    ],
                    "argt": [
                        "Filename const&"
                    ],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$text_filename(Filename const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_text_filename_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a746578745f66696c656e616d65282a706172616d3029293b",
                    "cpp_ref": "static inline Filename Filename::text_filename(Filename const &filename)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$text_filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$text_filename(Filename const *param0)"
                    ],
                    "fn": "text_filename",
                    "indexed": "Filename$8$text_filename",
                    "mangled": "_inCAAAAC1b2",
                    "ot": "inline Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "std::string const &filename"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Filename$_$text_filename(char const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_text_filename_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a746578745f66696c656e616d65287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static inline Filename Filename::text_filename(std::string const &filename)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$text_filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$text_filename(char const *param0)"
                    ],
                    "fn": "text_filename",
                    "indexed": "Filename$9$text_filename",
                    "mangled": "_inCAAAAvNOt",
                    "ot": "inline Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "Filename const &filename"
                    ],
                    "argt": [
                        "Filename const&"
                    ],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$binary_filename(Filename const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_binary_filename_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a62696e6172795f66696c656e616d65282a706172616d3029293b",
                    "cpp_ref": "static inline Filename Filename::binary_filename(Filename const &filename)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$binary_filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$binary_filename(Filename const *param0)"
                    ],
                    "fn": "binary_filename",
                    "indexed": "Filename$10$binary_filename",
                    "mangled": "_inCAAAAbJPp",
                    "ot": "inline Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "std::string const &filename"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Filename$_$binary_filename(char const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_binary_filename_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a62696e6172795f66696c656e616d65287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static inline Filename Filename::binary_filename(std::string const &filename)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$binary_filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$binary_filename(char const *param0)"
                    ],
                    "fn": "binary_filename",
                    "indexed": "Filename$11$binary_filename",
                    "mangled": "_inCAAAAPh6h",
                    "ot": "inline Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "std::string const &filename"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Filename$_$dso_filename(char const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_dso_filename_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a64736f5f66696c656e616d65287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static inline Filename Filename::dso_filename(std::string const &filename)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$dso_filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$dso_filename(char const *param0)"
                    ],
                    "fn": "dso_filename",
                    "indexed": "Filename$12$dso_filename",
                    "mangled": "_inCAAAACpRv",
                    "ot": "inline Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "std::string const &filename"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Filename$_$executable_filename(char const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_executable_filename_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a65786563757461626c655f66696c656e616d65287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static inline Filename Filename::executable_filename(std::string const &filename)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$executable_filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$executable_filename(char const *param0)"
                    ],
                    "fn": "executable_filename",
                    "indexed": "Filename$13$executable_filename",
                    "mangled": "_inCAAAANs6u",
                    "ot": "inline Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "std::string const &filename"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Filename$_$pattern_filename(char const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_pattern_filename_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a7061747465726e5f66696c656e616d65287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static inline Filename Filename::pattern_filename(std::string const &filename)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$pattern_filename",
                    "extern": [
                        "Filename *",
                        "Filename$_$pattern_filename(char const *param0)"
                    ],
                    "fn": "pattern_filename",
                    "indexed": "Filename$14$pattern_filename",
                    "mangled": "_inCAAAAxSOe",
                    "ot": "inline Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 2,
                    "argn": [
                        "os_specific",
                        "type"
                    ],
                    "args": [
                        "std::string const &os_specific",
                        "Filename::Type type"
                    ],
                    "argt": [
                        "std::string const&",
                        "Filename::Type"
                    ],
                    "c_argv": [
                        "char const *",
                        "Filename::Type"
                    ],
                    "c_ref": "Filename$_$from_os_specific(char const *param0, Filename::Type param1)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_from_os_specific_p_sp",
                    "cni_args": "sp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a66726f6d5f6f735f7370656369666963287374643a3a737472696e6728706172616d30292c20706172616d3129293b",
                    "cpp_ref": "static Filename Filename::from_os_specific(std::string const &os_specific, Filename::Type type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$from_os_specific",
                    "extern": [
                        "Filename *",
                        "Filename$_$from_os_specific(char const *param0, Filename::Type param1)"
                    ],
                    "fn": "from_os_specific",
                    "indexed": "Filename$15$from_os_specific",
                    "mangled": "_inCAAAAaIaB",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "os_specific"
                    ],
                    "args": [
                        "std::string const &os_specific"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Filename$_$from_os_specific(char const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_from_os_specific_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a66726f6d5f6f735f7370656369666963287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static Filename Filename::from_os_specific(std::string const &os_specific, Filename::Type type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$from_os_specific",
                    "extern": [
                        "Filename *",
                        "Filename$_$from_os_specific(char const *param0)"
                    ],
                    "fn": "from_os_specific",
                    "indexed": "Filename$16$from_os_specific",
                    "mangled": "_inCAAAAEvxv",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 2,
                    "argn": [
                        "os_specific",
                        "type"
                    ],
                    "args": [
                        "std::wstring const &os_specific",
                        "Filename::Type type"
                    ],
                    "argt": [
                        "std::wstring const&",
                        "Filename::Type"
                    ],
                    "c_argv": [
                        "wchar_t const *",
                        "Filename::Type"
                    ],
                    "c_ref": "Filename$_$from_os_specific_w(wchar_t const *param0, Filename::Type param1)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_from_os_specific_w_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a66726f6d5f6f735f73706563696669635f77287374643a3a77737472696e6728706172616d30292c20706172616d3129293b",
                    "cpp_ref": "static Filename Filename::from_os_specific_w(std::wstring const &os_specific, Filename::Type type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$from_os_specific_w",
                    "extern": [
                        "Filename *",
                        "Filename$_$from_os_specific_w(wchar_t const *param0, Filename::Type param1)"
                    ],
                    "fn": "from_os_specific_w",
                    "indexed": "Filename$17$from_os_specific_w",
                    "mangled": "_inCAAAAOwIH",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "os_specific"
                    ],
                    "args": [
                        "std::wstring const &os_specific"
                    ],
                    "argt": [
                        "std::wstring const&"
                    ],
                    "c_argv": [
                        "wchar_t const *"
                    ],
                    "c_ref": "Filename$_$from_os_specific_w(wchar_t const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_from_os_specific_w_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a66726f6d5f6f735f73706563696669635f77287374643a3a77737472696e6728706172616d302929293b",
                    "cpp_ref": "static Filename Filename::from_os_specific_w(std::wstring const &os_specific, Filename::Type type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$from_os_specific_w",
                    "extern": [
                        "Filename *",
                        "Filename$_$from_os_specific_w(wchar_t const *param0)"
                    ],
                    "fn": "from_os_specific_w",
                    "indexed": "Filename$18$from_os_specific_w",
                    "mangled": "_inCAAAAVnxx",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 2,
                    "argn": [
                        "user_string",
                        "type"
                    ],
                    "args": [
                        "std::string const &user_string",
                        "Filename::Type type"
                    ],
                    "argt": [
                        "std::string const&",
                        "Filename::Type"
                    ],
                    "c_argv": [
                        "char const *",
                        "Filename::Type"
                    ],
                    "c_ref": "Filename$_$expand_from(char const *param0, Filename::Type param1)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_expand_from_p_sp",
                    "cni_args": "sp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a657870616e645f66726f6d287374643a3a737472696e6728706172616d30292c20706172616d3129293b",
                    "cpp_ref": "static Filename Filename::expand_from(std::string const &user_string, Filename::Type type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$expand_from",
                    "extern": [
                        "Filename *",
                        "Filename$_$expand_from(char const *param0, Filename::Type param1)"
                    ],
                    "fn": "expand_from",
                    "indexed": "Filename$19$expand_from",
                    "mangled": "_inCAAAASufR",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 1,
                    "argn": [
                        "user_string"
                    ],
                    "args": [
                        "std::string const &user_string"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "Filename$_$expand_from(char const *param0)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_expand_from_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a657870616e645f66726f6d287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static Filename Filename::expand_from(std::string const &user_string, Filename::Type type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$expand_from",
                    "extern": [
                        "Filename *",
                        "Filename$_$expand_from(char const *param0)"
                    ],
                    "fn": "expand_from",
                    "indexed": "Filename$20$expand_from",
                    "mangled": "_inCAAAABIso",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 4,
                    "argn": [
                        "dirname",
                        "prefix",
                        "suffix",
                        "type"
                    ],
                    "args": [
                        "std::string const &dirname",
                        "std::string const &prefix",
                        "std::string const &suffix",
                        "Filename::Type type"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&",
                        "std::string const&",
                        "Filename::Type"
                    ],
                    "c_argv": [
                        "char const *",
                        "char const *",
                        "char const *",
                        "Filename::Type"
                    ],
                    "c_ref": "Filename$_$temporary(char const *param0, char const *param1, char const *param2, Filename::Type param3)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_temporary_p_sssp",
                    "cni_args": "sssp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a74656d706f72617279287374643a3a737472696e6728706172616d30292c207374643a3a737472696e6728706172616d31292c207374643a3a737472696e6728706172616d32292c20706172616d3329293b",
                    "cpp_ref": "static Filename Filename::temporary(std::string const &dirname, std::string const &prefix, std::string const &suffix, Filename::Type type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$temporary",
                    "extern": [
                        "Filename *",
                        "Filename$_$temporary(char const *param0, char const *param1, char const *param2, Filename::Type param3)"
                    ],
                    "fn": "temporary",
                    "indexed": "Filename$21$temporary",
                    "mangled": "_inCAAAAWnrq",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 3,
                    "argn": [
                        "dirname",
                        "prefix",
                        "suffix"
                    ],
                    "args": [
                        "std::string const &dirname",
                        "std::string const &prefix",
                        "std::string const &suffix"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *",
                        "char const *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$temporary(char const *param0, char const *param1, char const *param2)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_temporary_p_sss",
                    "cni_args": "sss",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a74656d706f72617279287374643a3a737472696e6728706172616d30292c207374643a3a737472696e6728706172616d31292c207374643a3a737472696e6728706172616d322929293b",
                    "cpp_ref": "static Filename Filename::temporary(std::string const &dirname, std::string const &prefix, std::string const &suffix, Filename::Type type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$temporary",
                    "extern": [
                        "Filename *",
                        "Filename$_$temporary(char const *param0, char const *param1, char const *param2)"
                    ],
                    "fn": "temporary",
                    "indexed": "Filename$22$temporary",
                    "mangled": "_inCAAAAkS5B",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 2,
                    "argn": [
                        "dirname",
                        "prefix"
                    ],
                    "args": [
                        "std::string const &dirname",
                        "std::string const &prefix"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$temporary(char const *param0, char const *param1)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_temporary_p_ss",
                    "cni_args": "ss",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d652846696c656e616d653a3a74656d706f72617279287374643a3a737472696e6728706172616d30292c207374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "static Filename Filename::temporary(std::string const &dirname, std::string const &prefix, std::string const &suffix, Filename::Type type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$temporary",
                    "extern": [
                        "Filename *",
                        "Filename$_$temporary(char const *param0, char const *param1)"
                    ],
                    "fn": "temporary",
                    "indexed": "Filename$23$temporary",
                    "mangled": "_inCAAAAwIqG",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Filename$_$get_home_directory()",
                    "c_type": "Filename const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_home_directory_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20262846696c656e616d653a3a6765745f686f6d655f6469726563746f72792829293b",
                    "cpp_ref": "static Filename const &Filename::get_home_directory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$get_home_directory",
                    "extern": [
                        "Filename const *",
                        "Filename$_$get_home_directory()"
                    ],
                    "fn": "get_home_directory",
                    "indexed": "Filename$24$get_home_directory",
                    "mangled": "_inCAAAAf_0B",
                    "ot": "Filename const&",
                    "rt": "Filename"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Filename$_$get_temp_directory()",
                    "c_type": "Filename const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_temp_directory_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20262846696c656e616d653a3a6765745f74656d705f6469726563746f72792829293b",
                    "cpp_ref": "static Filename const &Filename::get_temp_directory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$get_temp_directory",
                    "extern": [
                        "Filename const *",
                        "Filename$_$get_temp_directory()"
                    ],
                    "fn": "get_temp_directory",
                    "indexed": "Filename$25$get_temp_directory",
                    "mangled": "_inCAAAAeDx2",
                    "ot": "Filename const&",
                    "rt": "Filename"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Filename$_$get_user_appdata_directory()",
                    "c_type": "Filename const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_user_appdata_directory_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20262846696c656e616d653a3a6765745f757365725f617070646174615f6469726563746f72792829293b",
                    "cpp_ref": "static Filename const &Filename::get_user_appdata_directory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$get_user_appdata_directory",
                    "extern": [
                        "Filename const *",
                        "Filename$_$get_user_appdata_directory()"
                    ],
                    "fn": "get_user_appdata_directory",
                    "indexed": "Filename$26$get_user_appdata_directory",
                    "mangled": "_inCAAAA4CLy",
                    "ot": "Filename const&",
                    "rt": "Filename"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Filename$_$get_common_appdata_directory()",
                    "c_type": "Filename const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_common_appdata_directory_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20262846696c656e616d653a3a6765745f636f6d6d6f6e5f617070646174615f6469726563746f72792829293b",
                    "cpp_ref": "static Filename const &Filename::get_common_appdata_directory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$get_common_appdata_directory",
                    "extern": [
                        "Filename const *",
                        "Filename$_$get_common_appdata_directory()"
                    ],
                    "fn": "get_common_appdata_directory",
                    "indexed": "Filename$27$get_common_appdata_directory",
                    "mangled": "_inCAAAAw0eY",
                    "ot": "Filename const&",
                    "rt": "Filename"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$c_str(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_c_str_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e635f73747228293b",
                    "cpp_ref": "inline char const *Filename::c_str(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$c_str",
                    "extern": [
                        "char const *",
                        "Filename$_$c_str(Filename const *param0)"
                    ],
                    "fn": "c_str",
                    "indexed": "Filename$28$c_str",
                    "mangled": "_inCAAAAmyvU",
                    "ot": "inline char const*",
                    "rt": "char"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$empty(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_empty_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e656d70747928293b",
                    "cpp_ref": "inline bool Filename::empty(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$empty",
                    "extern": [
                        "bool",
                        "Filename$_$empty(Filename const *param0)"
                    ],
                    "fn": "empty",
                    "indexed": "Filename$29$empty",
                    "mangled": "_inCAAAAOFzc",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$length(Filename const *param0)",
                    "c_type": "std::size_t",
                    "cn": "Filename",
                    "cni": "Filename_C_length_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6c656e67746828293b",
                    "cpp_ref": "inline std::size_t Filename::length(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$length",
                    "extern": [
                        "std::size_t",
                        "Filename$_$length(Filename const *param0)"
                    ],
                    "fn": "length",
                    "indexed": "Filename$30$length",
                    "mangled": "_inCAAAAgE4s",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "begin"
                    ],
                    "args": [
                        "std::size_t begin"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::size_t"
                    ],
                    "c_ref": "Filename$_$substr(Filename const *param0, std::size_t param1)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_substr_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e73756273747228706172616d31293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Filename::substr(std::size_t begin) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$substr",
                    "extern": [
                        "char const *",
                        "Filename$_$substr(Filename const *param0, std::size_t param1)"
                    ],
                    "fn": "substr",
                    "indexed": "Filename$31$substr",
                    "mangled": "_inCAAAAIKWA",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 2,
                    "argn": [
                        "begin",
                        "end"
                    ],
                    "args": [
                        "std::size_t begin",
                        "std::size_t end"
                    ],
                    "argt": [
                        "std::size_t",
                        "std::size_t"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::size_t",
                        "std::size_t"
                    ],
                    "c_ref": "Filename$_$substr(Filename const *param0, std::size_t param1, std::size_t param2)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_substr_s_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e73756273747228706172616d312c20706172616d32293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Filename::substr(std::size_t begin, std::size_t end) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$substr",
                    "extern": [
                        "char const *",
                        "Filename$_$substr(Filename const *param0, std::size_t param1, std::size_t param2)"
                    ],
                    "fn": "substr",
                    "indexed": "Filename$32$substr",
                    "mangled": "_inCAAAAXWsr",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_fullpath(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_fullpath_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f66756c6c7061746828293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Filename::get_fullpath(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_fullpath",
                    "extern": [
                        "char const *",
                        "Filename$_$get_fullpath(Filename const *param0)"
                    ],
                    "fn": "get_fullpath",
                    "indexed": "Filename$33$get_fullpath",
                    "mangled": "_inCAAAAFzJX",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_fullpath_w(Filename const *param0)",
                    "c_type": "wchar_t const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_fullpath_w_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "202020207374617469632077737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f66756c6c706174685f7728293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::wstring Filename::get_fullpath_w(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_fullpath_w",
                    "extern": [
                        "wchar_t const *",
                        "Filename$_$get_fullpath_w(Filename const *param0)"
                    ],
                    "fn": "get_fullpath_w",
                    "indexed": "Filename$34$get_fullpath_w",
                    "mangled": "_inCAAAAEfKG",
                    "ot": "inline std::wstring",
                    "rt": "std::wstring"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_dirname(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_dirname_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f6469726e616d6528293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Filename::get_dirname(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_dirname",
                    "extern": [
                        "char const *",
                        "Filename$_$get_dirname(Filename const *param0)"
                    ],
                    "fn": "get_dirname",
                    "indexed": "Filename$35$get_dirname",
                    "mangled": "_inCAAAAnZLo",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_basename(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_basename_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f626173656e616d6528293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Filename::get_basename(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_basename",
                    "extern": [
                        "char const *",
                        "Filename$_$get_basename(Filename const *param0)"
                    ],
                    "fn": "get_basename",
                    "indexed": "Filename$36$get_basename",
                    "mangled": "_inCAAAAdGTD",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_fullpath_wo_extension(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_fullpath_wo_extension_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f66756c6c706174685f776f5f657874656e73696f6e28293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Filename::get_fullpath_wo_extension(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_fullpath_wo_extension",
                    "extern": [
                        "char const *",
                        "Filename$_$get_fullpath_wo_extension(Filename const *param0)"
                    ],
                    "fn": "get_fullpath_wo_extension",
                    "indexed": "Filename$37$get_fullpath_wo_extension",
                    "mangled": "_inCAAAApN0c",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_basename_wo_extension(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_basename_wo_extension_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f626173656e616d655f776f5f657874656e73696f6e28293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Filename::get_basename_wo_extension(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_basename_wo_extension",
                    "extern": [
                        "char const *",
                        "Filename$_$get_basename_wo_extension(Filename const *param0)"
                    ],
                    "fn": "get_basename_wo_extension",
                    "indexed": "Filename$38$get_basename_wo_extension",
                    "mangled": "_inCAAAANi_I",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_extension(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_extension_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f657874656e73696f6e28293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Filename::get_extension(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_extension",
                    "extern": [
                        "char const *",
                        "Filename$_$get_extension(Filename const *param0)"
                    ],
                    "fn": "get_extension",
                    "indexed": "Filename$39$get_extension",
                    "mangled": "_inCAAAA_MQ8",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "s"
                    ],
                    "args": [
                        "std::string const &s"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$set_fullpath(Filename *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_fullpath_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f66756c6c70617468287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void Filename::set_fullpath(std::string const &s)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_fullpath",
                    "extern": [
                        "void",
                        "Filename$_$set_fullpath(Filename *param0, char const *param1)"
                    ],
                    "fn": "set_fullpath",
                    "indexed": "Filename$40$set_fullpath",
                    "mangled": "_inCAAAAiBlJ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "s"
                    ],
                    "args": [
                        "std::string const &s"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$set_dirname(Filename *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_dirname_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6469726e616d65287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void Filename::set_dirname(std::string const &s)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_dirname",
                    "extern": [
                        "void",
                        "Filename$_$set_dirname(Filename *param0, char const *param1)"
                    ],
                    "fn": "set_dirname",
                    "indexed": "Filename$41$set_dirname",
                    "mangled": "_inCAAAAMTmS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "s"
                    ],
                    "args": [
                        "std::string const &s"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$set_basename(Filename *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_basename_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f626173656e616d65287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void Filename::set_basename(std::string const &s)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_basename",
                    "extern": [
                        "void",
                        "Filename$_$set_basename(Filename *param0, char const *param1)"
                    ],
                    "fn": "set_basename",
                    "indexed": "Filename$42$set_basename",
                    "mangled": "_inCAAAAnzu1",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "s"
                    ],
                    "args": [
                        "std::string const &s"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$set_fullpath_wo_extension(Filename *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_fullpath_wo_extension_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f66756c6c706174685f776f5f657874656e73696f6e287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void Filename::set_fullpath_wo_extension(std::string const &s)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_fullpath_wo_extension",
                    "extern": [
                        "void",
                        "Filename$_$set_fullpath_wo_extension(Filename *param0, char const *param1)"
                    ],
                    "fn": "set_fullpath_wo_extension",
                    "indexed": "Filename$43$set_fullpath_wo_extension",
                    "mangled": "_inCAAAA8yGI",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "s"
                    ],
                    "args": [
                        "std::string const &s"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$set_basename_wo_extension(Filename *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_basename_wo_extension_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f626173656e616d655f776f5f657874656e73696f6e287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void Filename::set_basename_wo_extension(std::string const &s)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_basename_wo_extension",
                    "extern": [
                        "void",
                        "Filename$_$set_basename_wo_extension(Filename *param0, char const *param1)"
                    ],
                    "fn": "set_basename_wo_extension",
                    "indexed": "Filename$44$set_basename_wo_extension",
                    "mangled": "_inCAAAAVNQ0",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "s"
                    ],
                    "args": [
                        "std::string const &s"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$set_extension(Filename *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_extension_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f657874656e73696f6e287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void Filename::set_extension(std::string const &s)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_extension",
                    "extern": [
                        "void",
                        "Filename$_$set_extension(Filename *param0, char const *param1)"
                    ],
                    "fn": "set_extension",
                    "indexed": "Filename$45$set_extension",
                    "mangled": "_inCAAAAdpGv",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename *"
                    ],
                    "c_ref": "Filename$_$set_binary(Filename *param0)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_binary_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696e61727928293b",
                    "cpp_ref": "inline void Filename::set_binary(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_binary",
                    "extern": [
                        "void",
                        "Filename$_$set_binary(Filename *param0)"
                    ],
                    "fn": "set_binary",
                    "indexed": "Filename$46$set_binary",
                    "mangled": "_inCAAAAK9mc",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename *"
                    ],
                    "c_ref": "Filename$_$set_text(Filename *param0)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_text_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787428293b",
                    "cpp_ref": "inline void Filename::set_text(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_text",
                    "extern": [
                        "void",
                        "Filename$_$set_text(Filename *param0)"
                    ],
                    "fn": "set_text",
                    "indexed": "Filename$47$set_text",
                    "mangled": "_inCAAAABixh",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$is_binary(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_is_binary_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f62696e61727928293b",
                    "cpp_ref": "inline bool Filename::is_binary(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$is_binary",
                    "extern": [
                        "bool",
                        "Filename$_$is_binary(Filename const *param0)"
                    ],
                    "fn": "is_binary",
                    "indexed": "Filename$48$is_binary",
                    "mangled": "_inCAAAAnswQ",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$is_text(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_is_text_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f7465787428293b",
                    "cpp_ref": "inline bool Filename::is_text(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$is_text",
                    "extern": [
                        "bool",
                        "Filename$_$is_text(Filename const *param0)"
                    ],
                    "fn": "is_text",
                    "indexed": "Filename$49$is_text",
                    "mangled": "_inCAAAAf3Vw",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$is_binary_or_text(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_is_binary_or_text_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f62696e6172795f6f725f7465787428293b",
                    "cpp_ref": "inline bool Filename::is_binary_or_text(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$is_binary_or_text",
                    "extern": [
                        "bool",
                        "Filename$_$is_binary_or_text(Filename const *param0)"
                    ],
                    "fn": "is_binary_or_text",
                    "indexed": "Filename$50$is_binary_or_text",
                    "mangled": "_inCAAAAOiJI",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "Filename::Type type"
                    ],
                    "argt": [
                        "Filename::Type"
                    ],
                    "c_argv": [
                        "Filename *",
                        "Filename::Type"
                    ],
                    "c_ref": "Filename$_$set_type(Filename *param0, Filename::Type param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_type_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7479706528706172616d31293b",
                    "cpp_ref": "inline void Filename::set_type(Filename::Type type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_type",
                    "extern": [
                        "void",
                        "Filename$_$set_type(Filename *param0, Filename::Type param1)"
                    ],
                    "fn": "set_type",
                    "indexed": "Filename$51$set_type",
                    "mangled": "_inCAAAAc7yW",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_type(Filename const *param0)",
                    "c_type": "Filename::Type",
                    "cn": "Filename",
                    "cni": "Filename_C_get_type_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7479706528293b",
                    "cpp_ref": "inline Filename::Type Filename::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_type",
                    "extern": [
                        "Filename::Type",
                        "Filename$_$get_type(Filename const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "Filename$52$get_type",
                    "mangled": "_inCAAAAELir",
                    "ot": "inline Filename::Type",
                    "rt": "Filename::Type"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pattern"
                    ],
                    "args": [
                        "bool pattern"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "Filename *",
                        "bool"
                    ],
                    "c_ref": "Filename$_$set_pattern(Filename *param0, bool param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_pattern_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7061747465726e28706172616d31293b",
                    "cpp_ref": "inline void Filename::set_pattern(bool pattern)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_pattern",
                    "extern": [
                        "void",
                        "Filename$_$set_pattern(Filename *param0, bool param1)"
                    ],
                    "fn": "set_pattern",
                    "indexed": "Filename$53$set_pattern",
                    "mangled": "_inCAAAA0_BT",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_pattern(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_get_pattern_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7061747465726e28293b",
                    "cpp_ref": "inline bool Filename::get_pattern(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_pattern",
                    "extern": [
                        "bool",
                        "Filename$_$get_pattern(Filename const *param0)"
                    ],
                    "fn": "get_pattern",
                    "indexed": "Filename$54$get_pattern",
                    "mangled": "_inCAAAAJg4Y",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$has_hash(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_has_hash_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f6861736828293b",
                    "cpp_ref": "inline bool Filename::has_hash(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$has_hash",
                    "extern": [
                        "bool",
                        "Filename$_$has_hash(Filename const *param0)"
                    ],
                    "fn": "has_hash",
                    "indexed": "Filename$55$has_hash",
                    "mangled": "_inCAAAANmUz",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index"
                    ],
                    "args": [
                        "int index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "int"
                    ],
                    "c_ref": "Filename$_$get_filename_index(Filename const *param0, int param1)",
                    "c_type": "Filename *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_filename_index_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772046696c656e616d6528282a706172616d30292e6765745f66696c656e616d655f696e64657828706172616d3129293b",
                    "cpp_ref": "Filename Filename::get_filename_index(int index) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_filename_index",
                    "extern": [
                        "Filename *",
                        "Filename$_$get_filename_index(Filename const *param0, int param1)"
                    ],
                    "fn": "get_filename_index",
                    "indexed": "Filename$56$get_filename_index",
                    "mangled": "_inCAAAAq4gP",
                    "ot": "Filename",
                    "rt": "Filename"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_hash_to_end(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_get_hash_to_end_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f686173685f746f5f656e6428293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Filename::get_hash_to_end(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_hash_to_end",
                    "extern": [
                        "char const *",
                        "Filename$_$get_hash_to_end(Filename const *param0)"
                    ],
                    "fn": "get_hash_to_end",
                    "indexed": "Filename$57$get_hash_to_end",
                    "mangled": "_inCAAAA4SYs",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "s"
                    ],
                    "args": [
                        "std::string const &s"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$set_hash_to_end(Filename *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_hash_to_end_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f686173685f746f5f656e64287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void Filename::set_hash_to_end(std::string const &s)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$set_hash_to_end",
                    "extern": [
                        "void",
                        "Filename$_$set_hash_to_end(Filename *param0, char const *param1)"
                    ],
                    "fn": "set_hash_to_end",
                    "indexed": "Filename$58$set_hash_to_end",
                    "mangled": "_inCAAAApC53",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "components"
                    ],
                    "args": [
                        "vector_string &components"
                    ],
                    "argt": [
                        "vector_string&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "vector_string *"
                    ],
                    "c_ref": "Filename$_$extract_components(Filename const *param0, vector_string *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_extract_components_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e657874726163745f636f6d706f6e656e7473282a706172616d31293b",
                    "cpp_ref": "void Filename::extract_components(vector_string &components) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$extract_components",
                    "extern": [
                        "void",
                        "Filename$_$extract_components(Filename const *param0, vector_string *param1)"
                    ],
                    "fn": "extract_components",
                    "indexed": "Filename$59$extract_components",
                    "mangled": "_inCAAAAMo1r",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename *"
                    ],
                    "c_ref": "Filename$_$standardize(Filename *param0)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_standardize_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7374616e64617264697a6528293b",
                    "cpp_ref": "void Filename::standardize(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$standardize",
                    "extern": [
                        "void",
                        "Filename$_$standardize(Filename *param0)"
                    ],
                    "fn": "standardize",
                    "indexed": "Filename$60$standardize",
                    "mangled": "_inCAAAAMUbk",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$is_local(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_is_local_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f6c6f63616c28293b",
                    "cpp_ref": "inline bool Filename::is_local(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$is_local",
                    "extern": [
                        "bool",
                        "Filename$_$is_local(Filename const *param0)"
                    ],
                    "fn": "is_local",
                    "indexed": "Filename$61$is_local",
                    "mangled": "_inCAAAAGI_b",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$is_fully_qualified(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_is_fully_qualified_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f66756c6c795f7175616c696669656428293b",
                    "cpp_ref": "inline bool Filename::is_fully_qualified(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$is_fully_qualified",
                    "extern": [
                        "bool",
                        "Filename$_$is_fully_qualified(Filename const *param0)"
                    ],
                    "fn": "is_fully_qualified",
                    "indexed": "Filename$62$is_fully_qualified",
                    "mangled": "_inCAAAAtIAk",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename *"
                    ],
                    "c_ref": "Filename$_$make_absolute(Filename *param0)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_make_absolute_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d616b655f6162736f6c75746528293b",
                    "cpp_ref": "void Filename::make_absolute(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$make_absolute",
                    "extern": [
                        "void",
                        "Filename$_$make_absolute(Filename *param0)"
                    ],
                    "fn": "make_absolute",
                    "indexed": "Filename$63$make_absolute",
                    "mangled": "_inCAAAA_eKM",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "start_directory"
                    ],
                    "args": [
                        "Filename const &start_directory"
                    ],
                    "argt": [
                        "Filename const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$make_absolute(Filename *param0, Filename const *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_make_absolute_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d616b655f6162736f6c757465282a706172616d31293b",
                    "cpp_ref": "void Filename::make_absolute(Filename const &start_directory)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$make_absolute",
                    "extern": [
                        "void",
                        "Filename$_$make_absolute(Filename *param0, Filename const *param1)"
                    ],
                    "fn": "make_absolute",
                    "indexed": "Filename$64$make_absolute",
                    "mangled": "_inCAAAAudOz",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename *"
                    ],
                    "c_ref": "Filename$_$make_canonical(Filename *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_make_canonical_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f63616e6f6e6963616c28293b",
                    "cpp_ref": "bool Filename::make_canonical(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$make_canonical",
                    "extern": [
                        "bool",
                        "Filename$_$make_canonical(Filename *param0)"
                    ],
                    "fn": "make_canonical",
                    "indexed": "Filename$65$make_canonical",
                    "mangled": "_inCAAAAtwJA",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename *"
                    ],
                    "c_ref": "Filename$_$make_true_case(Filename *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_make_true_case_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f747275655f6361736528293b",
                    "cpp_ref": "bool Filename::make_true_case(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$make_true_case",
                    "extern": [
                        "bool",
                        "Filename$_$make_true_case(Filename *param0)"
                    ],
                    "fn": "make_true_case",
                    "indexed": "Filename$66$make_true_case",
                    "mangled": "_inCAAAAX1o1",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$to_os_specific(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_to_os_specific_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e746f5f6f735f737065636966696328293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string Filename::to_os_specific(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$to_os_specific",
                    "extern": [
                        "char const *",
                        "Filename$_$to_os_specific(Filename const *param0)"
                    ],
                    "fn": "to_os_specific",
                    "indexed": "Filename$67$to_os_specific",
                    "mangled": "_inCAAAAHThn",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$to_os_specific_w(Filename const *param0)",
                    "c_type": "wchar_t const *",
                    "cn": "Filename",
                    "cni": "Filename_C_to_os_specific_w_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "202020207374617469632077737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e746f5f6f735f73706563696669635f7728293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::wstring Filename::to_os_specific_w(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$to_os_specific_w",
                    "extern": [
                        "wchar_t const *",
                        "Filename$_$to_os_specific_w(Filename const *param0)"
                    ],
                    "fn": "to_os_specific_w",
                    "indexed": "Filename$68$to_os_specific_w",
                    "mangled": "_inCAAAAmUcX",
                    "ot": "std::wstring",
                    "rt": "std::wstring"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$to_os_generic(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_to_os_generic_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e746f5f6f735f67656e6572696328293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string Filename::to_os_generic(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$to_os_generic",
                    "extern": [
                        "char const *",
                        "Filename$_$to_os_generic(Filename const *param0)"
                    ],
                    "fn": "to_os_generic",
                    "indexed": "Filename$69$to_os_generic",
                    "mangled": "_inCAAAAT7Xd",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$to_os_short_name(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_to_os_short_name_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e746f5f6f735f73686f72745f6e616d6528293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string Filename::to_os_short_name(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$to_os_short_name",
                    "extern": [
                        "char const *",
                        "Filename$_$to_os_short_name(Filename const *param0)"
                    ],
                    "fn": "to_os_short_name",
                    "indexed": "Filename$70$to_os_short_name",
                    "mangled": "_inCAAAAXTVO",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$to_os_long_name(Filename const *param0)",
                    "c_type": "char const *",
                    "cn": "Filename",
                    "cni": "Filename_C_to_os_long_name_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e746f5f6f735f6c6f6e675f6e616d6528293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string Filename::to_os_long_name(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$to_os_long_name",
                    "extern": [
                        "char const *",
                        "Filename$_$to_os_long_name(Filename const *param0)"
                    ],
                    "fn": "to_os_long_name",
                    "indexed": "Filename$71$to_os_long_name",
                    "mangled": "_inCAAAAo4Sv",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$exists(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_exists_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e65786973747328293b",
                    "cpp_ref": "bool Filename::exists(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$exists",
                    "extern": [
                        "bool",
                        "Filename$_$exists(Filename const *param0)"
                    ],
                    "fn": "exists",
                    "indexed": "Filename$72$exists",
                    "mangled": "_inCAAAAXz2_",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$is_regular_file(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_is_regular_file_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f726567756c61725f66696c6528293b",
                    "cpp_ref": "bool Filename::is_regular_file(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$is_regular_file",
                    "extern": [
                        "bool",
                        "Filename$_$is_regular_file(Filename const *param0)"
                    ],
                    "fn": "is_regular_file",
                    "indexed": "Filename$73$is_regular_file",
                    "mangled": "_inCAAAA4vqn",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$is_writable(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_is_writable_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f7772697461626c6528293b",
                    "cpp_ref": "bool Filename::is_writable(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$is_writable",
                    "extern": [
                        "bool",
                        "Filename$_$is_writable(Filename const *param0)"
                    ],
                    "fn": "is_writable",
                    "indexed": "Filename$74$is_writable",
                    "mangled": "_inCAAAAahKY",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$is_directory(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_is_directory_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f6469726563746f727928293b",
                    "cpp_ref": "bool Filename::is_directory(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$is_directory",
                    "extern": [
                        "bool",
                        "Filename$_$is_directory(Filename const *param0)"
                    ],
                    "fn": "is_directory",
                    "indexed": "Filename$75$is_directory",
                    "mangled": "_inCAAAAADlT",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$is_executable(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_is_executable_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f65786563757461626c6528293b",
                    "cpp_ref": "bool Filename::is_executable(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$is_executable",
                    "extern": [
                        "bool",
                        "Filename$_$is_executable(Filename const *param0)"
                    ],
                    "fn": "is_executable",
                    "indexed": "Filename$76$is_executable",
                    "mangled": "_inCAAAAdwcX",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "this_missing_is_old",
                        "other_missing_is_old"
                    ],
                    "args": [
                        "Filename const &other",
                        "bool this_missing_is_old",
                        "bool other_missing_is_old"
                    ],
                    "argt": [
                        "Filename const&",
                        "bool",
                        "bool"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "Filename const *",
                        "bool",
                        "bool"
                    ],
                    "c_ref": "Filename$_$compare_timestamps(Filename const *param0, Filename const *param1, bool param2, bool param3)",
                    "c_type": "int",
                    "cn": "Filename",
                    "cni": "Filename_C_compare_timestamps_i_ppBB",
                    "cni_args": "ppBB",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f74696d657374616d7073282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "int Filename::compare_timestamps(Filename const &other, bool this_missing_is_old, bool other_missing_is_old) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$compare_timestamps",
                    "extern": [
                        "int",
                        "Filename$_$compare_timestamps(Filename const *param0, Filename const *param1, bool param2, bool param3)"
                    ],
                    "fn": "compare_timestamps",
                    "indexed": "Filename$77$compare_timestamps",
                    "mangled": "_inCAAAAQRcf",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "this_missing_is_old"
                    ],
                    "args": [
                        "Filename const &other",
                        "bool this_missing_is_old"
                    ],
                    "argt": [
                        "Filename const&",
                        "bool"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "Filename const *",
                        "bool"
                    ],
                    "c_ref": "Filename$_$compare_timestamps(Filename const *param0, Filename const *param1, bool param2)",
                    "c_type": "int",
                    "cn": "Filename",
                    "cni": "Filename_C_compare_timestamps_i_ppB",
                    "cni_args": "ppB",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f74696d657374616d7073282a706172616d312c20706172616d32293b",
                    "cpp_ref": "int Filename::compare_timestamps(Filename const &other, bool this_missing_is_old, bool other_missing_is_old) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$compare_timestamps",
                    "extern": [
                        "int",
                        "Filename$_$compare_timestamps(Filename const *param0, Filename const *param1, bool param2)"
                    ],
                    "fn": "compare_timestamps",
                    "indexed": "Filename$78$compare_timestamps",
                    "mangled": "_inCAAAAihlq",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "Filename const &other"
                    ],
                    "argt": [
                        "Filename const&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$compare_timestamps(Filename const *param0, Filename const *param1)",
                    "c_type": "int",
                    "cn": "Filename",
                    "cni": "Filename_C_compare_timestamps_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f74696d657374616d7073282a706172616d31293b",
                    "cpp_ref": "int Filename::compare_timestamps(Filename const &other, bool this_missing_is_old, bool other_missing_is_old) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$compare_timestamps",
                    "extern": [
                        "int",
                        "Filename$_$compare_timestamps(Filename const *param0, Filename const *param1)"
                    ],
                    "fn": "compare_timestamps",
                    "indexed": "Filename$79$compare_timestamps",
                    "mangled": "_inCAAAA3wx_",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_timestamp(Filename const *param0)",
                    "c_type": "time_t",
                    "cn": "Filename",
                    "cni": "Filename_C_get_timestamp_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f74696d657374616d7028293b",
                    "cpp_ref": "time_t Filename::get_timestamp(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_timestamp",
                    "extern": [
                        "time_t",
                        "Filename$_$get_timestamp(Filename const *param0)"
                    ],
                    "fn": "get_timestamp",
                    "indexed": "Filename$80$get_timestamp",
                    "mangled": "_inCAAAAKJyF",
                    "ot": "time_t",
                    "rt": "time_t"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_access_timestamp(Filename const *param0)",
                    "c_type": "time_t",
                    "cn": "Filename",
                    "cni": "Filename_C_get_access_timestamp_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6163636573735f74696d657374616d7028293b",
                    "cpp_ref": "time_t Filename::get_access_timestamp(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_access_timestamp",
                    "extern": [
                        "time_t",
                        "Filename$_$get_access_timestamp(Filename const *param0)"
                    ],
                    "fn": "get_access_timestamp",
                    "indexed": "Filename$81$get_access_timestamp",
                    "mangled": "_inCAAAA3OVg",
                    "ot": "time_t",
                    "rt": "time_t"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_file_size(Filename const *param0)",
                    "c_type": "std::streamsize",
                    "cn": "Filename",
                    "cni": "Filename_C_get_file_size_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f66696c655f73697a6528293b",
                    "cpp_ref": "std::streamsize Filename::get_file_size(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_file_size",
                    "extern": [
                        "std::streamsize",
                        "Filename$_$get_file_size(Filename const *param0)"
                    ],
                    "fn": "get_file_size",
                    "indexed": "Filename$82$get_file_size",
                    "mangled": "_inCAAAAjnXJ",
                    "ot": "std::streamsize",
                    "rt": "std::streamsize"
                },
                {
                    "argc": 2,
                    "argn": [
                        "searchpath",
                        "default_extension"
                    ],
                    "args": [
                        "DSearchPath const &searchpath",
                        "std::string const &default_extension"
                    ],
                    "argt": [
                        "DSearchPath const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "DSearchPath const *",
                        "char const *"
                    ],
                    "c_ref": "Filename$_$resolve_filename(Filename *param0, DSearchPath const *param1, char const *param2)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_resolve_filename_B_pps",
                    "cni_args": "pps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7265736f6c76655f66696c656e616d65282a706172616d312c207374643a3a737472696e6728706172616d3229293b",
                    "cpp_ref": "bool Filename::resolve_filename(DSearchPath const &searchpath, std::string const &default_extension)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$resolve_filename",
                    "extern": [
                        "bool",
                        "Filename$_$resolve_filename(Filename *param0, DSearchPath const *param1, char const *param2)"
                    ],
                    "fn": "resolve_filename",
                    "indexed": "Filename$83$resolve_filename",
                    "mangled": "_inCAAAA_ktc",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "searchpath"
                    ],
                    "args": [
                        "DSearchPath const &searchpath"
                    ],
                    "argt": [
                        "DSearchPath const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "DSearchPath const *"
                    ],
                    "c_ref": "Filename$_$resolve_filename(Filename *param0, DSearchPath const *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_resolve_filename_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7265736f6c76655f66696c656e616d65282a706172616d31293b",
                    "cpp_ref": "bool Filename::resolve_filename(DSearchPath const &searchpath, std::string const &default_extension)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$resolve_filename",
                    "extern": [
                        "bool",
                        "Filename$_$resolve_filename(Filename *param0, DSearchPath const *param1)"
                    ],
                    "fn": "resolve_filename",
                    "indexed": "Filename$84$resolve_filename",
                    "mangled": "_inCAAAAk2zY",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "directory",
                        "allow_backups"
                    ],
                    "args": [
                        "Filename directory",
                        "bool allow_backups"
                    ],
                    "argt": [
                        "Filename",
                        "bool"
                    ],
                    "c_argv": [
                        "Filename *",
                        "Filename *",
                        "bool"
                    ],
                    "c_ref": "Filename$_$make_relative_to(Filename *param0, Filename *param1, bool param2)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_make_relative_to_B_ppB",
                    "cni_args": "ppB",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f72656c61746976655f746f282a706172616d312c20706172616d32293b",
                    "cpp_ref": "bool Filename::make_relative_to(Filename directory, bool allow_backups)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$make_relative_to",
                    "extern": [
                        "bool",
                        "Filename$_$make_relative_to(Filename *param0, Filename *param1, bool param2)"
                    ],
                    "fn": "make_relative_to",
                    "indexed": "Filename$85$make_relative_to",
                    "mangled": "_inCAAAAfEHg",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "directory"
                    ],
                    "args": [
                        "Filename directory"
                    ],
                    "argt": [
                        "Filename"
                    ],
                    "c_argv": [
                        "Filename *",
                        "Filename *"
                    ],
                    "c_ref": "Filename$_$make_relative_to(Filename *param0, Filename *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_make_relative_to_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f72656c61746976655f746f282a706172616d31293b",
                    "cpp_ref": "bool Filename::make_relative_to(Filename directory, bool allow_backups)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$make_relative_to",
                    "extern": [
                        "bool",
                        "Filename$_$make_relative_to(Filename *param0, Filename *param1)"
                    ],
                    "fn": "make_relative_to",
                    "indexed": "Filename$86$make_relative_to",
                    "mangled": "_inCAAAA85oI",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "searchpath"
                    ],
                    "args": [
                        "DSearchPath const &searchpath"
                    ],
                    "argt": [
                        "DSearchPath const&"
                    ],
                    "c_argv": [
                        "Filename *",
                        "DSearchPath const *"
                    ],
                    "c_ref": "Filename$_$find_on_searchpath(Filename *param0, DSearchPath const *param1)",
                    "c_type": "int",
                    "cn": "Filename",
                    "cni": "Filename_C_find_on_searchpath_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f6f6e5f73656172636870617468282a706172616d31293b",
                    "cpp_ref": "int Filename::find_on_searchpath(DSearchPath const &searchpath)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$find_on_searchpath",
                    "extern": [
                        "int",
                        "Filename$_$find_on_searchpath(Filename *param0, DSearchPath const *param1)"
                    ],
                    "fn": "find_on_searchpath",
                    "indexed": "Filename$87$find_on_searchpath",
                    "mangled": "_inCAAAA45N1",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "contents"
                    ],
                    "args": [
                        "vector_string &contents"
                    ],
                    "argt": [
                        "vector_string&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "vector_string *"
                    ],
                    "c_ref": "Filename$_$scan_directory(Filename const *param0, vector_string *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_scan_directory_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7363616e5f6469726563746f7279282a706172616d31293b",
                    "cpp_ref": "bool Filename::scan_directory(vector_string &contents) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$scan_directory",
                    "extern": [
                        "bool",
                        "Filename$_$scan_directory(Filename const *param0, vector_string *param1)"
                    ],
                    "fn": "scan_directory",
                    "indexed": "Filename$88$scan_directory",
                    "mangled": "_inCAAAA1pvM",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "pifstream &stream"
                    ],
                    "argt": [
                        "pifstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "pifstream *"
                    ],
                    "c_ref": "Filename$_$open_read(Filename const *param0, pifstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_read_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f72656164282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_read(pifstream &stream) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_read",
                    "extern": [
                        "bool",
                        "Filename$_$open_read(Filename const *param0, pifstream *param1)"
                    ],
                    "fn": "open_read",
                    "indexed": "Filename$89$open_read",
                    "mangled": "_inCAAAAhT0n",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "std::ifstream &stream"
                    ],
                    "argt": [
                        "std::ifstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::ifstream *"
                    ],
                    "c_ref": "Filename$_$open_read(Filename const *param0, std::ifstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_read_B_pp_1_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f72656164282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_read(std::ifstream &stream) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_read",
                    "extern": [
                        "bool",
                        "Filename$_$open_read(Filename const *param0, std::ifstream *param1)"
                    ],
                    "fn": "open_read",
                    "indexed": "Filename$90$open_read",
                    "mangled": "_inCAAAAluH_",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stream",
                        "truncate"
                    ],
                    "args": [
                        "pofstream &stream",
                        "bool truncate"
                    ],
                    "argt": [
                        "pofstream&",
                        "bool"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "pofstream *",
                        "bool"
                    ],
                    "c_ref": "Filename$_$open_write(Filename const *param0, pofstream *param1, bool param2)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_write_B_ppB",
                    "cni_args": "ppB",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "bool Filename::open_write(pofstream &stream, bool truncate) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_write",
                    "extern": [
                        "bool",
                        "Filename$_$open_write(Filename const *param0, pofstream *param1, bool param2)"
                    ],
                    "fn": "open_write",
                    "indexed": "Filename$91$open_write",
                    "mangled": "_inCAAAA83u8",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "pofstream &stream"
                    ],
                    "argt": [
                        "pofstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "pofstream *"
                    ],
                    "c_ref": "Filename$_$open_write(Filename const *param0, pofstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_write_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f7772697465282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_write(pofstream &stream, bool truncate) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_write",
                    "extern": [
                        "bool",
                        "Filename$_$open_write(Filename const *param0, pofstream *param1)"
                    ],
                    "fn": "open_write",
                    "indexed": "Filename$92$open_write",
                    "mangled": "_inCAAAARGVH",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stream",
                        "truncate"
                    ],
                    "args": [
                        "std::ofstream &stream",
                        "bool truncate"
                    ],
                    "argt": [
                        "std::ofstream&",
                        "bool"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::ofstream *",
                        "bool"
                    ],
                    "c_ref": "Filename$_$open_write(Filename const *param0, std::ofstream *param1, bool param2)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_write_B_ppB_1_B_ppB",
                    "cni_args": "ppB",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "bool Filename::open_write(std::ofstream &stream, bool truncate) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_write",
                    "extern": [
                        "bool",
                        "Filename$_$open_write(Filename const *param0, std::ofstream *param1, bool param2)"
                    ],
                    "fn": "open_write",
                    "indexed": "Filename$93$open_write",
                    "mangled": "_inCAAAARfnm",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "std::ofstream &stream"
                    ],
                    "argt": [
                        "std::ofstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::ofstream *"
                    ],
                    "c_ref": "Filename$_$open_write(Filename const *param0, std::ofstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_write_B_pp_1_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f7772697465282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_write(std::ofstream &stream, bool truncate) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_write",
                    "extern": [
                        "bool",
                        "Filename$_$open_write(Filename const *param0, std::ofstream *param1)"
                    ],
                    "fn": "open_write",
                    "indexed": "Filename$94$open_write",
                    "mangled": "_inCAAAAXpRT",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "pofstream &stream"
                    ],
                    "argt": [
                        "pofstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "pofstream *"
                    ],
                    "c_ref": "Filename$_$open_append(Filename const *param0, pofstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_append_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f617070656e64282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_append(pofstream &stream) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_append",
                    "extern": [
                        "bool",
                        "Filename$_$open_append(Filename const *param0, pofstream *param1)"
                    ],
                    "fn": "open_append",
                    "indexed": "Filename$95$open_append",
                    "mangled": "_inCAAAAjFAU",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "std::ofstream &stream"
                    ],
                    "argt": [
                        "std::ofstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::ofstream *"
                    ],
                    "c_ref": "Filename$_$open_append(Filename const *param0, std::ofstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_append_B_pp_1_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f617070656e64282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_append(std::ofstream &stream) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_append",
                    "extern": [
                        "bool",
                        "Filename$_$open_append(Filename const *param0, std::ofstream *param1)"
                    ],
                    "fn": "open_append",
                    "indexed": "Filename$96$open_append",
                    "mangled": "_inCAAAAttUT",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stream",
                        "truncate"
                    ],
                    "args": [
                        "pfstream &stream",
                        "bool truncate"
                    ],
                    "argt": [
                        "pfstream&",
                        "bool"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "pfstream *",
                        "bool"
                    ],
                    "c_ref": "Filename$_$open_read_write(Filename const *param0, pfstream *param1, bool param2)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_read_write_B_ppB",
                    "cni_args": "ppB",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f726561645f7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "bool Filename::open_read_write(pfstream &stream, bool truncate) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_read_write",
                    "extern": [
                        "bool",
                        "Filename$_$open_read_write(Filename const *param0, pfstream *param1, bool param2)"
                    ],
                    "fn": "open_read_write",
                    "indexed": "Filename$97$open_read_write",
                    "mangled": "_inCAAAA5Jdf",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "pfstream &stream"
                    ],
                    "argt": [
                        "pfstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "pfstream *"
                    ],
                    "c_ref": "Filename$_$open_read_write(Filename const *param0, pfstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_read_write_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f726561645f7772697465282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_read_write(pfstream &stream, bool truncate) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_read_write",
                    "extern": [
                        "bool",
                        "Filename$_$open_read_write(Filename const *param0, pfstream *param1)"
                    ],
                    "fn": "open_read_write",
                    "indexed": "Filename$98$open_read_write",
                    "mangled": "_inCAAAAv_IM",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stream",
                        "truncate"
                    ],
                    "args": [
                        "std::fstream &stream",
                        "bool truncate"
                    ],
                    "argt": [
                        "std::fstream&",
                        "bool"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::fstream *",
                        "bool"
                    ],
                    "c_ref": "Filename$_$open_read_write(Filename const *param0, std::fstream *param1, bool param2)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_read_write_B_ppB_1_B_ppB",
                    "cni_args": "ppB",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f726561645f7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "bool Filename::open_read_write(std::fstream &stream, bool truncate) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_read_write",
                    "extern": [
                        "bool",
                        "Filename$_$open_read_write(Filename const *param0, std::fstream *param1, bool param2)"
                    ],
                    "fn": "open_read_write",
                    "indexed": "Filename$99$open_read_write",
                    "mangled": "_inCAAAAmwiS",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "std::fstream &stream"
                    ],
                    "argt": [
                        "std::fstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::fstream *"
                    ],
                    "c_ref": "Filename$_$open_read_write(Filename const *param0, std::fstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_read_write_B_pp_1_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f726561645f7772697465282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_read_write(std::fstream &stream, bool truncate) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_read_write",
                    "extern": [
                        "bool",
                        "Filename$_$open_read_write(Filename const *param0, std::fstream *param1)"
                    ],
                    "fn": "open_read_write",
                    "indexed": "Filename$100$open_read_write",
                    "mangled": "_inCAAAAxoXJ",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "pfstream &stream"
                    ],
                    "argt": [
                        "pfstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "pfstream *"
                    ],
                    "c_ref": "Filename$_$open_read_append(Filename const *param0, pfstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_read_append_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f726561645f617070656e64282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_read_append(pfstream &stream) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_read_append",
                    "extern": [
                        "bool",
                        "Filename$_$open_read_append(Filename const *param0, pfstream *param1)"
                    ],
                    "fn": "open_read_append",
                    "indexed": "Filename$101$open_read_append",
                    "mangled": "_inCAAAAwbx_",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stream"
                    ],
                    "args": [
                        "std::fstream &stream"
                    ],
                    "argt": [
                        "std::fstream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::fstream *"
                    ],
                    "c_ref": "Filename$_$open_read_append(Filename const *param0, std::fstream *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_open_read_append_B_pp_1_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f726561645f617070656e64282a706172616d31293b",
                    "cpp_ref": "bool Filename::open_read_append(std::fstream &stream) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$open_read_append",
                    "extern": [
                        "bool",
                        "Filename$_$open_read_append(Filename const *param0, std::fstream *param1)"
                    ],
                    "fn": "open_read_append",
                    "indexed": "Filename$102$open_read_append",
                    "mangled": "_inCAAAAdXEn",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$chdir(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_chdir_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636864697228293b",
                    "cpp_ref": "bool Filename::chdir(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$chdir",
                    "extern": [
                        "bool",
                        "Filename$_$chdir(Filename const *param0)"
                    ],
                    "fn": "chdir",
                    "indexed": "Filename$103$chdir",
                    "mangled": "_inCAAAAm9kw",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$touch(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_touch_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e746f75636828293b",
                    "cpp_ref": "bool Filename::touch(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$touch",
                    "extern": [
                        "bool",
                        "Filename$_$touch(Filename const *param0)"
                    ],
                    "fn": "touch",
                    "indexed": "Filename$104$touch",
                    "mangled": "_inCAAAACry9",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$unlink(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_unlink_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e756e6c696e6b28293b",
                    "cpp_ref": "bool Filename::unlink(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$unlink",
                    "extern": [
                        "bool",
                        "Filename$_$unlink(Filename const *param0)"
                    ],
                    "fn": "unlink",
                    "indexed": "Filename$105$unlink",
                    "mangled": "_inCAAAAaMuO",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "Filename const &other"
                    ],
                    "argt": [
                        "Filename const&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$rename_to(Filename const *param0, Filename const *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_rename_to_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e72656e616d655f746f282a706172616d31293b",
                    "cpp_ref": "bool Filename::rename_to(Filename const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$rename_to",
                    "extern": [
                        "bool",
                        "Filename$_$rename_to(Filename const *param0, Filename const *param1)"
                    ],
                    "fn": "rename_to",
                    "indexed": "Filename$106$rename_to",
                    "mangled": "_inCAAAAaavz",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "Filename const &other"
                    ],
                    "argt": [
                        "Filename const&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$copy_to(Filename const *param0, Filename const *param1)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_copy_to_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636f70795f746f282a706172616d31293b",
                    "cpp_ref": "bool Filename::copy_to(Filename const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$copy_to",
                    "extern": [
                        "bool",
                        "Filename$_$copy_to(Filename const *param0, Filename const *param1)"
                    ],
                    "fn": "copy_to",
                    "indexed": "Filename$107$copy_to",
                    "mangled": "_inCAAAAjPPu",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$make_dir(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_make_dir_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f64697228293b",
                    "cpp_ref": "bool Filename::make_dir(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$make_dir",
                    "extern": [
                        "bool",
                        "Filename$_$make_dir(Filename const *param0)"
                    ],
                    "fn": "make_dir",
                    "indexed": "Filename$108$make_dir",
                    "mangled": "_inCAAAAOOnR",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$mkdir(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_mkdir_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6d6b64697228293b",
                    "cpp_ref": "bool Filename::mkdir(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$mkdir",
                    "extern": [
                        "bool",
                        "Filename$_$mkdir(Filename const *param0)"
                    ],
                    "fn": "mkdir",
                    "indexed": "Filename$109$mkdir",
                    "mangled": "_inCAAAAeeq4",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$rmdir(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C_rmdir_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726d64697228293b",
                    "cpp_ref": "bool Filename::rmdir(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$rmdir",
                    "extern": [
                        "bool",
                        "Filename$_$rmdir(Filename const *param0)"
                    ],
                    "fn": "rmdir",
                    "indexed": "Filename$110$rmdir",
                    "mangled": "_inCAAAACI79",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "Filename const &other"
                    ],
                    "argt": [
                        "Filename const&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$compare_to(Filename const *param0, Filename const *param1)",
                    "c_type": "int",
                    "cn": "Filename",
                    "cni": "Filename_C_compare_to_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f746f282a706172616d31293b",
                    "cpp_ref": "inline int Filename::compare_to(Filename const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$compare_to",
                    "extern": [
                        "int",
                        "Filename$_$compare_to(Filename const *param0, Filename const *param1)"
                    ],
                    "fn": "compare_to",
                    "indexed": "Filename$111$compare_to",
                    "mangled": "_inCAAAAwktQ",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$__nonzero__(Filename const *param0)",
                    "c_type": "bool",
                    "cn": "Filename",
                    "cni": "Filename_C___nonzero___B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e5f5f6e6f6e7a65726f5f5f28293b",
                    "cpp_ref": "inline bool Filename::__nonzero__(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$__nonzero__",
                    "extern": [
                        "bool",
                        "Filename$_$__nonzero__(Filename const *param0)"
                    ],
                    "fn": "__nonzero__",
                    "indexed": "Filename$112$__nonzero__",
                    "mangled": "_inCAAAAeHUw",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Filename const *"
                    ],
                    "c_ref": "Filename$_$get_hash(Filename const *param0)",
                    "c_type": "int",
                    "cn": "Filename",
                    "cni": "Filename_C_get_hash_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6861736828293b",
                    "cpp_ref": "int Filename::get_hash(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$get_hash",
                    "extern": [
                        "int",
                        "Filename$_$get_hash(Filename const *param0)"
                    ],
                    "fn": "get_hash",
                    "indexed": "Filename$113$get_hash",
                    "mangled": "_inCAAAAnnHL",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "Filename const *",
                        "std::ostream *"
                    ],
                    "c_ref": "Filename$_$output(Filename const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "inline void Filename::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Filename$_$output",
                    "extern": [
                        "void",
                        "Filename$_$output(Filename const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "Filename$114$output",
                    "mangled": "_inCAAAAgQYS",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "encoding"
                    ],
                    "args": [
                        "TextEncoder::Encoding encoding"
                    ],
                    "argt": [
                        "TextEncoder::Encoding"
                    ],
                    "c_argv": [
                        "TextEncoder::Encoding"
                    ],
                    "c_ref": "Filename$_$set_filesystem_encoding(TextEncoder::Encoding param0)",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_set_filesystem_encoding_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "2020202046696c656e616d653a3a7365745f66696c6573797374656d5f656e636f64696e6728706172616d30293b",
                    "cpp_ref": "static inline void Filename::set_filesystem_encoding(TextEncoder::Encoding encoding)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$set_filesystem_encoding",
                    "extern": [
                        "void",
                        "Filename$_$set_filesystem_encoding(TextEncoder::Encoding param0)"
                    ],
                    "fn": "set_filesystem_encoding",
                    "indexed": "Filename$115$set_filesystem_encoding",
                    "mangled": "_inCAAAAfmrp",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Filename$_$get_filesystem_encoding()",
                    "c_type": "TextEncoder::Encoding",
                    "cn": "Filename",
                    "cni": "Filename_C_get_filesystem_encoding_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2046696c656e616d653a3a6765745f66696c6573797374656d5f656e636f64696e6728293b",
                    "cpp_ref": "static inline TextEncoder::Encoding Filename::get_filesystem_encoding(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$get_filesystem_encoding",
                    "extern": [
                        "TextEncoder::Encoding",
                        "Filename$_$get_filesystem_encoding()"
                    ],
                    "fn": "get_filesystem_encoding",
                    "indexed": "Filename$116$get_filesystem_encoding",
                    "mangled": "_inCAAAAKN3I",
                    "ot": "inline TextEncoder::Encoding",
                    "rt": "TextEncoder::Encoding"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Filename$_$get_class_type()",
                    "c_type": "int",
                    "cn": "Filename",
                    "cni": "Filename_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202846696c656e616d653a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle Filename::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$get_class_type",
                    "extern": [
                        "int",
                        "Filename$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "Filename$117$get_class_type",
                    "mangled": "_inCAAAAsafE",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Filename$_$init_type()",
                    "c_type": "void",
                    "cn": "Filename",
                    "cni": "Filename_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202046696c656e616d653a3a696e69745f7479706528293b",
                    "cpp_ref": "static void Filename::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Filename$_$init_type",
                    "extern": [
                        "void",
                        "Filename$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "Filename$118$init_type",
                    "mangled": "_inCAAAA_r_i",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "Geom": {
            "bases": [
                "CopyOnWriteObject",
                "GeomEnums"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$upcast_to_CopyOnWriteObject(Geom *param0)",
                    "c_type": "CopyOnWriteObject *",
                    "cn": "Geom",
                    "cni": "Geom_C_upcast_to_CopyOnWriteObject_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2028436f70794f6e57726974654f626a656374202a29706172616d303b",
                    "cpp_ref": "CopyOnWriteObject *Geom::upcast_to_CopyOnWriteObject(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$upcast_to_CopyOnWriteObject",
                    "extern": [
                        "CopyOnWriteObject *",
                        "Geom$_$upcast_to_CopyOnWriteObject(Geom *param0)"
                    ],
                    "fn": "upcast_to_CopyOnWriteObject",
                    "indexed": "Geom$1$upcast_to_CopyOnWriteObject",
                    "mangled": "_inCAAAAMO36",
                    "ot": "CopyOnWriteObject*",
                    "rt": "CopyOnWriteObject"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$upcast_to_GeomEnums(Geom *param0)",
                    "c_type": "GeomEnums *",
                    "cn": "Geom",
                    "cni": "Geom_C_upcast_to_GeomEnums_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d456e756d73202a29706172616d303b",
                    "cpp_ref": "GeomEnums *Geom::upcast_to_GeomEnums(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$upcast_to_GeomEnums",
                    "extern": [
                        "GeomEnums *",
                        "Geom$_$upcast_to_GeomEnums(Geom *param0)"
                    ],
                    "fn": "upcast_to_GeomEnums",
                    "indexed": "Geom$2$upcast_to_GeomEnums",
                    "mangled": "_inCAAAA9JLK",
                    "ot": "GeomEnums*",
                    "rt": "GeomEnums"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "GeomVertexData const *data"
                    ],
                    "argt": [
                        "GeomVertexData const*"
                    ],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "Geom$_$Geom(GeomVertexData const *param0)",
                    "c_type": "Geom *",
                    "cn": "Geom",
                    "cni": "Geom_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d28706172616d30293b",
                    "cpp_ref": "explicit Geom::Geom(GeomVertexData const *data)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "Geom$_$Geom",
                    "extern": [
                        "Geom *",
                        "Geom$_$Geom(GeomVertexData const *param0)"
                    ],
                    "fn": "Geom",
                    "indexed": "Geom$3$Geom",
                    "mangled": "_inCAAAAA5hw",
                    "ot": "explicit",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$make_copy(Geom const *param0)",
                    "c_type": "Geom *",
                    "cn": "Geom",
                    "cni": "Geom_C_make_copy_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f636f707928293b",
                    "cpp_ref": "virtual Geom *Geom::make_copy(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_copy",
                    "extern": [
                        "Geom *",
                        "Geom$_$make_copy(Geom const *param0)"
                    ],
                    "fn": "make_copy",
                    "indexed": "Geom$4$make_copy",
                    "mangled": "_inCAAAAIdD3",
                    "ot": "virtual Geom*",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_primitive_type(Geom const *param0)",
                    "c_type": "GeomEnums::PrimitiveType",
                    "cn": "Geom",
                    "cni": "Geom_C_get_primitive_type_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7072696d69746976655f7479706528293b",
                    "cpp_ref": "inline GeomEnums::PrimitiveType Geom::get_primitive_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_primitive_type",
                    "extern": [
                        "GeomEnums::PrimitiveType",
                        "Geom$_$get_primitive_type(Geom const *param0)"
                    ],
                    "fn": "get_primitive_type",
                    "indexed": "Geom$5$get_primitive_type",
                    "mangled": "_inCAAAAznC4",
                    "ot": "inline GeomEnums::PrimitiveType",
                    "rt": "GeomEnums::PrimitiveType"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_shade_model(Geom const *param0)",
                    "c_type": "GeomEnums::ShadeModel",
                    "cn": "Geom",
                    "cni": "Geom_C_get_shade_model_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f73686164655f6d6f64656c28293b",
                    "cpp_ref": "inline GeomEnums::ShadeModel Geom::get_shade_model(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_shade_model",
                    "extern": [
                        "GeomEnums::ShadeModel",
                        "Geom$_$get_shade_model(Geom const *param0)"
                    ],
                    "fn": "get_shade_model",
                    "indexed": "Geom$6$get_shade_model",
                    "mangled": "_inCAAAAhDDD",
                    "ot": "inline GeomEnums::ShadeModel",
                    "rt": "GeomEnums::ShadeModel"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_geom_rendering(Geom const *param0)",
                    "c_type": "int",
                    "cn": "Geom",
                    "cni": "Geom_C_get_geom_rendering_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f67656f6d5f72656e646572696e6728293b",
                    "cpp_ref": "inline int Geom::get_geom_rendering(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_geom_rendering",
                    "extern": [
                        "int",
                        "Geom$_$get_geom_rendering(Geom const *param0)"
                    ],
                    "fn": "get_geom_rendering",
                    "indexed": "Geom$7$get_geom_rendering",
                    "mangled": "_inCAAAA18Ae",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_usage_hint(Geom const *param0)",
                    "c_type": "GeomEnums::UsageHint",
                    "cn": "Geom",
                    "cni": "Geom_C_get_usage_hint_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f75736167655f68696e7428293b",
                    "cpp_ref": "GeomEnums::UsageHint Geom::get_usage_hint(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_usage_hint",
                    "extern": [
                        "GeomEnums::UsageHint",
                        "Geom$_$get_usage_hint(Geom const *param0)"
                    ],
                    "fn": "get_usage_hint",
                    "indexed": "Geom$8$get_usage_hint",
                    "mangled": "_inCAAAAiZFS",
                    "ot": "GeomEnums::UsageHint",
                    "rt": "GeomEnums::UsageHint"
                },
                {
                    "argc": 1,
                    "argn": [
                        "usage_hint"
                    ],
                    "args": [
                        "GeomEnums::UsageHint usage_hint"
                    ],
                    "argt": [
                        "GeomEnums::UsageHint"
                    ],
                    "c_argv": [
                        "Geom *",
                        "GeomEnums::UsageHint"
                    ],
                    "c_ref": "Geom$_$set_usage_hint(Geom *param0, GeomEnums::UsageHint param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_set_usage_hint_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f75736167655f68696e7428706172616d31293b",
                    "cpp_ref": "void Geom::set_usage_hint(GeomEnums::UsageHint usage_hint)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$set_usage_hint",
                    "extern": [
                        "void",
                        "Geom$_$set_usage_hint(Geom *param0, GeomEnums::UsageHint param1)"
                    ],
                    "fn": "set_usage_hint",
                    "indexed": "Geom$9$set_usage_hint",
                    "mangled": "_inCAAAASB4T",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "Thread *"
                    ],
                    "c_ref": "Geom$_$get_vertex_data(Geom const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_vertex_data_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e6765745f7665727465785f6461746128706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< GeomVertexData > Geom::get_vertex_data(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_vertex_data",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "Geom$_$get_vertex_data(Geom const *param0, Thread *param1)"
                    ],
                    "fn": "get_vertex_data",
                    "indexed": "Geom$10$get_vertex_data",
                    "mangled": "_inCAAAAlhS_",
                    "ot": "inline ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_vertex_data(Geom const *param0)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_vertex_data_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e6765745f7665727465785f646174612829293b",
                    "cpp_ref": "inline ConstPointerTo< GeomVertexData > Geom::get_vertex_data(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_vertex_data",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "Geom$_$get_vertex_data(Geom const *param0)"
                    ],
                    "fn": "get_vertex_data",
                    "indexed": "Geom$11$get_vertex_data",
                    "mangled": "_inCAAAAohq0",
                    "ot": "inline ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$modify_vertex_data(Geom *param0)",
                    "c_type": "PointerTo< GeomVertexData > *",
                    "cn": "Geom",
                    "cni": "Geom_C_modify_vertex_data_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e6d6f646966795f7665727465785f646174612829293b",
                    "cpp_ref": "PointerTo< GeomVertexData > Geom::modify_vertex_data(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$modify_vertex_data",
                    "extern": [
                        "PointerTo< GeomVertexData > *",
                        "Geom$_$modify_vertex_data(Geom *param0)"
                    ],
                    "fn": "modify_vertex_data",
                    "indexed": "Geom$12$modify_vertex_data",
                    "mangled": "_inCAAAAAtYT",
                    "ot": "PointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "GeomVertexData const *data"
                    ],
                    "argt": [
                        "GeomVertexData const*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "GeomVertexData const *"
                    ],
                    "c_ref": "Geom$_$set_vertex_data(Geom *param0, GeomVertexData const *param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_set_vertex_data_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7665727465785f6461746128706172616d31293b",
                    "cpp_ref": "void Geom::set_vertex_data(GeomVertexData const *data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$set_vertex_data",
                    "extern": [
                        "void",
                        "Geom$_$set_vertex_data(Geom *param0, GeomVertexData const *param1)"
                    ],
                    "fn": "set_vertex_data",
                    "indexed": "Geom$13$set_vertex_data",
                    "mangled": "_inCAAAAWBrG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "data",
                        "offset"
                    ],
                    "args": [
                        "GeomVertexData const *data",
                        "int offset"
                    ],
                    "argt": [
                        "GeomVertexData const*",
                        "int"
                    ],
                    "c_argv": [
                        "Geom *",
                        "GeomVertexData const *",
                        "int"
                    ],
                    "c_ref": "Geom$_$offset_vertices(Geom *param0, GeomVertexData const *param1, int param2)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_offset_vertices_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f66667365745f766572746963657328706172616d312c20706172616d32293b",
                    "cpp_ref": "void Geom::offset_vertices(GeomVertexData const *data, int offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$offset_vertices",
                    "extern": [
                        "void",
                        "Geom$_$offset_vertices(Geom *param0, GeomVertexData const *param1, int param2)"
                    ],
                    "fn": "offset_vertices",
                    "indexed": "Geom$14$offset_vertices",
                    "mangled": "_inCAAAACOPz",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "composite_only"
                    ],
                    "args": [
                        "bool composite_only"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "Geom *",
                        "bool"
                    ],
                    "c_ref": "Geom$_$make_nonindexed(Geom *param0, bool param1)",
                    "c_type": "int",
                    "cn": "Geom",
                    "cni": "Geom_C_make_nonindexed_i_pB",
                    "cni_args": "pB",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f6e6f6e696e646578656428706172616d31293b",
                    "cpp_ref": "int Geom::make_nonindexed(bool composite_only)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_nonindexed",
                    "extern": [
                        "int",
                        "Geom$_$make_nonindexed(Geom *param0, bool param1)"
                    ],
                    "fn": "make_nonindexed",
                    "indexed": "Geom$15$make_nonindexed",
                    "mangled": "_inCAAAAM2BD",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "force",
                        "current_thread"
                    ],
                    "args": [
                        "bool force",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "bool",
                        "Thread*"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "bool",
                        "Thread *"
                    ],
                    "c_ref": "Geom$_$get_animated_vertex_data(Geom const *param0, bool param1, Thread *param2)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_animated_vertex_data_p_pBp",
                    "cni_args": "pBp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e6765745f616e696d617465645f7665727465785f6461746128706172616d312c20706172616d3229293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexData > Geom::get_animated_vertex_data(bool force, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_animated_vertex_data",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "Geom$_$get_animated_vertex_data(Geom const *param0, bool param1, Thread *param2)"
                    ],
                    "fn": "get_animated_vertex_data",
                    "indexed": "Geom$16$get_animated_vertex_data",
                    "mangled": "_inCAAAAlA_H",
                    "ot": "ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "force"
                    ],
                    "args": [
                        "bool force"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "bool"
                    ],
                    "c_ref": "Geom$_$get_animated_vertex_data(Geom const *param0, bool param1)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_animated_vertex_data_p_pB",
                    "cni_args": "pB",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e6765745f616e696d617465645f7665727465785f6461746128706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexData > Geom::get_animated_vertex_data(bool force, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_animated_vertex_data",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "Geom$_$get_animated_vertex_data(Geom const *param0, bool param1)"
                    ],
                    "fn": "get_animated_vertex_data",
                    "indexed": "Geom$17$get_animated_vertex_data",
                    "mangled": "_inCAAAAdjMf",
                    "ot": "ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$is_empty(Geom const *param0)",
                    "c_type": "bool",
                    "cn": "Geom",
                    "cni": "Geom_C_is_empty_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f656d70747928293b",
                    "cpp_ref": "inline bool Geom::is_empty(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$is_empty",
                    "extern": [
                        "bool",
                        "Geom$_$is_empty(Geom const *param0)"
                    ],
                    "fn": "is_empty",
                    "indexed": "Geom$18$is_empty",
                    "mangled": "_inCAAAAjKBW",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_num_primitives(Geom const *param0)",
                    "c_type": "std::size_t",
                    "cn": "Geom",
                    "cni": "Geom_C_get_num_primitives_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f7072696d69746976657328293b",
                    "cpp_ref": "inline std::size_t Geom::get_num_primitives(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_num_primitives",
                    "extern": [
                        "std::size_t",
                        "Geom$_$get_num_primitives(Geom const *param0)"
                    ],
                    "fn": "get_num_primitives",
                    "indexed": "Geom$19$get_num_primitives",
                    "mangled": "_inCAAAALxLL",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "std::size_t"
                    ],
                    "c_ref": "Geom$_$get_primitive(Geom const *param0, std::size_t param1)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_primitive_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e6765745f7072696d697469766528706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< GeomPrimitive > Geom::get_primitive(std::size_t i) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_primitive",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "Geom$_$get_primitive(Geom const *param0, std::size_t param1)"
                    ],
                    "fn": "get_primitive",
                    "indexed": "Geom$20$get_primitive",
                    "mangled": "_inCAAAAzklj",
                    "ot": "inline ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "Geom *",
                        "std::size_t"
                    ],
                    "c_ref": "Geom$_$modify_primitive(Geom *param0, std::size_t param1)",
                    "c_type": "PointerTo< GeomPrimitive > *",
                    "cn": "Geom",
                    "cni": "Geom_C_modify_primitive_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e6d6f646966795f7072696d697469766528706172616d3129293b",
                    "cpp_ref": "inline PointerTo< GeomPrimitive > Geom::modify_primitive(std::size_t i)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$modify_primitive",
                    "extern": [
                        "PointerTo< GeomPrimitive > *",
                        "Geom$_$modify_primitive(Geom *param0, std::size_t param1)"
                    ],
                    "fn": "modify_primitive",
                    "indexed": "Geom$21$modify_primitive",
                    "mangled": "_inCAAAAi_Ir",
                    "ot": "inline PointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 2,
                    "argn": [
                        "i",
                        "primitive"
                    ],
                    "args": [
                        "std::size_t i",
                        "GeomPrimitive const *primitive"
                    ],
                    "argt": [
                        "std::size_t",
                        "GeomPrimitive const*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "std::size_t",
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "Geom$_$set_primitive(Geom *param0, std::size_t param1, GeomPrimitive const *param2)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_set_primitive_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7072696d697469766528706172616d312c20706172616d32293b",
                    "cpp_ref": "void Geom::set_primitive(std::size_t i, GeomPrimitive const *primitive)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$set_primitive",
                    "extern": [
                        "void",
                        "Geom$_$set_primitive(Geom *param0, std::size_t param1, GeomPrimitive const *param2)"
                    ],
                    "fn": "set_primitive",
                    "indexed": "Geom$22$set_primitive",
                    "mangled": "_inCAAAA5fP1",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "i",
                        "primitive"
                    ],
                    "args": [
                        "std::size_t i",
                        "GeomPrimitive const *primitive"
                    ],
                    "argt": [
                        "std::size_t",
                        "GeomPrimitive const*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "std::size_t",
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "Geom$_$insert_primitive(Geom *param0, std::size_t param1, GeomPrimitive const *param2)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_insert_primitive_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e696e736572745f7072696d697469766528706172616d312c20706172616d32293b",
                    "cpp_ref": "void Geom::insert_primitive(std::size_t i, GeomPrimitive const *primitive)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$insert_primitive",
                    "extern": [
                        "void",
                        "Geom$_$insert_primitive(Geom *param0, std::size_t param1, GeomPrimitive const *param2)"
                    ],
                    "fn": "insert_primitive",
                    "indexed": "Geom$23$insert_primitive",
                    "mangled": "_inCAAAAFLQY",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "primitive"
                    ],
                    "args": [
                        "GeomPrimitive const *primitive"
                    ],
                    "argt": [
                        "GeomPrimitive const*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "Geom$_$add_primitive(Geom *param0, GeomPrimitive const *param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_add_primitive_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f7072696d697469766528706172616d31293b",
                    "cpp_ref": "inline void Geom::add_primitive(GeomPrimitive const *primitive)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$add_primitive",
                    "extern": [
                        "void",
                        "Geom$_$add_primitive(Geom *param0, GeomPrimitive const *param1)"
                    ],
                    "fn": "add_primitive",
                    "indexed": "Geom$24$add_primitive",
                    "mangled": "_inCAAAA4qtW",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "Geom *",
                        "std::size_t"
                    ],
                    "c_ref": "Geom$_$remove_primitive(Geom *param0, std::size_t param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_remove_primitive_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f7072696d697469766528706172616d31293b",
                    "cpp_ref": "void Geom::remove_primitive(std::size_t i)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$remove_primitive",
                    "extern": [
                        "void",
                        "Geom$_$remove_primitive(Geom *param0, std::size_t param1)"
                    ],
                    "fn": "remove_primitive",
                    "indexed": "Geom$25$remove_primitive",
                    "mangled": "_inCAAAAl836",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$clear_primitives(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_clear_primitives_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7072696d69746976657328293b",
                    "cpp_ref": "void Geom::clear_primitives(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$clear_primitives",
                    "extern": [
                        "void",
                        "Geom$_$clear_primitives(Geom *param0)"
                    ],
                    "fn": "clear_primitives",
                    "indexed": "Geom$26$clear_primitives",
                    "mangled": "_inCAAAAYAGE",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$decompose(Geom const *param0)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "Geom",
                    "cni": "Geom_C_decompose_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e6465636f6d706f73652829293b",
                    "cpp_ref": "inline PointerTo< Geom > Geom::decompose(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$decompose",
                    "extern": [
                        "PointerTo< Geom > *",
                        "Geom$_$decompose(Geom const *param0)"
                    ],
                    "fn": "decompose",
                    "indexed": "Geom$27$decompose",
                    "mangled": "_inCAAAA6GgV",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$doubleside(Geom const *param0)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "Geom",
                    "cni": "Geom_C_doubleside_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e646f75626c65736964652829293b",
                    "cpp_ref": "inline PointerTo< Geom > Geom::doubleside(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$doubleside",
                    "extern": [
                        "PointerTo< Geom > *",
                        "Geom$_$doubleside(Geom const *param0)"
                    ],
                    "fn": "doubleside",
                    "indexed": "Geom$28$doubleside",
                    "mangled": "_inCAAAALQaK",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$reverse(Geom const *param0)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "Geom",
                    "cni": "Geom_C_reverse_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e726576657273652829293b",
                    "cpp_ref": "inline PointerTo< Geom > Geom::reverse(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$reverse",
                    "extern": [
                        "PointerTo< Geom > *",
                        "Geom$_$reverse(Geom const *param0)"
                    ],
                    "fn": "reverse",
                    "indexed": "Geom$29$reverse",
                    "mangled": "_inCAAAAEJJU",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$rotate(Geom const *param0)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "Geom",
                    "cni": "Geom_C_rotate_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e726f746174652829293b",
                    "cpp_ref": "inline PointerTo< Geom > Geom::rotate(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$rotate",
                    "extern": [
                        "PointerTo< Geom > *",
                        "Geom$_$rotate(Geom const *param0)"
                    ],
                    "fn": "rotate",
                    "indexed": "Geom$30$rotate",
                    "mangled": "_inCAAAAPWLU",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 2,
                    "argn": [
                        "max_indices",
                        "preserve_order"
                    ],
                    "args": [
                        "int max_indices",
                        "bool preserve_order"
                    ],
                    "argt": [
                        "int",
                        "bool"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "int",
                        "bool"
                    ],
                    "c_ref": "Geom$_$unify(Geom const *param0, int param1, bool param2)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "Geom",
                    "cni": "Geom_C_unify_p_piB",
                    "cni_args": "piB",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e756e69667928706172616d312c20706172616d3229293b",
                    "cpp_ref": "inline PointerTo< Geom > Geom::unify(int max_indices, bool preserve_order) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$unify",
                    "extern": [
                        "PointerTo< Geom > *",
                        "Geom$_$unify(Geom const *param0, int param1, bool param2)"
                    ],
                    "fn": "unify",
                    "indexed": "Geom$31$unify",
                    "mangled": "_inCAAAActAJ",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$make_points(Geom const *param0)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "Geom",
                    "cni": "Geom_C_make_points_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e6d616b655f706f696e74732829293b",
                    "cpp_ref": "inline PointerTo< Geom > Geom::make_points(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_points",
                    "extern": [
                        "PointerTo< Geom > *",
                        "Geom$_$make_points(Geom const *param0)"
                    ],
                    "fn": "make_points",
                    "indexed": "Geom$32$make_points",
                    "mangled": "_inCAAAAqMSd",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$make_lines(Geom const *param0)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "Geom",
                    "cni": "Geom_C_make_lines_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e6d616b655f6c696e65732829293b",
                    "cpp_ref": "inline PointerTo< Geom > Geom::make_lines(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_lines",
                    "extern": [
                        "PointerTo< Geom > *",
                        "Geom$_$make_lines(Geom const *param0)"
                    ],
                    "fn": "make_lines",
                    "indexed": "Geom$33$make_lines",
                    "mangled": "_inCAAAAPzxP",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$make_patches(Geom const *param0)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "Geom",
                    "cni": "Geom_C_make_patches_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e6d616b655f706174636865732829293b",
                    "cpp_ref": "inline PointerTo< Geom > Geom::make_patches(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_patches",
                    "extern": [
                        "PointerTo< Geom > *",
                        "Geom$_$make_patches(Geom const *param0)"
                    ],
                    "fn": "make_patches",
                    "indexed": "Geom$34$make_patches",
                    "mangled": "_inCAAAAjSH1",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$make_adjacency(Geom const *param0)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "Geom",
                    "cni": "Geom_C_make_adjacency_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e6d616b655f61646a6163656e63792829293b",
                    "cpp_ref": "inline PointerTo< Geom > Geom::make_adjacency(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_adjacency",
                    "extern": [
                        "PointerTo< Geom > *",
                        "Geom$_$make_adjacency(Geom const *param0)"
                    ],
                    "fn": "make_adjacency",
                    "indexed": "Geom$35$make_adjacency",
                    "mangled": "_inCAAAA0Dv2",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$decompose_in_place(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_decompose_in_place_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6465636f6d706f73655f696e5f706c61636528293b",
                    "cpp_ref": "void Geom::decompose_in_place(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$decompose_in_place",
                    "extern": [
                        "void",
                        "Geom$_$decompose_in_place(Geom *param0)"
                    ],
                    "fn": "decompose_in_place",
                    "indexed": "Geom$36$decompose_in_place",
                    "mangled": "_inCAAAAlrdj",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$doubleside_in_place(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_doubleside_in_place_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e646f75626c65736964655f696e5f706c61636528293b",
                    "cpp_ref": "void Geom::doubleside_in_place(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$doubleside_in_place",
                    "extern": [
                        "void",
                        "Geom$_$doubleside_in_place(Geom *param0)"
                    ],
                    "fn": "doubleside_in_place",
                    "indexed": "Geom$37$doubleside_in_place",
                    "mangled": "_inCAAAARWxI",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$reverse_in_place(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_reverse_in_place_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e726576657273655f696e5f706c61636528293b",
                    "cpp_ref": "void Geom::reverse_in_place(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$reverse_in_place",
                    "extern": [
                        "void",
                        "Geom$_$reverse_in_place(Geom *param0)"
                    ],
                    "fn": "reverse_in_place",
                    "indexed": "Geom$38$reverse_in_place",
                    "mangled": "_inCAAAADe1_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$rotate_in_place(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_rotate_in_place_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e726f746174655f696e5f706c61636528293b",
                    "cpp_ref": "void Geom::rotate_in_place(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$rotate_in_place",
                    "extern": [
                        "void",
                        "Geom$_$rotate_in_place(Geom *param0)"
                    ],
                    "fn": "rotate_in_place",
                    "indexed": "Geom$39$rotate_in_place",
                    "mangled": "_inCAAAAHZg5",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "max_indices",
                        "preserve_order"
                    ],
                    "args": [
                        "int max_indices",
                        "bool preserve_order"
                    ],
                    "argt": [
                        "int",
                        "bool"
                    ],
                    "c_argv": [
                        "Geom *",
                        "int",
                        "bool"
                    ],
                    "c_ref": "Geom$_$unify_in_place(Geom *param0, int param1, bool param2)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_unify_in_place_v_piB",
                    "cni_args": "piB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e6966795f696e5f706c61636528706172616d312c20706172616d32293b",
                    "cpp_ref": "void Geom::unify_in_place(int max_indices, bool preserve_order)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$unify_in_place",
                    "extern": [
                        "void",
                        "Geom$_$unify_in_place(Geom *param0, int param1, bool param2)"
                    ],
                    "fn": "unify_in_place",
                    "indexed": "Geom$40$unify_in_place",
                    "mangled": "_inCAAAAiehR",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$make_points_in_place(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_make_points_in_place_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d616b655f706f696e74735f696e5f706c61636528293b",
                    "cpp_ref": "void Geom::make_points_in_place(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_points_in_place",
                    "extern": [
                        "void",
                        "Geom$_$make_points_in_place(Geom *param0)"
                    ],
                    "fn": "make_points_in_place",
                    "indexed": "Geom$41$make_points_in_place",
                    "mangled": "_inCAAAAJfCo",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$make_lines_in_place(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_make_lines_in_place_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d616b655f6c696e65735f696e5f706c61636528293b",
                    "cpp_ref": "void Geom::make_lines_in_place(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_lines_in_place",
                    "extern": [
                        "void",
                        "Geom$_$make_lines_in_place(Geom *param0)"
                    ],
                    "fn": "make_lines_in_place",
                    "indexed": "Geom$42$make_lines_in_place",
                    "mangled": "_inCAAAAElHO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$make_patches_in_place(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_make_patches_in_place_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d616b655f706174636865735f696e5f706c61636528293b",
                    "cpp_ref": "void Geom::make_patches_in_place(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_patches_in_place",
                    "extern": [
                        "void",
                        "Geom$_$make_patches_in_place(Geom *param0)"
                    ],
                    "fn": "make_patches_in_place",
                    "indexed": "Geom$43$make_patches_in_place",
                    "mangled": "_inCAAAAlsgM",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$make_adjacency_in_place(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_make_adjacency_in_place_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d616b655f61646a6163656e63795f696e5f706c61636528293b",
                    "cpp_ref": "void Geom::make_adjacency_in_place(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$make_adjacency_in_place",
                    "extern": [
                        "void",
                        "Geom$_$make_adjacency_in_place(Geom *param0)"
                    ],
                    "fn": "make_adjacency_in_place",
                    "indexed": "Geom$44$make_adjacency_in_place",
                    "mangled": "_inCAAAAQrnS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "Geom const *other"
                    ],
                    "argt": [
                        "Geom const*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$copy_primitives_from(Geom *param0, Geom const *param1)",
                    "c_type": "bool",
                    "cn": "Geom",
                    "cni": "Geom_C_copy_primitives_from_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636f70795f7072696d6974697665735f66726f6d28706172616d31293b",
                    "cpp_ref": "virtual bool Geom::copy_primitives_from(Geom const *other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$copy_primitives_from",
                    "extern": [
                        "bool",
                        "Geom$_$copy_primitives_from(Geom *param0, Geom const *param1)"
                    ],
                    "fn": "copy_primitives_from",
                    "indexed": "Geom$45$copy_primitives_from",
                    "mangled": "_inCAAAAyUv9",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_num_bytes(Geom const *param0)",
                    "c_type": "int",
                    "cn": "Geom",
                    "cni": "Geom_C_get_num_bytes_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f627974657328293b",
                    "cpp_ref": "int Geom::get_num_bytes(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_num_bytes",
                    "extern": [
                        "int",
                        "Geom$_$get_num_bytes(Geom const *param0)"
                    ],
                    "fn": "get_num_bytes",
                    "indexed": "Geom$46$get_num_bytes",
                    "mangled": "_inCAAAAgSfK",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "Thread *"
                    ],
                    "c_ref": "Geom$_$get_modified(Geom const *param0, Thread *param1)",
                    "c_type": "UpdateSeq *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_modified_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772055706461746553657128282a706172616d30292e6765745f6d6f64696669656428706172616d3129293b",
                    "cpp_ref": "inline UpdateSeq Geom::get_modified(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_modified",
                    "extern": [
                        "UpdateSeq *",
                        "Geom$_$get_modified(Geom const *param0, Thread *param1)"
                    ],
                    "fn": "get_modified",
                    "indexed": "Geom$47$get_modified",
                    "mangled": "_inCAAAAKP2k",
                    "ot": "inline UpdateSeq",
                    "rt": "UpdateSeq"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_modified(Geom const *param0)",
                    "c_type": "UpdateSeq *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_modified_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772055706461746553657128282a706172616d30292e6765745f6d6f6469666965642829293b",
                    "cpp_ref": "inline UpdateSeq Geom::get_modified(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_modified",
                    "extern": [
                        "UpdateSeq *",
                        "Geom$_$get_modified(Geom const *param0)"
                    ],
                    "fn": "get_modified",
                    "indexed": "Geom$48$get_modified",
                    "mangled": "_inCAAAAHKFV",
                    "ot": "inline UpdateSeq",
                    "rt": "UpdateSeq"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$request_resident(Geom const *param0)",
                    "c_type": "bool",
                    "cn": "Geom",
                    "cni": "Geom_C_request_resident_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726571756573745f7265736964656e7428293b",
                    "cpp_ref": "bool Geom::request_resident(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$request_resident",
                    "extern": [
                        "bool",
                        "Geom$_$request_resident(Geom const *param0)"
                    ],
                    "fn": "request_resident",
                    "indexed": "Geom$49$request_resident",
                    "mangled": "_inCAAAAs4wf",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4 const &mat"
                    ],
                    "argt": [
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "Geom *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "Geom$_$transform_vertices(Geom *param0, LMatrix4 const *param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_transform_vertices_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7472616e73666f726d5f7665727469636573282a706172616d31293b",
                    "cpp_ref": "void Geom::transform_vertices(LMatrix4 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$transform_vertices",
                    "extern": [
                        "void",
                        "Geom$_$transform_vertices(Geom *param0, LMatrix4 const *param1)"
                    ],
                    "fn": "transform_vertices",
                    "indexed": "Geom$50$transform_vertices",
                    "mangled": "_inCAAAAnS75",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$check_valid(Geom const *param0)",
                    "c_type": "bool",
                    "cn": "Geom",
                    "cni": "Geom_C_check_valid_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636865636b5f76616c696428293b",
                    "cpp_ref": "bool Geom::check_valid(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$check_valid",
                    "extern": [
                        "bool",
                        "Geom$_$check_valid(Geom const *param0)"
                    ],
                    "fn": "check_valid",
                    "indexed": "Geom$51$check_valid",
                    "mangled": "_inCAAAARtQb",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "vertex_data"
                    ],
                    "args": [
                        "GeomVertexData const *vertex_data"
                    ],
                    "argt": [
                        "GeomVertexData const*"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "GeomVertexData const *"
                    ],
                    "c_ref": "Geom$_$check_valid(Geom const *param0, GeomVertexData const *param1)",
                    "c_type": "bool",
                    "cn": "Geom",
                    "cni": "Geom_C_check_valid_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636865636b5f76616c696428706172616d31293b",
                    "cpp_ref": "bool Geom::check_valid(GeomVertexData const *vertex_data) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$check_valid",
                    "extern": [
                        "bool",
                        "Geom$_$check_valid(Geom const *param0, GeomVertexData const *param1)"
                    ],
                    "fn": "check_valid",
                    "indexed": "Geom$52$check_valid",
                    "mangled": "_inCAAAAdH6F",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "Thread *"
                    ],
                    "c_ref": "Geom$_$get_bounds(Geom const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< BoundingVolume > *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_bounds_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f626f756e647328706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< BoundingVolume > Geom::get_bounds(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_bounds",
                    "extern": [
                        "ConstPointerTo< BoundingVolume > *",
                        "Geom$_$get_bounds(Geom const *param0, Thread *param1)"
                    ],
                    "fn": "get_bounds",
                    "indexed": "Geom$53$get_bounds",
                    "mangled": "_inCAAAA9WkK",
                    "ot": "ConstPointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_bounds(Geom const *param0)",
                    "c_type": "ConstPointerTo< BoundingVolume > *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_bounds_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f626f756e64732829293b",
                    "cpp_ref": "ConstPointerTo< BoundingVolume > Geom::get_bounds(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_bounds",
                    "extern": [
                        "ConstPointerTo< BoundingVolume > *",
                        "Geom$_$get_bounds(Geom const *param0)"
                    ],
                    "fn": "get_bounds",
                    "indexed": "Geom$54$get_bounds",
                    "mangled": "_inCAAAA5pRF",
                    "ot": "ConstPointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "Thread *"
                    ],
                    "c_ref": "Geom$_$get_nested_vertices(Geom const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "Geom",
                    "cni": "Geom_C_get_nested_vertices_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e65737465645f766572746963657328706172616d31293b",
                    "cpp_ref": "int Geom::get_nested_vertices(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_nested_vertices",
                    "extern": [
                        "int",
                        "Geom$_$get_nested_vertices(Geom const *param0, Thread *param1)"
                    ],
                    "fn": "get_nested_vertices",
                    "indexed": "Geom$55$get_nested_vertices",
                    "mangled": "_inCAAAAkkOF",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_nested_vertices(Geom const *param0)",
                    "c_type": "int",
                    "cn": "Geom",
                    "cni": "Geom_C_get_nested_vertices_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e65737465645f766572746963657328293b",
                    "cpp_ref": "int Geom::get_nested_vertices(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_nested_vertices",
                    "extern": [
                        "int",
                        "Geom$_$get_nested_vertices(Geom const *param0)"
                    ],
                    "fn": "get_nested_vertices",
                    "indexed": "Geom$56$get_nested_vertices",
                    "mangled": "_inCAAAA7ykk",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$mark_bounds_stale(Geom const *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_mark_bounds_stale_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d61726b5f626f756e64735f7374616c6528293b",
                    "cpp_ref": "inline void Geom::mark_bounds_stale(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$mark_bounds_stale",
                    "extern": [
                        "void",
                        "Geom$_$mark_bounds_stale(Geom const *param0)"
                    ],
                    "fn": "mark_bounds_stale",
                    "indexed": "Geom$57$mark_bounds_stale",
                    "mangled": "_inCAAAAM7bs",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "bounds_type"
                    ],
                    "args": [
                        "BoundingVolume::BoundsType bounds_type"
                    ],
                    "argt": [
                        "BoundingVolume::BoundsType"
                    ],
                    "c_argv": [
                        "Geom *",
                        "BoundingVolume::BoundsType"
                    ],
                    "c_ref": "Geom$_$set_bounds_type(Geom *param0, BoundingVolume::BoundsType param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_set_bounds_type_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f626f756e64735f7479706528706172616d31293b",
                    "cpp_ref": "inline void Geom::set_bounds_type(BoundingVolume::BoundsType bounds_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$set_bounds_type",
                    "extern": [
                        "void",
                        "Geom$_$set_bounds_type(Geom *param0, BoundingVolume::BoundsType param1)"
                    ],
                    "fn": "set_bounds_type",
                    "indexed": "Geom$58$set_bounds_type",
                    "mangled": "_inCAAAA_N_x",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_bounds_type(Geom const *param0)",
                    "c_type": "BoundingVolume::BoundsType",
                    "cn": "Geom",
                    "cni": "Geom_C_get_bounds_type_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f626f756e64735f7479706528293b",
                    "cpp_ref": "inline BoundingVolume::BoundsType Geom::get_bounds_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_bounds_type",
                    "extern": [
                        "BoundingVolume::BoundsType",
                        "Geom$_$get_bounds_type(Geom const *param0)"
                    ],
                    "fn": "get_bounds_type",
                    "indexed": "Geom$59$get_bounds_type",
                    "mangled": "_inCAAAAQxyc",
                    "ot": "inline BoundingVolume::BoundsType",
                    "rt": "BoundingVolume::BoundsType"
                },
                {
                    "argc": 1,
                    "argn": [
                        "volume"
                    ],
                    "args": [
                        "BoundingVolume const *volume"
                    ],
                    "argt": [
                        "BoundingVolume const*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "BoundingVolume const *"
                    ],
                    "c_ref": "Geom$_$set_bounds(Geom *param0, BoundingVolume const *param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_set_bounds_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f626f756e647328706172616d31293b",
                    "cpp_ref": "inline void Geom::set_bounds(BoundingVolume const *volume)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$set_bounds",
                    "extern": [
                        "void",
                        "Geom$_$set_bounds(Geom *param0, BoundingVolume const *param1)"
                    ],
                    "fn": "set_bounds",
                    "indexed": "Geom$60$set_bounds",
                    "mangled": "_inCAAAAnNw_",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$clear_bounds(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_clear_bounds_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f626f756e647328293b",
                    "cpp_ref": "inline void Geom::clear_bounds(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$clear_bounds",
                    "extern": [
                        "void",
                        "Geom$_$clear_bounds(Geom *param0)"
                    ],
                    "fn": "clear_bounds",
                    "indexed": "Geom$61$clear_bounds",
                    "mangled": "_inCAAAA92vG",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "std::ostream *"
                    ],
                    "c_ref": "Geom$_$output(Geom const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "virtual void Geom::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$output",
                    "extern": [
                        "void",
                        "Geom$_$output(Geom const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "Geom$62$output",
                    "mangled": "_inCAAAASxCs",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "Geom$_$write(Geom const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_write_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "virtual void Geom::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$write",
                    "extern": [
                        "void",
                        "Geom$_$write(Geom const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "write",
                    "indexed": "Geom$63$write",
                    "mangled": "_inCAAAA1jw_",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "std::ostream *"
                    ],
                    "c_ref": "Geom$_$write(Geom const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_write_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d31293b",
                    "cpp_ref": "virtual void Geom::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$write",
                    "extern": [
                        "void",
                        "Geom$_$write(Geom const *param0, std::ostream *param1)"
                    ],
                    "fn": "write",
                    "indexed": "Geom$64$write",
                    "mangled": "_inCAAAAwaKJ",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$clear_cache(Geom *param0)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_clear_cache_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f636163686528293b",
                    "cpp_ref": "void Geom::clear_cache(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$clear_cache",
                    "extern": [
                        "void",
                        "Geom$_$clear_cache(Geom *param0)"
                    ],
                    "fn": "clear_cache",
                    "indexed": "Geom$65$clear_cache",
                    "mangled": "_inCAAAAr67p",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "Thread *"
                    ],
                    "c_ref": "Geom$_$clear_cache_stage(Geom *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_clear_cache_stage_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f63616368655f737461676528706172616d31293b",
                    "cpp_ref": "void Geom::clear_cache_stage(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$clear_cache_stage",
                    "extern": [
                        "void",
                        "Geom$_$clear_cache_stage(Geom *param0, Thread *param1)"
                    ],
                    "fn": "clear_cache_stage",
                    "indexed": "Geom$66$clear_cache_stage",
                    "mangled": "_inCAAAAC0IT",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "prepared_objects"
                    ],
                    "args": [
                        "PreparedGraphicsObjects *prepared_objects"
                    ],
                    "argt": [
                        "PreparedGraphicsObjects*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "PreparedGraphicsObjects *"
                    ],
                    "c_ref": "Geom$_$prepare(Geom *param0, PreparedGraphicsObjects *param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_prepare_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7072657061726528706172616d31293b",
                    "cpp_ref": "void Geom::prepare(PreparedGraphicsObjects *prepared_objects)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$prepare",
                    "extern": [
                        "void",
                        "Geom$_$prepare(Geom *param0, PreparedGraphicsObjects *param1)"
                    ],
                    "fn": "prepare",
                    "indexed": "Geom$67$prepare",
                    "mangled": "_inCAAAAkUN5",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "prepared_objects"
                    ],
                    "args": [
                        "PreparedGraphicsObjects *prepared_objects"
                    ],
                    "argt": [
                        "PreparedGraphicsObjects*"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "PreparedGraphicsObjects *"
                    ],
                    "c_ref": "Geom$_$is_prepared(Geom const *param0, PreparedGraphicsObjects *param1)",
                    "c_type": "bool",
                    "cn": "Geom",
                    "cni": "Geom_C_is_prepared_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f707265706172656428706172616d31293b",
                    "cpp_ref": "bool Geom::is_prepared(PreparedGraphicsObjects *prepared_objects) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$is_prepared",
                    "extern": [
                        "bool",
                        "Geom$_$is_prepared(Geom const *param0, PreparedGraphicsObjects *param1)"
                    ],
                    "fn": "is_prepared",
                    "indexed": "Geom$68$is_prepared",
                    "mangled": "_inCAAAAir4R",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "prepared_objects"
                    ],
                    "args": [
                        "PreparedGraphicsObjects *prepared_objects"
                    ],
                    "argt": [
                        "PreparedGraphicsObjects*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "PreparedGraphicsObjects *"
                    ],
                    "c_ref": "Geom$_$release(Geom *param0, PreparedGraphicsObjects *param1)",
                    "c_type": "bool",
                    "cn": "Geom",
                    "cni": "Geom_C_release_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e72656c6561736528706172616d31293b",
                    "cpp_ref": "bool Geom::release(PreparedGraphicsObjects *prepared_objects)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$release",
                    "extern": [
                        "bool",
                        "Geom$_$release(Geom *param0, PreparedGraphicsObjects *param1)"
                    ],
                    "fn": "release",
                    "indexed": "Geom$69$release",
                    "mangled": "_inCAAAAYDlG",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$release_all(Geom *param0)",
                    "c_type": "int",
                    "cn": "Geom",
                    "cni": "Geom_C_release_all_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e72656c656173655f616c6c28293b",
                    "cpp_ref": "int Geom::release_all(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$release_all",
                    "extern": [
                        "int",
                        "Geom$_$release_all(Geom *param0)"
                    ],
                    "fn": "release_all",
                    "indexed": "Geom$70$release_all",
                    "mangled": "_inCAAAAtSn_",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "prepared_objects",
                        "gsg"
                    ],
                    "args": [
                        "PreparedGraphicsObjects *prepared_objects",
                        "GraphicsStateGuardianBase *gsg"
                    ],
                    "argt": [
                        "PreparedGraphicsObjects*",
                        "GraphicsStateGuardianBase*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "PreparedGraphicsObjects *",
                        "GraphicsStateGuardianBase *"
                    ],
                    "c_ref": "Geom$_$prepare_now(Geom *param0, PreparedGraphicsObjects *param1, GraphicsStateGuardianBase *param2)",
                    "c_type": "GeomContext *",
                    "cn": "Geom",
                    "cni": "Geom_C_prepare_now_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e707265706172655f6e6f7728706172616d312c20706172616d32293b",
                    "cpp_ref": "GeomContext *Geom::prepare_now(PreparedGraphicsObjects *prepared_objects, GraphicsStateGuardianBase *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$prepare_now",
                    "extern": [
                        "GeomContext *",
                        "Geom$_$prepare_now(Geom *param0, PreparedGraphicsObjects *param1, GraphicsStateGuardianBase *param2)"
                    ],
                    "fn": "prepare_now",
                    "indexed": "Geom$71$prepare_now",
                    "mangled": "_inCAAAAptAs",
                    "ot": "GeomContext*",
                    "rt": "GeomContext"
                },
                {
                    "argc": 4,
                    "argn": [
                        "gsg",
                        "vertex_data",
                        "force",
                        "current_thread"
                    ],
                    "args": [
                        "GraphicsStateGuardianBase *gsg",
                        "GeomVertexData const *vertex_data",
                        "bool force",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "GraphicsStateGuardianBase*",
                        "GeomVertexData const*",
                        "bool",
                        "Thread*"
                    ],
                    "c_argv": [
                        "Geom const *",
                        "GraphicsStateGuardianBase *",
                        "GeomVertexData const *",
                        "bool",
                        "Thread *"
                    ],
                    "c_ref": "Geom$_$draw(Geom const *param0, GraphicsStateGuardianBase *param1, GeomVertexData const *param2, bool param3, Thread *param4)",
                    "c_type": "bool",
                    "cn": "Geom",
                    "cni": "Geom_C_draw_B_pppBp",
                    "cni_args": "pppBp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6472617728706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "bool Geom::draw(GraphicsStateGuardianBase *gsg, GeomVertexData const *vertex_data, bool force, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$draw",
                    "extern": [
                        "bool",
                        "Geom$_$draw(Geom const *param0, GraphicsStateGuardianBase *param1, GeomVertexData const *param2, bool param3, Thread *param4)"
                    ],
                    "fn": "draw",
                    "indexed": "Geom$72$draw",
                    "mangled": "_inCAAAAabKC",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Geom$_$get_next_modified()",
                    "c_type": "UpdateSeq *",
                    "cn": "Geom",
                    "cni": "Geom_C_get_next_modified_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577205570646174655365712847656f6d3a3a6765745f6e6578745f6d6f6469666965642829293b",
                    "cpp_ref": "static UpdateSeq Geom::get_next_modified(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Geom$_$get_next_modified",
                    "extern": [
                        "UpdateSeq *",
                        "Geom$_$get_next_modified()"
                    ],
                    "fn": "get_next_modified",
                    "indexed": "Geom$73$get_next_modified",
                    "mangled": "_inCAAAA7VNn",
                    "ot": "UpdateSeq",
                    "rt": "UpdateSeq"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Geom$_$register_with_read_factory()",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_register_with_read_factory_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d3a3a72656769737465725f776974685f726561645f666163746f727928293b",
                    "cpp_ref": "static void Geom::register_with_read_factory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Geom$_$register_with_read_factory",
                    "extern": [
                        "void",
                        "Geom$_$register_with_read_factory()"
                    ],
                    "fn": "register_with_read_factory",
                    "indexed": "Geom$74$register_with_read_factory",
                    "mangled": "_inCAAAAWhNh",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "Geom *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "Geom$_$write_datagram(Geom *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void Geom::write_datagram(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$write_datagram",
                    "extern": [
                        "void",
                        "Geom$_$write_datagram(Geom *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "Geom$75$write_datagram",
                    "mangled": "_inCAAAApzNO",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "manager"
                    ],
                    "args": [
                        "BamReader *manager"
                    ],
                    "argt": [
                        "BamReader*"
                    ],
                    "c_argv": [
                        "Geom *",
                        "BamReader *"
                    ],
                    "c_ref": "Geom$_$finalize(Geom *param0, BamReader *param1)",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_finalize_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e66696e616c697a6528706172616d31293b",
                    "cpp_ref": "virtual void Geom::finalize(BamReader *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$finalize",
                    "extern": [
                        "void",
                        "Geom$_$finalize(Geom *param0, BamReader *param1)"
                    ],
                    "fn": "finalize",
                    "indexed": "Geom$76$finalize",
                    "mangled": "_inCAAAAtOLt",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Geom$_$get_class_type()",
                    "c_type": "int",
                    "cn": "Geom",
                    "cni": "Geom_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202847656f6d3a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle Geom::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Geom$_$get_class_type",
                    "extern": [
                        "int",
                        "Geom$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "Geom$77$get_class_type",
                    "mangled": "_inCAAAAyQKN",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Geom$_$init_type()",
                    "c_type": "void",
                    "cn": "Geom",
                    "cni": "Geom_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d3a3a696e69745f7479706528293b",
                    "cpp_ref": "static void Geom::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Geom$_$init_type",
                    "extern": [
                        "void",
                        "Geom$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "Geom$78$init_type",
                    "mangled": "_inCAAAAIQs0",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom const *"
                    ],
                    "c_ref": "Geom$_$get_type(Geom const *param0)",
                    "c_type": "int",
                    "cn": "Geom",
                    "cni": "Geom_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle Geom::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$get_type",
                    "extern": [
                        "int",
                        "Geom$_$get_type(Geom const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "Geom$79$get_type",
                    "mangled": "_inCAAAAJan9",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Geom *"
                    ],
                    "c_ref": "Geom$_$force_init_type(Geom *param0)",
                    "c_type": "int",
                    "cn": "Geom",
                    "cni": "Geom_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle Geom::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Geom$_$force_init_type",
                    "extern": [
                        "int",
                        "Geom$_$force_init_type(Geom *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "Geom$80$force_init_type",
                    "mangled": "_inCAAAA_fQQ",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "GeomEnums": {
            "bases": [],
            "enums": {
                "AnimationType": [
                    [
                        "AT_hardware",
                        2
                    ],
                    [
                        "AT_none",
                        0
                    ],
                    [
                        "AT_panda",
                        1
                    ]
                ],
                "Contents": [
                    [
                        "C_clip_point",
                        2
                    ],
                    [
                        "C_color",
                        5
                    ],
                    [
                        "C_index",
                        6
                    ],
                    [
                        "C_matrix",
                        8
                    ],
                    [
                        "C_morph_delta",
                        7
                    ],
                    [
                        "C_normal",
                        9
                    ],
                    [
                        "C_other",
                        0
                    ],
                    [
                        "C_point",
                        1
                    ],
                    [
                        "C_texcoord",
                        4
                    ],
                    [
                        "C_vector",
                        3
                    ]
                ],
                "GeomRendering": [
                    [
                        "GR_adjacency",
                        1048576
                    ],
                    [
                        "GR_composite_bits",
                        7168
                    ],
                    [
                        "GR_flat_first_vertex",
                        8192
                    ],
                    [
                        "GR_flat_last_vertex",
                        16384
                    ],
                    [
                        "GR_indexed_bits",
                        65537
                    ],
                    [
                        "GR_indexed_other",
                        65536
                    ],
                    [
                        "GR_indexed_point",
                        1
                    ],
                    [
                        "GR_line_strip",
                        4096
                    ],
                    [
                        "GR_per_point_size",
                        8
                    ],
                    [
                        "GR_point",
                        2
                    ],
                    [
                        "GR_point_aspect_ratio",
                        32
                    ],
                    [
                        "GR_point_bits",
                        1022
                    ],
                    [
                        "GR_point_perspective",
                        16
                    ],
                    [
                        "GR_point_rotate",
                        128
                    ],
                    [
                        "GR_point_scale",
                        64
                    ],
                    [
                        "GR_point_sprite",
                        256
                    ],
                    [
                        "GR_point_sprite_tex_matrix",
                        512
                    ],
                    [
                        "GR_point_uniform_size",
                        4
                    ],
                    [
                        "GR_render_mode_point",
                        524288
                    ],
                    [
                        "GR_render_mode_wireframe",
                        262144
                    ],
                    [
                        "GR_shade_model_bits",
                        24576
                    ],
                    [
                        "GR_strip_cut_index",
                        131072
                    ],
                    [
                        "GR_triangle_fan",
                        2048
                    ],
                    [
                        "GR_triangle_strip",
                        1024
                    ]
                ],
                "NumericType": [
                    [
                        "NT_float32",
                        5
                    ],
                    [
                        "NT_float64",
                        6
                    ],
                    [
                        "NT_int16",
                        9
                    ],
                    [
                        "NT_int32",
                        10
                    ],
                    [
                        "NT_int8",
                        8
                    ],
                    [
                        "NT_packed_dabc",
                        4
                    ],
                    [
                        "NT_packed_dcba",
                        3
                    ],
                    [
                        "NT_packed_ufloat",
                        11
                    ],
                    [
                        "NT_stdfloat",
                        7
                    ],
                    [
                        "NT_uint16",
                        1
                    ],
                    [
                        "NT_uint32",
                        2
                    ],
                    [
                        "NT_uint8",
                        0
                    ]
                ],
                "PrimitiveType": [
                    [
                        "PT_lines",
                        2
                    ],
                    [
                        "PT_none",
                        0
                    ],
                    [
                        "PT_patches",
                        4
                    ],
                    [
                        "PT_points",
                        3
                    ],
                    [
                        "PT_polygons",
                        1
                    ]
                ],
                "ShadeModel": [
                    [
                        "SM_flat_first_vertex",
                        2
                    ],
                    [
                        "SM_flat_last_vertex",
                        3
                    ],
                    [
                        "SM_smooth",
                        1
                    ],
                    [
                        "SM_uniform",
                        0
                    ]
                ],
                "UsageHint": [
                    [
                        "UH_client",
                        0
                    ],
                    [
                        "UH_dynamic",
                        2
                    ],
                    [
                        "UH_static",
                        3
                    ],
                    [
                        "UH_stream",
                        1
                    ],
                    [
                        "UH_unspecified",
                        4
                    ]
                ]
            },
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomEnums$_$GeomEnums()",
                    "c_type": "GeomEnums *",
                    "cn": "GeomEnums",
                    "cni": "GeomEnums_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d456e756d7328293b",
                    "cpp_ref": "inline GeomEnums::GeomEnums(void) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomEnums$_$GeomEnums",
                    "extern": [
                        "GeomEnums *",
                        "GeomEnums$_$GeomEnums()"
                    ],
                    "fn": "GeomEnums",
                    "indexed": "GeomEnums$1$GeomEnums",
                    "mangled": "_inCAAAATE1Y",
                    "ot": "inline",
                    "rt": "GeomEnums"
                },
                {
                    "argc": 1,
                    "argn": [
                        "arg0"
                    ],
                    "args": [
                        "GeomEnums const &"
                    ],
                    "argt": [
                        "GeomEnums const&"
                    ],
                    "c_argv": [
                        "GeomEnums const *"
                    ],
                    "c_ref": "GeomEnums$_$GeomEnums(GeomEnums const *param0)",
                    "c_type": "GeomEnums *",
                    "cn": "GeomEnums",
                    "cni": "GeomEnums_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d456e756d73282a706172616d30293b",
                    "cpp_ref": "inline GeomEnums::GeomEnums(GeomEnums const &) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomEnums$_$GeomEnums",
                    "extern": [
                        "GeomEnums *",
                        "GeomEnums$_$GeomEnums(GeomEnums const *param0)"
                    ],
                    "fn": "GeomEnums",
                    "indexed": "GeomEnums$2$GeomEnums",
                    "mangled": "_inCAAAAxxGd",
                    "ot": "inline",
                    "rt": "GeomEnums"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomEnums *"
                    ],
                    "c_ref": "GeomEnums$_$downcast_to_Geom(GeomEnums *param0)",
                    "c_type": "Geom *",
                    "cn": "GeomEnums",
                    "cni": "GeomEnums_C_downcast_to_Geom_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d202a29706172616d303b",
                    "cpp_ref": "Geom *GeomEnums::downcast_to_Geom(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomEnums$_$downcast_to_Geom",
                    "extern": [
                        "Geom *",
                        "GeomEnums$_$downcast_to_Geom(GeomEnums *param0)"
                    ],
                    "fn": "downcast_to_Geom",
                    "indexed": "GeomEnums$3$downcast_to_Geom",
                    "mangled": "_inCAAAAcioB",
                    "ot": "Geom*",
                    "rt": "Geom"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomEnums *"
                    ],
                    "c_ref": "GeomEnums$_$downcast_to_GeomPrimitive(GeomEnums *param0)",
                    "c_type": "GeomPrimitive *",
                    "cn": "GeomEnums",
                    "cni": "GeomEnums_C_downcast_to_GeomPrimitive_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d5072696d6974697665202a29706172616d303b",
                    "cpp_ref": "GeomPrimitive *GeomEnums::downcast_to_GeomPrimitive(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomEnums$_$downcast_to_GeomPrimitive",
                    "extern": [
                        "GeomPrimitive *",
                        "GeomEnums$_$downcast_to_GeomPrimitive(GeomEnums *param0)"
                    ],
                    "fn": "downcast_to_GeomPrimitive",
                    "indexed": "GeomEnums$4$downcast_to_GeomPrimitive",
                    "mangled": "_inCAAAA94K1",
                    "ot": "GeomPrimitive*",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomEnums *"
                    ],
                    "c_ref": "GeomEnums$_$downcast_to_GeomVertexData(GeomEnums *param0)",
                    "c_type": "GeomVertexData *",
                    "cn": "GeomEnums",
                    "cni": "GeomEnums_C_downcast_to_GeomVertexData_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d56657274657844617461202a29706172616d303b",
                    "cpp_ref": "GeomVertexData *GeomEnums::downcast_to_GeomVertexData(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomEnums$_$downcast_to_GeomVertexData",
                    "extern": [
                        "GeomVertexData *",
                        "GeomEnums$_$downcast_to_GeomVertexData(GeomEnums *param0)"
                    ],
                    "fn": "downcast_to_GeomVertexData",
                    "indexed": "GeomEnums$5$downcast_to_GeomVertexData",
                    "mangled": "_inCAAAALM59",
                    "ot": "GeomVertexData*",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomEnums *"
                    ],
                    "c_ref": "GeomEnums$_$downcast_to_GeomVertexFormat(GeomEnums *param0)",
                    "c_type": "GeomVertexFormat *",
                    "cn": "GeomEnums",
                    "cni": "GeomEnums_C_downcast_to_GeomVertexFormat_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d566572746578466f726d6174202a29706172616d303b",
                    "cpp_ref": "GeomVertexFormat *GeomEnums::downcast_to_GeomVertexFormat(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomEnums$_$downcast_to_GeomVertexFormat",
                    "extern": [
                        "GeomVertexFormat *",
                        "GeomEnums$_$downcast_to_GeomVertexFormat(GeomEnums *param0)"
                    ],
                    "fn": "downcast_to_GeomVertexFormat",
                    "indexed": "GeomEnums$6$downcast_to_GeomVertexFormat",
                    "mangled": "_inCAAAACWg5",
                    "ot": "GeomVertexFormat*",
                    "rt": "GeomVertexFormat"
                }
            ]
        },
        "GeomNode": {
            "bases": [
                "PandaNode"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "GeomNode$_$GeomNode(char const *param0)",
                    "c_type": "GeomNode *",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_ctor_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d4e6f6465287374643a3a737472696e6728706172616d3029293b",
                    "cpp_ref": "explicit GeomNode::GeomNode(std::string const &name)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomNode$_$GeomNode",
                    "extern": [
                        "GeomNode *",
                        "GeomNode$_$GeomNode(char const *param0)"
                    ],
                    "fn": "GeomNode",
                    "indexed": "GeomNode$1$GeomNode",
                    "mangled": "_inCAAAA4m3E",
                    "ot": "explicit",
                    "rt": "GeomNode"
                },
                {
                    "argc": 3,
                    "argn": [
                        "attribs",
                        "attrib_types",
                        "transformer"
                    ],
                    "args": [
                        "AccumulatedAttribs const &attribs",
                        "int attrib_types",
                        "GeomTransformer &transformer"
                    ],
                    "argt": [
                        "AccumulatedAttribs const&",
                        "int",
                        "GeomTransformer&"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "AccumulatedAttribs const *",
                        "int",
                        "GeomTransformer *"
                    ],
                    "c_ref": "GeomNode$_$apply_attribs_to_vertices(GeomNode *param0, AccumulatedAttribs const *param1, int param2, GeomTransformer *param3)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_apply_attribs_to_vertices_v_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6170706c795f617474726962735f746f5f7665727469636573282a706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "virtual void GeomNode::apply_attribs_to_vertices(AccumulatedAttribs const &attribs, int attrib_types, GeomTransformer &transformer)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$apply_attribs_to_vertices",
                    "extern": [
                        "void",
                        "GeomNode$_$apply_attribs_to_vertices(GeomNode *param0, AccumulatedAttribs const *param1, int param2, GeomTransformer *param3)"
                    ],
                    "fn": "apply_attribs_to_vertices",
                    "indexed": "GeomNode$2$apply_attribs_to_vertices",
                    "mangled": "_inCAAAAVy6F",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4 const &mat"
                    ],
                    "argt": [
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "GeomNode$_$xform(GeomNode *param0, LMatrix4 const *param1)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_xform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e78666f726d282a706172616d31293b",
                    "cpp_ref": "virtual void GeomNode::xform(LMatrix4 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$xform",
                    "extern": [
                        "void",
                        "GeomNode$_$xform(GeomNode *param0, LMatrix4 const *param1)"
                    ],
                    "fn": "xform",
                    "indexed": "GeomNode$3$xform",
                    "mangled": "_inCAAAA2Tj5",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode const *"
                    ],
                    "c_ref": "GeomNode$_$is_renderable(GeomNode const *param0)",
                    "c_type": "bool",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_is_renderable_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f72656e64657261626c6528293b",
                    "cpp_ref": "virtual bool GeomNode::is_renderable(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$is_renderable",
                    "extern": [
                        "bool",
                        "GeomNode$_$is_renderable(GeomNode const *param0)"
                    ],
                    "fn": "is_renderable",
                    "indexed": "GeomNode$4$is_renderable",
                    "mangled": "_inCAAAAclSe",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "trav",
                        "data"
                    ],
                    "args": [
                        "CullTraverser *trav",
                        "CullTraverserData &data"
                    ],
                    "argt": [
                        "CullTraverser*",
                        "CullTraverserData&"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "CullTraverser *",
                        "CullTraverserData *"
                    ],
                    "c_ref": "GeomNode$_$add_for_draw(GeomNode *param0, CullTraverser *param1, CullTraverserData *param2)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_add_for_draw_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f666f725f6472617728706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void GeomNode::add_for_draw(CullTraverser *trav, CullTraverserData &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$add_for_draw",
                    "extern": [
                        "void",
                        "GeomNode$_$add_for_draw(GeomNode *param0, CullTraverser *param1, CullTraverserData *param2)"
                    ],
                    "fn": "add_for_draw",
                    "indexed": "GeomNode$5$add_for_draw",
                    "mangled": "_inCAAAA2cJJ",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode const *"
                    ],
                    "c_ref": "GeomNode$_$safe_to_flatten(GeomNode const *param0)",
                    "c_type": "bool",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_safe_to_flatten_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f666c617474656e28293b",
                    "cpp_ref": "virtual bool GeomNode::safe_to_flatten(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$safe_to_flatten",
                    "extern": [
                        "bool",
                        "GeomNode$_$safe_to_flatten(GeomNode const *param0)"
                    ],
                    "fn": "safe_to_flatten",
                    "indexed": "GeomNode$6$safe_to_flatten",
                    "mangled": "_inCAAAAGddz",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode const *"
                    ],
                    "c_ref": "GeomNode$_$safe_to_combine(GeomNode const *param0)",
                    "c_type": "bool",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_safe_to_combine_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f636f6d62696e6528293b",
                    "cpp_ref": "virtual bool GeomNode::safe_to_combine(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$safe_to_combine",
                    "extern": [
                        "bool",
                        "GeomNode$_$safe_to_combine(GeomNode const *param0)"
                    ],
                    "fn": "safe_to_combine",
                    "indexed": "GeomNode$7$safe_to_combine",
                    "mangled": "_inCAAAA2zaj",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 4,
                    "argn": [
                        "gsg",
                        "node_state",
                        "transformer",
                        "current_thread"
                    ],
                    "args": [
                        "GraphicsStateGuardianBase *gsg",
                        "RenderState const *node_state",
                        "GeomTransformer &transformer",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "GraphicsStateGuardianBase*",
                        "RenderState const*",
                        "GeomTransformer&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "GraphicsStateGuardianBase *",
                        "RenderState const *",
                        "GeomTransformer *",
                        "Thread *"
                    ],
                    "c_ref": "GeomNode$_$r_prepare_scene(GeomNode *param0, GraphicsStateGuardianBase *param1, RenderState const *param2, GeomTransformer *param3, Thread *param4)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_r_prepare_scene_v_ppppp",
                    "cni_args": "ppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e725f707265706172655f7363656e6528706172616d312c20706172616d322c202a706172616d332c20706172616d34293b",
                    "cpp_ref": "virtual void GeomNode::r_prepare_scene(GraphicsStateGuardianBase *gsg, RenderState const *node_state, GeomTransformer &transformer, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$r_prepare_scene",
                    "extern": [
                        "void",
                        "GeomNode$_$r_prepare_scene(GeomNode *param0, GraphicsStateGuardianBase *param1, RenderState const *param2, GeomTransformer *param3, Thread *param4)"
                    ],
                    "fn": "r_prepare_scene",
                    "indexed": "GeomNode$8$r_prepare_scene",
                    "mangled": "_inCAAAAVFmF",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "bool value"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "bool"
                    ],
                    "c_ref": "GeomNode$_$set_preserved(GeomNode *param0, bool param1)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_set_preserved_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f70726573657276656428706172616d31293b",
                    "cpp_ref": "inline void GeomNode::set_preserved(bool value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$set_preserved",
                    "extern": [
                        "void",
                        "GeomNode$_$set_preserved(GeomNode *param0, bool param1)"
                    ],
                    "fn": "set_preserved",
                    "indexed": "GeomNode$9$set_preserved",
                    "mangled": "_inCAAAA1Bv8",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode const *"
                    ],
                    "c_ref": "GeomNode$_$get_preserved(GeomNode const *param0)",
                    "c_type": "bool",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_get_preserved_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f70726573657276656428293b",
                    "cpp_ref": "inline bool GeomNode::get_preserved(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$get_preserved",
                    "extern": [
                        "bool",
                        "GeomNode$_$get_preserved(GeomNode const *param0)"
                    ],
                    "fn": "get_preserved",
                    "indexed": "GeomNode$10$get_preserved",
                    "mangled": "_inCAAAAiZ2Q",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode const *"
                    ],
                    "c_ref": "GeomNode$_$get_num_geoms(GeomNode const *param0)",
                    "c_type": "int",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_get_num_geoms_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f67656f6d7328293b",
                    "cpp_ref": "inline int GeomNode::get_num_geoms(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$get_num_geoms",
                    "extern": [
                        "int",
                        "GeomNode$_$get_num_geoms(GeomNode const *param0)"
                    ],
                    "fn": "get_num_geoms",
                    "indexed": "GeomNode$11$get_num_geoms",
                    "mangled": "_inCAAAAI0Ys",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomNode const *",
                        "int"
                    ],
                    "c_ref": "GeomNode$_$get_geom(GeomNode const *param0, int param1)",
                    "c_type": "ConstPointerTo< Geom > *",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_get_geom_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d203e28282a706172616d30292e6765745f67656f6d28706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< Geom > GeomNode::get_geom(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$get_geom",
                    "extern": [
                        "ConstPointerTo< Geom > *",
                        "GeomNode$_$get_geom(GeomNode const *param0, int param1)"
                    ],
                    "fn": "get_geom",
                    "indexed": "GeomNode$12$get_geom",
                    "mangled": "_inCAAAAAgFb",
                    "ot": "inline ConstPointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "int"
                    ],
                    "c_ref": "GeomNode$_$modify_geom(GeomNode *param0, int param1)",
                    "c_type": "PointerTo< Geom > *",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_modify_geom_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d203e28282a706172616d30292e6d6f646966795f67656f6d28706172616d3129293b",
                    "cpp_ref": "inline PointerTo< Geom > GeomNode::modify_geom(int n)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$modify_geom",
                    "extern": [
                        "PointerTo< Geom > *",
                        "GeomNode$_$modify_geom(GeomNode *param0, int param1)"
                    ],
                    "fn": "modify_geom",
                    "indexed": "GeomNode$13$modify_geom",
                    "mangled": "_inCAAAAh0cC",
                    "ot": "inline PointerTo< Geom >",
                    "rt": "Geom"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomNode const *",
                        "int"
                    ],
                    "c_ref": "GeomNode$_$get_geom_state(GeomNode const *param0, int param1)",
                    "c_type": "RenderState const *",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_get_geom_state_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f67656f6d5f737461746528706172616d31293b",
                    "cpp_ref": "inline RenderState const *GeomNode::get_geom_state(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$get_geom_state",
                    "extern": [
                        "RenderState const *",
                        "GeomNode$_$get_geom_state(GeomNode const *param0, int param1)"
                    ],
                    "fn": "get_geom_state",
                    "indexed": "GeomNode$14$get_geom_state",
                    "mangled": "_inCAAAAeIGG",
                    "ot": "inline RenderState const*",
                    "rt": "RenderState"
                },
                {
                    "argc": 2,
                    "argn": [
                        "n",
                        "state"
                    ],
                    "args": [
                        "int n",
                        "RenderState const *state"
                    ],
                    "argt": [
                        "int",
                        "RenderState const*"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "int",
                        "RenderState const *"
                    ],
                    "c_ref": "GeomNode$_$set_geom_state(GeomNode *param0, int param1, RenderState const *param2)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_set_geom_state_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f67656f6d5f737461746528706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomNode::set_geom_state(int n, RenderState const *state)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$set_geom_state",
                    "extern": [
                        "void",
                        "GeomNode$_$set_geom_state(GeomNode *param0, int param1, RenderState const *param2)"
                    ],
                    "fn": "set_geom_state",
                    "indexed": "GeomNode$15$set_geom_state",
                    "mangled": "_inCAAAAqNIz",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "geom",
                        "state"
                    ],
                    "args": [
                        "Geom *geom",
                        "RenderState const *state"
                    ],
                    "argt": [
                        "Geom*",
                        "RenderState const*"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "Geom *",
                        "RenderState const *"
                    ],
                    "c_ref": "GeomNode$_$add_geom(GeomNode *param0, Geom *param1, RenderState const *param2)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_add_geom_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f67656f6d28706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomNode::add_geom(Geom *geom, RenderState const *state)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$add_geom",
                    "extern": [
                        "void",
                        "GeomNode$_$add_geom(GeomNode *param0, Geom *param1, RenderState const *param2)"
                    ],
                    "fn": "add_geom",
                    "indexed": "GeomNode$16$add_geom",
                    "mangled": "_inCAAAAA4ql",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "geom"
                    ],
                    "args": [
                        "Geom *geom"
                    ],
                    "argt": [
                        "Geom*"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "Geom *"
                    ],
                    "c_ref": "GeomNode$_$add_geom(GeomNode *param0, Geom *param1)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_add_geom_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f67656f6d28706172616d31293b",
                    "cpp_ref": "void GeomNode::add_geom(Geom *geom, RenderState const *state)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$add_geom",
                    "extern": [
                        "void",
                        "GeomNode$_$add_geom(GeomNode *param0, Geom *param1)"
                    ],
                    "fn": "add_geom",
                    "indexed": "GeomNode$17$add_geom",
                    "mangled": "_inCAAAAg1uL",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "GeomNode const *other"
                    ],
                    "argt": [
                        "GeomNode const*"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "GeomNode const *"
                    ],
                    "c_ref": "GeomNode$_$add_geoms_from(GeomNode *param0, GeomNode const *param1)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_add_geoms_from_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f67656f6d735f66726f6d28706172616d31293b",
                    "cpp_ref": "void GeomNode::add_geoms_from(GeomNode const *other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$add_geoms_from",
                    "extern": [
                        "void",
                        "GeomNode$_$add_geoms_from(GeomNode *param0, GeomNode const *param1)"
                    ],
                    "fn": "add_geoms_from",
                    "indexed": "GeomNode$18$add_geoms_from",
                    "mangled": "_inCAAAA06du",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "n",
                        "geom"
                    ],
                    "args": [
                        "int n",
                        "Geom *geom"
                    ],
                    "argt": [
                        "int",
                        "Geom*"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "int",
                        "Geom *"
                    ],
                    "c_ref": "GeomNode$_$set_geom(GeomNode *param0, int param1, Geom *param2)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_set_geom_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f67656f6d28706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomNode::set_geom(int n, Geom *geom)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$set_geom",
                    "extern": [
                        "void",
                        "GeomNode$_$set_geom(GeomNode *param0, int param1, Geom *param2)"
                    ],
                    "fn": "set_geom",
                    "indexed": "GeomNode$19$set_geom",
                    "mangled": "_inCAAAAOrgw",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "int"
                    ],
                    "c_ref": "GeomNode$_$remove_geom(GeomNode *param0, int param1)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_remove_geom_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f67656f6d28706172616d31293b",
                    "cpp_ref": "inline void GeomNode::remove_geom(int n)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$remove_geom",
                    "extern": [
                        "void",
                        "GeomNode$_$remove_geom(GeomNode *param0, int param1)"
                    ],
                    "fn": "remove_geom",
                    "indexed": "GeomNode$20$remove_geom",
                    "mangled": "_inCAAAAV9b7",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode *"
                    ],
                    "c_ref": "GeomNode$_$remove_all_geoms(GeomNode *param0)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_remove_all_geoms_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f616c6c5f67656f6d7328293b",
                    "cpp_ref": "inline void GeomNode::remove_all_geoms(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$remove_all_geoms",
                    "extern": [
                        "void",
                        "GeomNode$_$remove_all_geoms(GeomNode *param0)"
                    ],
                    "fn": "remove_all_geoms",
                    "indexed": "GeomNode$21$remove_all_geoms",
                    "mangled": "_inCAAAA_NLA",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode const *"
                    ],
                    "c_ref": "GeomNode$_$check_valid(GeomNode const *param0)",
                    "c_type": "bool",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_check_valid_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636865636b5f76616c696428293b",
                    "cpp_ref": "bool GeomNode::check_valid(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$check_valid",
                    "extern": [
                        "bool",
                        "GeomNode$_$check_valid(GeomNode const *param0)"
                    ],
                    "fn": "check_valid",
                    "indexed": "GeomNode$22$check_valid",
                    "mangled": "_inCAAAAs0De",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode *"
                    ],
                    "c_ref": "GeomNode$_$decompose(GeomNode *param0)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_decompose_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6465636f6d706f736528293b",
                    "cpp_ref": "void GeomNode::decompose(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$decompose",
                    "extern": [
                        "void",
                        "GeomNode$_$decompose(GeomNode *param0)"
                    ],
                    "fn": "decompose",
                    "indexed": "GeomNode$23$decompose",
                    "mangled": "_inCAAAAzvce",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "max_indices",
                        "preserve_order"
                    ],
                    "args": [
                        "int max_indices",
                        "bool preserve_order"
                    ],
                    "argt": [
                        "int",
                        "bool"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "int",
                        "bool"
                    ],
                    "c_ref": "GeomNode$_$unify(GeomNode *param0, int param1, bool param2)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_unify_v_piB",
                    "cni_args": "piB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e69667928706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomNode::unify(int max_indices, bool preserve_order)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$unify",
                    "extern": [
                        "void",
                        "GeomNode$_$unify(GeomNode *param0, int param1, bool param2)"
                    ],
                    "fn": "unify",
                    "indexed": "GeomNode$24$unify",
                    "mangled": "_inCAAAAX2Y_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "GeomNode const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "GeomNode$_$write_geoms(GeomNode const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_write_geoms_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f67656f6d73282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomNode::write_geoms(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$write_geoms",
                    "extern": [
                        "void",
                        "GeomNode$_$write_geoms(GeomNode const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "write_geoms",
                    "indexed": "GeomNode$25$write_geoms",
                    "mangled": "_inCAAAA_sIY",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "GeomNode const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "GeomNode$_$write_verbose(GeomNode const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_write_verbose_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f766572626f7365282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomNode::write_verbose(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$write_verbose",
                    "extern": [
                        "void",
                        "GeomNode$_$write_verbose(GeomNode const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "write_verbose",
                    "indexed": "GeomNode$26$write_verbose",
                    "mangled": "_inCAAAAkYdb",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomNode$_$get_default_collide_mask()",
                    "c_type": "CollideMask *",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_get_default_collide_mask_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6c6c6964654d61736b2847656f6d4e6f64653a3a6765745f64656661756c745f636f6c6c6964655f6d61736b2829293b",
                    "cpp_ref": "static inline CollideMask GeomNode::get_default_collide_mask(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomNode$_$get_default_collide_mask",
                    "extern": [
                        "CollideMask *",
                        "GeomNode$_$get_default_collide_mask()"
                    ],
                    "fn": "get_default_collide_mask",
                    "indexed": "GeomNode$27$get_default_collide_mask",
                    "mangled": "_inCAAAAlm7A",
                    "ot": "inline CollideMask",
                    "rt": "CollideMask"
                },
                {
                    "argc": 3,
                    "argn": [
                        "gsg",
                        "node_state",
                        "transformer"
                    ],
                    "args": [
                        "GraphicsStateGuardianBase *gsg",
                        "RenderState const *node_state",
                        "GeomTransformer &transformer"
                    ],
                    "argt": [
                        "GraphicsStateGuardianBase*",
                        "RenderState const*",
                        "GeomTransformer&"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "GraphicsStateGuardianBase *",
                        "RenderState const *",
                        "GeomTransformer *"
                    ],
                    "c_ref": "GeomNode$_$do_premunge(GeomNode *param0, GraphicsStateGuardianBase *param1, RenderState const *param2, GeomTransformer *param3)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_do_premunge_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e646f5f7072656d756e676528706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "void GeomNode::do_premunge(GraphicsStateGuardianBase *gsg, RenderState const *node_state, GeomTransformer &transformer)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$do_premunge",
                    "extern": [
                        "void",
                        "GeomNode$_$do_premunge(GeomNode *param0, GraphicsStateGuardianBase *param1, RenderState const *param2, GeomTransformer *param3)"
                    ],
                    "fn": "do_premunge",
                    "indexed": "GeomNode$28$do_premunge",
                    "mangled": "_inCAAAAwpGv",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomNode const *",
                        "Thread *"
                    ],
                    "c_ref": "GeomNode$_$get_geoms(GeomNode const *param0, Thread *param1)",
                    "c_type": "GeomNode::Geoms *",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_get_geoms_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d4e6f64653a3a47656f6d7328282a706172616d30292e6765745f67656f6d7328706172616d3129293b",
                    "cpp_ref": "inline GeomNode::Geoms GeomNode::get_geoms(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$get_geoms",
                    "extern": [
                        "GeomNode::Geoms *",
                        "GeomNode$_$get_geoms(GeomNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_geoms",
                    "indexed": "GeomNode$29$get_geoms",
                    "mangled": "_inCAAAAg1Ql",
                    "ot": "inline GeomNode::Geoms",
                    "rt": "GeomNode::Geoms"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode const *"
                    ],
                    "c_ref": "GeomNode$_$get_geoms(GeomNode const *param0)",
                    "c_type": "GeomNode::Geoms *",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_get_geoms_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d4e6f64653a3a47656f6d7328282a706172616d30292e6765745f67656f6d732829293b",
                    "cpp_ref": "inline GeomNode::Geoms GeomNode::get_geoms(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$get_geoms",
                    "extern": [
                        "GeomNode::Geoms *",
                        "GeomNode$_$get_geoms(GeomNode const *param0)"
                    ],
                    "fn": "get_geoms",
                    "indexed": "GeomNode$30$get_geoms",
                    "mangled": "_inCAAAAraws",
                    "ot": "inline GeomNode::Geoms",
                    "rt": "GeomNode::Geoms"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomNode$_$register_with_read_factory()",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_register_with_read_factory_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d4e6f64653a3a72656769737465725f776974685f726561645f666163746f727928293b",
                    "cpp_ref": "static void GeomNode::register_with_read_factory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomNode$_$register_with_read_factory",
                    "extern": [
                        "void",
                        "GeomNode$_$register_with_read_factory()"
                    ],
                    "fn": "register_with_read_factory",
                    "indexed": "GeomNode$31$register_with_read_factory",
                    "mangled": "_inCAAAAi6Wq",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "GeomNode$_$write_datagram(GeomNode *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void GeomNode::write_datagram(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$write_datagram",
                    "extern": [
                        "void",
                        "GeomNode$_$write_datagram(GeomNode *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "GeomNode$32$write_datagram",
                    "mangled": "_inCAAAAYAMR",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "manager"
                    ],
                    "args": [
                        "BamReader *manager"
                    ],
                    "argt": [
                        "BamReader*"
                    ],
                    "c_argv": [
                        "GeomNode *",
                        "BamReader *"
                    ],
                    "c_ref": "GeomNode$_$finalize(GeomNode *param0, BamReader *param1)",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_finalize_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e66696e616c697a6528706172616d31293b",
                    "cpp_ref": "virtual void GeomNode::finalize(BamReader *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$finalize",
                    "extern": [
                        "void",
                        "GeomNode$_$finalize(GeomNode *param0, BamReader *param1)"
                    ],
                    "fn": "finalize",
                    "indexed": "GeomNode$33$finalize",
                    "mangled": "_inCAAAA3iMf",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomNode$_$get_class_type()",
                    "c_type": "int",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202847656f6d4e6f64653a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle GeomNode::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomNode$_$get_class_type",
                    "extern": [
                        "int",
                        "GeomNode$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "GeomNode$34$get_class_type",
                    "mangled": "_inCAAAAnVK5",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomNode$_$init_type()",
                    "c_type": "void",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d4e6f64653a3a696e69745f7479706528293b",
                    "cpp_ref": "static void GeomNode::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomNode$_$init_type",
                    "extern": [
                        "void",
                        "GeomNode$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "GeomNode$35$init_type",
                    "mangled": "_inCAAAArooX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode const *"
                    ],
                    "c_ref": "GeomNode$_$get_type(GeomNode const *param0)",
                    "c_type": "int",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomNode::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$get_type",
                    "extern": [
                        "int",
                        "GeomNode$_$get_type(GeomNode const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "GeomNode$36$get_type",
                    "mangled": "_inCAAAAuLNg",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomNode *"
                    ],
                    "c_ref": "GeomNode$_$force_init_type(GeomNode *param0)",
                    "c_type": "int",
                    "cn": "GeomNode",
                    "cni": "GeomNode_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomNode::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomNode$_$force_init_type",
                    "extern": [
                        "int",
                        "GeomNode$_$force_init_type(GeomNode *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "GeomNode$37$force_init_type",
                    "mangled": "_inCAAAA6xWV",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "GeomPrimitive": {
            "bases": [
                "CopyOnWriteObject",
                "GeomEnums"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$upcast_to_CopyOnWriteObject(GeomPrimitive *param0)",
                    "c_type": "CopyOnWriteObject *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_upcast_to_CopyOnWriteObject_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2028436f70794f6e57726974654f626a656374202a29706172616d303b",
                    "cpp_ref": "CopyOnWriteObject *GeomPrimitive::upcast_to_CopyOnWriteObject(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$upcast_to_CopyOnWriteObject",
                    "extern": [
                        "CopyOnWriteObject *",
                        "GeomPrimitive$_$upcast_to_CopyOnWriteObject(GeomPrimitive *param0)"
                    ],
                    "fn": "upcast_to_CopyOnWriteObject",
                    "indexed": "GeomPrimitive$1$upcast_to_CopyOnWriteObject",
                    "mangled": "_inCAAAAlsEr",
                    "ot": "CopyOnWriteObject*",
                    "rt": "CopyOnWriteObject"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$upcast_to_GeomEnums(GeomPrimitive *param0)",
                    "c_type": "GeomEnums *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_upcast_to_GeomEnums_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d456e756d73202a29706172616d303b",
                    "cpp_ref": "GeomEnums *GeomPrimitive::upcast_to_GeomEnums(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$upcast_to_GeomEnums",
                    "extern": [
                        "GeomEnums *",
                        "GeomPrimitive$_$upcast_to_GeomEnums(GeomPrimitive *param0)"
                    ],
                    "fn": "upcast_to_GeomEnums",
                    "indexed": "GeomPrimitive$2$upcast_to_GeomEnums",
                    "mangled": "_inCAAAAsYAl",
                    "ot": "GeomEnums*",
                    "rt": "GeomEnums"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$make_copy(GeomPrimitive const *param0)",
                    "c_type": "PointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_make_copy_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e6d616b655f636f70792829293b",
                    "cpp_ref": "virtual PointerTo< GeomPrimitive > GeomPrimitive::make_copy(void) const = 0",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$make_copy",
                    "extern": [
                        "PointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$make_copy(GeomPrimitive const *param0)"
                    ],
                    "fn": "make_copy",
                    "indexed": "GeomPrimitive$3$make_copy",
                    "mangled": "_inCAAAAkToi",
                    "ot": "virtual PointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_primitive_type(GeomPrimitive const *param0)",
                    "c_type": "GeomEnums::PrimitiveType",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_primitive_type_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7072696d69746976655f7479706528293b",
                    "cpp_ref": "virtual GeomEnums::PrimitiveType GeomPrimitive::get_primitive_type(void) const = 0",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_primitive_type",
                    "extern": [
                        "GeomEnums::PrimitiveType",
                        "GeomPrimitive$_$get_primitive_type(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_primitive_type",
                    "indexed": "GeomPrimitive$4$get_primitive_type",
                    "mangled": "_inCAAAAGgvy",
                    "ot": "virtual GeomEnums::PrimitiveType",
                    "rt": "GeomEnums::PrimitiveType"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_geom_rendering(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_geom_rendering_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f67656f6d5f72656e646572696e6728293b",
                    "cpp_ref": "virtual int GeomPrimitive::get_geom_rendering(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_geom_rendering",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_geom_rendering(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_geom_rendering",
                    "indexed": "GeomPrimitive$5$get_geom_rendering",
                    "mangled": "_inCAAAAdMe3",
                    "ot": "virtual int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_shade_model(GeomPrimitive const *param0)",
                    "c_type": "GeomEnums::ShadeModel",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_shade_model_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f73686164655f6d6f64656c28293b",
                    "cpp_ref": "inline GeomEnums::ShadeModel GeomPrimitive::get_shade_model(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_shade_model",
                    "extern": [
                        "GeomEnums::ShadeModel",
                        "GeomPrimitive$_$get_shade_model(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_shade_model",
                    "indexed": "GeomPrimitive$6$get_shade_model",
                    "mangled": "_inCAAAA7mHk",
                    "ot": "inline GeomEnums::ShadeModel",
                    "rt": "GeomEnums::ShadeModel"
                },
                {
                    "argc": 1,
                    "argn": [
                        "shade_model"
                    ],
                    "args": [
                        "GeomEnums::ShadeModel shade_model"
                    ],
                    "argt": [
                        "GeomEnums::ShadeModel"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "GeomEnums::ShadeModel"
                    ],
                    "c_ref": "GeomPrimitive$_$set_shade_model(GeomPrimitive *param0, GeomEnums::ShadeModel param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_set_shade_model_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73686164655f6d6f64656c28706172616d31293b",
                    "cpp_ref": "inline void GeomPrimitive::set_shade_model(GeomEnums::ShadeModel shade_model)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$set_shade_model",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$set_shade_model(GeomPrimitive *param0, GeomEnums::ShadeModel param1)"
                    ],
                    "fn": "set_shade_model",
                    "indexed": "GeomPrimitive$7$set_shade_model",
                    "mangled": "_inCAAAAloHJ",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_usage_hint(GeomPrimitive const *param0)",
                    "c_type": "GeomEnums::UsageHint",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_usage_hint_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f75736167655f68696e7428293b",
                    "cpp_ref": "inline GeomEnums::UsageHint GeomPrimitive::get_usage_hint(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_usage_hint",
                    "extern": [
                        "GeomEnums::UsageHint",
                        "GeomPrimitive$_$get_usage_hint(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_usage_hint",
                    "indexed": "GeomPrimitive$8$get_usage_hint",
                    "mangled": "_inCAAAArTA_",
                    "ot": "inline GeomEnums::UsageHint",
                    "rt": "GeomEnums::UsageHint"
                },
                {
                    "argc": 1,
                    "argn": [
                        "usage_hint"
                    ],
                    "args": [
                        "GeomEnums::UsageHint usage_hint"
                    ],
                    "argt": [
                        "GeomEnums::UsageHint"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "GeomEnums::UsageHint"
                    ],
                    "c_ref": "GeomPrimitive$_$set_usage_hint(GeomPrimitive *param0, GeomEnums::UsageHint param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_set_usage_hint_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f75736167655f68696e7428706172616d31293b",
                    "cpp_ref": "void GeomPrimitive::set_usage_hint(GeomEnums::UsageHint usage_hint)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$set_usage_hint",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$set_usage_hint(GeomPrimitive *param0, GeomEnums::UsageHint param1)"
                    ],
                    "fn": "set_usage_hint",
                    "indexed": "GeomPrimitive$9$set_usage_hint",
                    "mangled": "_inCAAAApILm",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_index_type(GeomPrimitive const *param0)",
                    "c_type": "GeomEnums::NumericType",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_index_type_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f696e6465785f7479706528293b",
                    "cpp_ref": "inline GeomEnums::NumericType GeomPrimitive::get_index_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_index_type",
                    "extern": [
                        "GeomEnums::NumericType",
                        "GeomPrimitive$_$get_index_type(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_index_type",
                    "indexed": "GeomPrimitive$10$get_index_type",
                    "mangled": "_inCAAAAqhQw",
                    "ot": "inline GeomEnums::NumericType",
                    "rt": "GeomEnums::NumericType"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index_type"
                    ],
                    "args": [
                        "GeomEnums::NumericType index_type"
                    ],
                    "argt": [
                        "GeomEnums::NumericType"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "GeomEnums::NumericType"
                    ],
                    "c_ref": "GeomPrimitive$_$set_index_type(GeomPrimitive *param0, GeomEnums::NumericType param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_set_index_type_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f696e6465785f7479706528706172616d31293b",
                    "cpp_ref": "void GeomPrimitive::set_index_type(GeomEnums::NumericType index_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$set_index_type",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$set_index_type(GeomPrimitive *param0, GeomEnums::NumericType param1)"
                    ],
                    "fn": "set_index_type",
                    "indexed": "GeomPrimitive$11$set_index_type",
                    "mangled": "_inCAAAAAwMD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$is_composite(GeomPrimitive const *param0)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_is_composite_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f636f6d706f7369746528293b",
                    "cpp_ref": "inline bool GeomPrimitive::is_composite(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$is_composite",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$is_composite(GeomPrimitive const *param0)"
                    ],
                    "fn": "is_composite",
                    "indexed": "GeomPrimitive$12$is_composite",
                    "mangled": "_inCAAAAjrU4",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$is_indexed(GeomPrimitive const *param0)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_is_indexed_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f696e646578656428293b",
                    "cpp_ref": "inline bool GeomPrimitive::is_indexed(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$is_indexed",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$is_indexed(GeomPrimitive const *param0)"
                    ],
                    "fn": "is_indexed",
                    "indexed": "GeomPrimitive$13$is_indexed",
                    "mangled": "_inCAAAA6QHh",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_first_vertex(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_first_vertex_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f66697273745f76657274657828293b",
                    "cpp_ref": "inline int GeomPrimitive::get_first_vertex(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_first_vertex",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_first_vertex(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_first_vertex",
                    "indexed": "GeomPrimitive$14$get_first_vertex",
                    "mangled": "_inCAAAAmlTX",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_num_vertices(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_num_vertices_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f766572746963657328293b",
                    "cpp_ref": "inline int GeomPrimitive::get_num_vertices(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_num_vertices",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_num_vertices(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_num_vertices",
                    "indexed": "GeomPrimitive$15$get_num_vertices",
                    "mangled": "_inCAAAAvNCm",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "int i"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$get_vertex(GeomPrimitive const *param0, int param1)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_vertex_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f76657274657828706172616d31293b",
                    "cpp_ref": "inline int GeomPrimitive::get_vertex(int i) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_vertex",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_vertex(GeomPrimitive const *param0, int param1)"
                    ],
                    "fn": "get_vertex",
                    "indexed": "GeomPrimitive$16$get_vertex",
                    "mangled": "_inCAAAAResf",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "vertex"
                    ],
                    "args": [
                        "int vertex"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$add_vertex(GeomPrimitive *param0, int param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_add_vertex_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f76657274657828706172616d31293b",
                    "cpp_ref": "void GeomPrimitive::add_vertex(int vertex)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$add_vertex",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$add_vertex(GeomPrimitive *param0, int param1)"
                    ],
                    "fn": "add_vertex",
                    "indexed": "GeomPrimitive$17$add_vertex",
                    "mangled": "_inCAAAAfZh_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "v1",
                        "v2"
                    ],
                    "args": [
                        "int v1",
                        "int v2"
                    ],
                    "argt": [
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$add_vertices(GeomPrimitive *param0, int param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_add_vertices_v_pii",
                    "cni_args": "pii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f766572746963657328706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomPrimitive::add_vertices(int v1, int v2)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$add_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$add_vertices(GeomPrimitive *param0, int param1, int param2)"
                    ],
                    "fn": "add_vertices",
                    "indexed": "GeomPrimitive$18$add_vertices",
                    "mangled": "_inCAAAAHQPq",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "v1",
                        "v2",
                        "v3"
                    ],
                    "args": [
                        "int v1",
                        "int v2",
                        "int v3"
                    ],
                    "argt": [
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$add_vertices(GeomPrimitive *param0, int param1, int param2, int param3)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_add_vertices_v_piii",
                    "cni_args": "piii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f766572746963657328706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void GeomPrimitive::add_vertices(int v1, int v2, int v3)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$add_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$add_vertices(GeomPrimitive *param0, int param1, int param2, int param3)"
                    ],
                    "fn": "add_vertices",
                    "indexed": "GeomPrimitive$19$add_vertices",
                    "mangled": "_inCAAAAjcFB",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "v1",
                        "v2",
                        "v3",
                        "v4"
                    ],
                    "args": [
                        "int v1",
                        "int v2",
                        "int v3",
                        "int v4"
                    ],
                    "argt": [
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$add_vertices(GeomPrimitive *param0, int param1, int param2, int param3, int param4)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_add_vertices_v_piiii",
                    "cni_args": "piiii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f766572746963657328706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void GeomPrimitive::add_vertices(int v1, int v2, int v3, int v4)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$add_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$add_vertices(GeomPrimitive *param0, int param1, int param2, int param3, int param4)"
                    ],
                    "fn": "add_vertices",
                    "indexed": "GeomPrimitive$20$add_vertices",
                    "mangled": "_inCAAAA2Q0u",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "start",
                        "num_vertices"
                    ],
                    "args": [
                        "int start",
                        "int num_vertices"
                    ],
                    "argt": [
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$add_consecutive_vertices(GeomPrimitive *param0, int param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_add_consecutive_vertices_v_pii",
                    "cni_args": "pii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f636f6e73656375746976655f766572746963657328706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomPrimitive::add_consecutive_vertices(int start, int num_vertices)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$add_consecutive_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$add_consecutive_vertices(GeomPrimitive *param0, int param1, int param2)"
                    ],
                    "fn": "add_consecutive_vertices",
                    "indexed": "GeomPrimitive$21$add_consecutive_vertices",
                    "mangled": "_inCAAAAa2sp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "num_vertices"
                    ],
                    "args": [
                        "int num_vertices"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$add_next_vertices(GeomPrimitive *param0, int param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_add_next_vertices_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6e6578745f766572746963657328706172616d31293b",
                    "cpp_ref": "void GeomPrimitive::add_next_vertices(int num_vertices)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$add_next_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$add_next_vertices(GeomPrimitive *param0, int param1)"
                    ],
                    "fn": "add_next_vertices",
                    "indexed": "GeomPrimitive$22$add_next_vertices",
                    "mangled": "_inCAAAA7DMY",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "num_vertices"
                    ],
                    "args": [
                        "int num_vertices"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$reserve_num_vertices(GeomPrimitive *param0, int param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_reserve_num_vertices_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e726573657276655f6e756d5f766572746963657328706172616d31293b",
                    "cpp_ref": "void GeomPrimitive::reserve_num_vertices(int num_vertices)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$reserve_num_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$reserve_num_vertices(GeomPrimitive *param0, int param1)"
                    ],
                    "fn": "reserve_num_vertices",
                    "indexed": "GeomPrimitive$23$reserve_num_vertices",
                    "mangled": "_inCAAAAlGV6",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$close_primitive(GeomPrimitive *param0)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_close_primitive_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636c6f73655f7072696d697469766528293b",
                    "cpp_ref": "bool GeomPrimitive::close_primitive(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$close_primitive",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$close_primitive(GeomPrimitive *param0)"
                    ],
                    "fn": "close_primitive",
                    "indexed": "GeomPrimitive$24$close_primitive",
                    "mangled": "_inCAAAA6fGw",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$clear_vertices(GeomPrimitive *param0)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_clear_vertices_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f766572746963657328293b",
                    "cpp_ref": "void GeomPrimitive::clear_vertices(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$clear_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$clear_vertices(GeomPrimitive *param0)"
                    ],
                    "fn": "clear_vertices",
                    "indexed": "GeomPrimitive$25$clear_vertices",
                    "mangled": "_inCAAAAM1Rt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "offset"
                    ],
                    "args": [
                        "int offset"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$offset_vertices(GeomPrimitive *param0, int param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_offset_vertices_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f66667365745f766572746963657328706172616d31293b",
                    "cpp_ref": "void GeomPrimitive::offset_vertices(int offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$offset_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$offset_vertices(GeomPrimitive *param0, int param1)"
                    ],
                    "fn": "offset_vertices",
                    "indexed": "GeomPrimitive$26$offset_vertices",
                    "mangled": "_inCAAAALbh3",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "offset",
                        "begin_row",
                        "end_row"
                    ],
                    "args": [
                        "int offset",
                        "int begin_row",
                        "int end_row"
                    ],
                    "argt": [
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$offset_vertices(GeomPrimitive *param0, int param1, int param2, int param3)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_offset_vertices_v_piii",
                    "cni_args": "piii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f66667365745f766572746963657328706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void GeomPrimitive::offset_vertices(int offset, int begin_row, int end_row)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$offset_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$offset_vertices(GeomPrimitive *param0, int param1, int param2, int param3)"
                    ],
                    "fn": "offset_vertices",
                    "indexed": "GeomPrimitive$27$offset_vertices",
                    "mangled": "_inCAAAAWnaW",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "dest",
                        "source"
                    ],
                    "args": [
                        "GeomVertexData *dest",
                        "GeomVertexData const *source"
                    ],
                    "argt": [
                        "GeomVertexData*",
                        "GeomVertexData const*"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "GeomVertexData *",
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomPrimitive$_$make_nonindexed(GeomPrimitive *param0, GeomVertexData *param1, GeomVertexData const *param2)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_make_nonindexed_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d616b655f6e6f6e696e646578656428706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomPrimitive::make_nonindexed(GeomVertexData *dest, GeomVertexData const *source)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$make_nonindexed",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$make_nonindexed(GeomPrimitive *param0, GeomVertexData *param1, GeomVertexData const *param2)"
                    ],
                    "fn": "make_nonindexed",
                    "indexed": "GeomPrimitive$28$make_nonindexed",
                    "mangled": "_inCAAAA6uw4",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "dest",
                        "source"
                    ],
                    "args": [
                        "GeomVertexData *dest",
                        "GeomVertexData const *source"
                    ],
                    "argt": [
                        "GeomVertexData*",
                        "GeomVertexData const*"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "GeomVertexData *",
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomPrimitive$_$pack_vertices(GeomPrimitive *param0, GeomVertexData *param1, GeomVertexData const *param2)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_pack_vertices_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7061636b5f766572746963657328706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomPrimitive::pack_vertices(GeomVertexData *dest, GeomVertexData const *source)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$pack_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$pack_vertices(GeomPrimitive *param0, GeomVertexData *param1, GeomVertexData const *param2)"
                    ],
                    "fn": "pack_vertices",
                    "indexed": "GeomPrimitive$29$pack_vertices",
                    "mangled": "_inCAAAAxTd_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$make_indexed(GeomPrimitive *param0)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_make_indexed_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d616b655f696e646578656428293b",
                    "cpp_ref": "void GeomPrimitive::make_indexed(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$make_indexed",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$make_indexed(GeomPrimitive *param0)"
                    ],
                    "fn": "make_indexed",
                    "indexed": "GeomPrimitive$30$make_indexed",
                    "mangled": "_inCAAAAKY2E",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_num_primitives(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_num_primitives_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f7072696d69746976657328293b",
                    "cpp_ref": "inline int GeomPrimitive::get_num_primitives(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_num_primitives",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_num_primitives(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_num_primitives",
                    "indexed": "GeomPrimitive$31$get_num_primitives",
                    "mangled": "_inCAAAA6WIt",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$get_primitive_start(GeomPrimitive const *param0, int param1)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_primitive_start_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7072696d69746976655f737461727428706172616d31293b",
                    "cpp_ref": "int GeomPrimitive::get_primitive_start(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_primitive_start",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_primitive_start(GeomPrimitive const *param0, int param1)"
                    ],
                    "fn": "get_primitive_start",
                    "indexed": "GeomPrimitive$32$get_primitive_start",
                    "mangled": "_inCAAAAsxUL",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$get_primitive_end(GeomPrimitive const *param0, int param1)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_primitive_end_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7072696d69746976655f656e6428706172616d31293b",
                    "cpp_ref": "int GeomPrimitive::get_primitive_end(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_primitive_end",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_primitive_end(GeomPrimitive const *param0, int param1)"
                    ],
                    "fn": "get_primitive_end",
                    "indexed": "GeomPrimitive$33$get_primitive_end",
                    "mangled": "_inCAAAAB_K0",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$get_primitive_num_vertices(GeomPrimitive const *param0, int param1)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_primitive_num_vertices_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7072696d69746976655f6e756d5f766572746963657328706172616d31293b",
                    "cpp_ref": "int GeomPrimitive::get_primitive_num_vertices(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_primitive_num_vertices",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_primitive_num_vertices(GeomPrimitive const *param0, int param1)"
                    ],
                    "fn": "get_primitive_num_vertices",
                    "indexed": "GeomPrimitive$34$get_primitive_num_vertices",
                    "mangled": "_inCAAAAn6mz",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_num_used_vertices(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_num_used_vertices_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f757365645f766572746963657328293b",
                    "cpp_ref": "int GeomPrimitive::get_num_used_vertices(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_num_used_vertices",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_num_used_vertices(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_num_used_vertices",
                    "indexed": "GeomPrimitive$35$get_num_used_vertices",
                    "mangled": "_inCAAAA6rUQ",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_num_faces(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_num_faces_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f666163657328293b",
                    "cpp_ref": "inline int GeomPrimitive::get_num_faces(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_num_faces",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_num_faces(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_num_faces",
                    "indexed": "GeomPrimitive$36$get_num_faces",
                    "mangled": "_inCAAAAaEOa",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$get_primitive_num_faces(GeomPrimitive const *param0, int param1)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_primitive_num_faces_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7072696d69746976655f6e756d5f666163657328706172616d31293b",
                    "cpp_ref": "inline int GeomPrimitive::get_primitive_num_faces(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_primitive_num_faces",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_primitive_num_faces(GeomPrimitive const *param0, int param1)"
                    ],
                    "fn": "get_primitive_num_faces",
                    "indexed": "GeomPrimitive$37$get_primitive_num_faces",
                    "mangled": "_inCAAAA4WCg",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_min_vertex(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_min_vertex_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6d696e5f76657274657828293b",
                    "cpp_ref": "inline int GeomPrimitive::get_min_vertex(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_min_vertex",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_min_vertex(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_min_vertex",
                    "indexed": "GeomPrimitive$38$get_min_vertex",
                    "mangled": "_inCAAAAB5d5",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$get_primitive_min_vertex(GeomPrimitive const *param0, int param1)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_primitive_min_vertex_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7072696d69746976655f6d696e5f76657274657828706172616d31293b",
                    "cpp_ref": "int GeomPrimitive::get_primitive_min_vertex(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_primitive_min_vertex",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_primitive_min_vertex(GeomPrimitive const *param0, int param1)"
                    ],
                    "fn": "get_primitive_min_vertex",
                    "indexed": "GeomPrimitive$39$get_primitive_min_vertex",
                    "mangled": "_inCAAAA4mcR",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_max_vertex(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_max_vertex_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6d61785f76657274657828293b",
                    "cpp_ref": "inline int GeomPrimitive::get_max_vertex(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_max_vertex",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_max_vertex(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_max_vertex",
                    "indexed": "GeomPrimitive$40$get_max_vertex",
                    "mangled": "_inCAAAADfoY",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$get_primitive_max_vertex(GeomPrimitive const *param0, int param1)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_primitive_max_vertex_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7072696d69746976655f6d61785f76657274657828706172616d31293b",
                    "cpp_ref": "int GeomPrimitive::get_primitive_max_vertex(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_primitive_max_vertex",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_primitive_max_vertex(GeomPrimitive const *param0, int param1)"
                    ],
                    "fn": "get_primitive_max_vertex",
                    "indexed": "GeomPrimitive$41$get_primitive_max_vertex",
                    "mangled": "_inCAAAAyuOO",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$decompose(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_decompose_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e6465636f6d706f73652829293b",
                    "cpp_ref": "ConstPointerTo< GeomPrimitive > GeomPrimitive::decompose(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$decompose",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$decompose(GeomPrimitive const *param0)"
                    ],
                    "fn": "decompose",
                    "indexed": "GeomPrimitive$42$decompose",
                    "mangled": "_inCAAAAuWdu",
                    "ot": "ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$rotate(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_rotate_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e726f746174652829293b",
                    "cpp_ref": "ConstPointerTo< GeomPrimitive > GeomPrimitive::rotate(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$rotate",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$rotate(GeomPrimitive const *param0)"
                    ],
                    "fn": "rotate",
                    "indexed": "GeomPrimitive$43$rotate",
                    "mangled": "_inCAAAAyITm",
                    "ot": "ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$doubleside(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_doubleside_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e646f75626c65736964652829293b",
                    "cpp_ref": "ConstPointerTo< GeomPrimitive > GeomPrimitive::doubleside(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$doubleside",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$doubleside(GeomPrimitive const *param0)"
                    ],
                    "fn": "doubleside",
                    "indexed": "GeomPrimitive$44$doubleside",
                    "mangled": "_inCAAAAjOE1",
                    "ot": "ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$reverse(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_reverse_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e726576657273652829293b",
                    "cpp_ref": "ConstPointerTo< GeomPrimitive > GeomPrimitive::reverse(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$reverse",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$reverse(GeomPrimitive const *param0)"
                    ],
                    "fn": "reverse",
                    "indexed": "GeomPrimitive$45$reverse",
                    "mangled": "_inCAAAAIkTm",
                    "ot": "ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 1,
                    "argn": [
                        "shade_model"
                    ],
                    "args": [
                        "GeomEnums::ShadeModel shade_model"
                    ],
                    "argt": [
                        "GeomEnums::ShadeModel"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "GeomEnums::ShadeModel"
                    ],
                    "c_ref": "GeomPrimitive$_$match_shade_model(GeomPrimitive const *param0, GeomEnums::ShadeModel param1)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_match_shade_model_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e6d617463685f73686164655f6d6f64656c28706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< GeomPrimitive > GeomPrimitive::match_shade_model(GeomEnums::ShadeModel shade_model) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$match_shade_model",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$match_shade_model(GeomPrimitive const *param0, GeomEnums::ShadeModel param1)"
                    ],
                    "fn": "match_shade_model",
                    "indexed": "GeomPrimitive$46$match_shade_model",
                    "mangled": "_inCAAAA9Uwk",
                    "ot": "ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$make_points(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_make_points_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e6d616b655f706f696e74732829293b",
                    "cpp_ref": "ConstPointerTo< GeomPrimitive > GeomPrimitive::make_points(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$make_points",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$make_points(GeomPrimitive const *param0)"
                    ],
                    "fn": "make_points",
                    "indexed": "GeomPrimitive$47$make_points",
                    "mangled": "_inCAAAAqobv",
                    "ot": "ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$make_lines(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_make_lines_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e6d616b655f6c696e65732829293b",
                    "cpp_ref": "ConstPointerTo< GeomPrimitive > GeomPrimitive::make_lines(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$make_lines",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$make_lines(GeomPrimitive const *param0)"
                    ],
                    "fn": "make_lines",
                    "indexed": "GeomPrimitive$48$make_lines",
                    "mangled": "_inCAAAA5evV",
                    "ot": "ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$make_patches(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_make_patches_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e6d616b655f706174636865732829293b",
                    "cpp_ref": "ConstPointerTo< GeomPrimitive > GeomPrimitive::make_patches(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$make_patches",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$make_patches(GeomPrimitive const *param0)"
                    ],
                    "fn": "make_patches",
                    "indexed": "GeomPrimitive$49$make_patches",
                    "mangled": "_inCAAAAoDYy",
                    "ot": "ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$make_adjacency(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomPrimitive > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_make_adjacency_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d5072696d6974697665203e28282a706172616d30292e6d616b655f61646a6163656e63792829293b",
                    "cpp_ref": "virtual ConstPointerTo< GeomPrimitive > GeomPrimitive::make_adjacency(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$make_adjacency",
                    "extern": [
                        "ConstPointerTo< GeomPrimitive > *",
                        "GeomPrimitive$_$make_adjacency(GeomPrimitive const *param0)"
                    ],
                    "fn": "make_adjacency",
                    "indexed": "GeomPrimitive$50$make_adjacency",
                    "mangled": "_inCAAAA__ly",
                    "ot": "virtual ConstPointerTo< GeomPrimitive >",
                    "rt": "GeomPrimitive"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_num_bytes(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_num_bytes_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f627974657328293b",
                    "cpp_ref": "int GeomPrimitive::get_num_bytes(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_num_bytes",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_num_bytes(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_num_bytes",
                    "indexed": "GeomPrimitive$51$get_num_bytes",
                    "mangled": "_inCAAAAj0Et",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_data_size_bytes(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_data_size_bytes_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f646174615f73697a655f627974657328293b",
                    "cpp_ref": "inline int GeomPrimitive::get_data_size_bytes(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_data_size_bytes",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_data_size_bytes(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_data_size_bytes",
                    "indexed": "GeomPrimitive$52$get_data_size_bytes",
                    "mangled": "_inCAAAA1Cqn",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_modified(GeomPrimitive const *param0)",
                    "c_type": "UpdateSeq *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_modified_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772055706461746553657128282a706172616d30292e6765745f6d6f6469666965642829293b",
                    "cpp_ref": "inline UpdateSeq GeomPrimitive::get_modified(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_modified",
                    "extern": [
                        "UpdateSeq *",
                        "GeomPrimitive$_$get_modified(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_modified",
                    "indexed": "GeomPrimitive$53$get_modified",
                    "mangled": "_inCAAAA30ZO",
                    "ot": "inline UpdateSeq",
                    "rt": "UpdateSeq"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "Thread *"
                    ],
                    "c_ref": "GeomPrimitive$_$request_resident(GeomPrimitive const *param0, Thread *param1)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_request_resident_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726571756573745f7265736964656e7428706172616d31293b",
                    "cpp_ref": "bool GeomPrimitive::request_resident(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$request_resident",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$request_resident(GeomPrimitive const *param0, Thread *param1)"
                    ],
                    "fn": "request_resident",
                    "indexed": "GeomPrimitive$54$request_resident",
                    "mangled": "_inCAAAAYjSy",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$request_resident(GeomPrimitive const *param0)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_request_resident_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726571756573745f7265736964656e7428293b",
                    "cpp_ref": "bool GeomPrimitive::request_resident(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$request_resident",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$request_resident(GeomPrimitive const *param0)"
                    ],
                    "fn": "request_resident",
                    "indexed": "GeomPrimitive$55$request_resident",
                    "mangled": "_inCAAAAjotH",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "vertex_data"
                    ],
                    "args": [
                        "GeomVertexData const *vertex_data"
                    ],
                    "argt": [
                        "GeomVertexData const*"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomPrimitive$_$check_valid(GeomPrimitive const *param0, GeomVertexData const *param1)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_check_valid_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636865636b5f76616c696428706172616d31293b",
                    "cpp_ref": "inline bool GeomPrimitive::check_valid(GeomVertexData const *vertex_data) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$check_valid",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$check_valid(GeomPrimitive const *param0, GeomVertexData const *param1)"
                    ],
                    "fn": "check_valid",
                    "indexed": "GeomPrimitive$56$check_valid",
                    "mangled": "_inCAAAAnNd0",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data_reader"
                    ],
                    "args": [
                        "GeomVertexDataPipelineReader const *data_reader"
                    ],
                    "argt": [
                        "GeomVertexDataPipelineReader const*"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "GeomVertexDataPipelineReader const *"
                    ],
                    "c_ref": "GeomPrimitive$_$check_valid(GeomPrimitive const *param0, GeomVertexDataPipelineReader const *param1)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_check_valid_B_pp_1_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e636865636b5f76616c696428706172616d31293b",
                    "cpp_ref": "inline bool GeomPrimitive::check_valid(GeomVertexDataPipelineReader const *data_reader) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$check_valid",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$check_valid(GeomPrimitive const *param0, GeomVertexDataPipelineReader const *param1)"
                    ],
                    "fn": "check_valid",
                    "indexed": "GeomPrimitive$57$check_valid",
                    "mangled": "_inCAAAAk6Dg",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "std::ostream *"
                    ],
                    "c_ref": "GeomPrimitive$_$output(GeomPrimitive const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "virtual void GeomPrimitive::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$output",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$output(GeomPrimitive const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "GeomPrimitive$58$output",
                    "mangled": "_inCAAAAHwNB",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$write(GeomPrimitive const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_write_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "virtual void GeomPrimitive::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$write",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$write(GeomPrimitive const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "write",
                    "indexed": "GeomPrimitive$59$write",
                    "mangled": "_inCAAAAr8rb",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_vertices(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomVertexArrayData > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_vertices_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d566572746578417272617944617461203e28282a706172616d30292e6765745f76657274696365732829293b",
                    "cpp_ref": "inline ConstPointerTo< GeomVertexArrayData > GeomPrimitive::get_vertices(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_vertices",
                    "extern": [
                        "ConstPointerTo< GeomVertexArrayData > *",
                        "GeomPrimitive$_$get_vertices(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_vertices",
                    "indexed": "GeomPrimitive$60$get_vertices",
                    "mangled": "_inCAAAABUuv",
                    "ot": "inline ConstPointerTo< GeomVertexArrayData >",
                    "rt": "GeomVertexArrayData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "Thread *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_vertices_handle(GeomPrimitive const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< GeomVertexArrayDataHandle > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_vertices_handle_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657841727261794461746148616e646c65203e28282a706172616d30292e6765745f76657274696365735f68616e646c6528706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< GeomVertexArrayDataHandle > GeomPrimitive::get_vertices_handle(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_vertices_handle",
                    "extern": [
                        "ConstPointerTo< GeomVertexArrayDataHandle > *",
                        "GeomPrimitive$_$get_vertices_handle(GeomPrimitive const *param0, Thread *param1)"
                    ],
                    "fn": "get_vertices_handle",
                    "indexed": "GeomPrimitive$61$get_vertices_handle",
                    "mangled": "_inCAAAANZH_",
                    "ot": "inline ConstPointerTo< GeomVertexArrayDataHandle >",
                    "rt": "GeomVertexArrayDataHandle"
                },
                {
                    "argc": 1,
                    "argn": [
                        "num_vertices"
                    ],
                    "args": [
                        "int num_vertices"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$modify_vertices(GeomPrimitive *param0, int param1)",
                    "c_type": "PointerTo< GeomVertexArrayData > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_modify_vertices_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d566572746578417272617944617461203e28282a706172616d30292e6d6f646966795f766572746963657328706172616d3129293b",
                    "cpp_ref": "PointerTo< GeomVertexArrayData > GeomPrimitive::modify_vertices(int num_vertices)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$modify_vertices",
                    "extern": [
                        "PointerTo< GeomVertexArrayData > *",
                        "GeomPrimitive$_$modify_vertices(GeomPrimitive *param0, int param1)"
                    ],
                    "fn": "modify_vertices",
                    "indexed": "GeomPrimitive$62$modify_vertices",
                    "mangled": "_inCAAAA1PQG",
                    "ot": "PointerTo< GeomVertexArrayData >",
                    "rt": "GeomVertexArrayData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$modify_vertices(GeomPrimitive *param0)",
                    "c_type": "PointerTo< GeomVertexArrayData > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_modify_vertices_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d566572746578417272617944617461203e28282a706172616d30292e6d6f646966795f76657274696365732829293b",
                    "cpp_ref": "PointerTo< GeomVertexArrayData > GeomPrimitive::modify_vertices(int num_vertices)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$modify_vertices",
                    "extern": [
                        "PointerTo< GeomVertexArrayData > *",
                        "GeomPrimitive$_$modify_vertices(GeomPrimitive *param0)"
                    ],
                    "fn": "modify_vertices",
                    "indexed": "GeomPrimitive$63$modify_vertices",
                    "mangled": "_inCAAAAf53e",
                    "ot": "PointerTo< GeomVertexArrayData >",
                    "rt": "GeomVertexArrayData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "Thread *"
                    ],
                    "c_ref": "GeomPrimitive$_$modify_vertices_handle(GeomPrimitive *param0, Thread *param1)",
                    "c_type": "PointerTo< GeomVertexArrayDataHandle > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_modify_vertices_handle_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d56657274657841727261794461746148616e646c65203e28282a706172616d30292e6d6f646966795f76657274696365735f68616e646c6528706172616d3129293b",
                    "cpp_ref": "inline PointerTo< GeomVertexArrayDataHandle > GeomPrimitive::modify_vertices_handle(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$modify_vertices_handle",
                    "extern": [
                        "PointerTo< GeomVertexArrayDataHandle > *",
                        "GeomPrimitive$_$modify_vertices_handle(GeomPrimitive *param0, Thread *param1)"
                    ],
                    "fn": "modify_vertices_handle",
                    "indexed": "GeomPrimitive$64$modify_vertices_handle",
                    "mangled": "_inCAAAA8gX5",
                    "ot": "inline PointerTo< GeomVertexArrayDataHandle >",
                    "rt": "GeomVertexArrayDataHandle"
                },
                {
                    "argc": 2,
                    "argn": [
                        "vertices",
                        "num_vertices"
                    ],
                    "args": [
                        "GeomVertexArrayData const *vertices",
                        "int num_vertices"
                    ],
                    "argt": [
                        "GeomVertexArrayData const*",
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "GeomVertexArrayData const *",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$set_vertices(GeomPrimitive *param0, GeomVertexArrayData const *param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_set_vertices_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f766572746963657328706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomPrimitive::set_vertices(GeomVertexArrayData const *vertices, int num_vertices)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$set_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$set_vertices(GeomPrimitive *param0, GeomVertexArrayData const *param1, int param2)"
                    ],
                    "fn": "set_vertices",
                    "indexed": "GeomPrimitive$65$set_vertices",
                    "mangled": "_inCAAAAXyE_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "vertices"
                    ],
                    "args": [
                        "GeomVertexArrayData const *vertices"
                    ],
                    "argt": [
                        "GeomVertexArrayData const*"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "GeomVertexArrayData const *"
                    ],
                    "c_ref": "GeomPrimitive$_$set_vertices(GeomPrimitive *param0, GeomVertexArrayData const *param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_set_vertices_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f766572746963657328706172616d31293b",
                    "cpp_ref": "void GeomPrimitive::set_vertices(GeomVertexArrayData const *vertices, int num_vertices)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$set_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$set_vertices(GeomPrimitive *param0, GeomVertexArrayData const *param1)"
                    ],
                    "fn": "set_vertices",
                    "indexed": "GeomPrimitive$66$set_vertices",
                    "mangled": "_inCAAAAC9oy",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "first_vertex",
                        "num_vertices"
                    ],
                    "args": [
                        "int first_vertex",
                        "int num_vertices"
                    ],
                    "argt": [
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomPrimitive$_$set_nonindexed_vertices(GeomPrimitive *param0, int param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_set_nonindexed_vertices_v_pii",
                    "cni_args": "pii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6e6f6e696e64657865645f766572746963657328706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomPrimitive::set_nonindexed_vertices(int first_vertex, int num_vertices)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$set_nonindexed_vertices",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$set_nonindexed_vertices(GeomPrimitive *param0, int param1, int param2)"
                    ],
                    "fn": "set_nonindexed_vertices",
                    "indexed": "GeomPrimitive$67$set_nonindexed_vertices",
                    "mangled": "_inCAAAA1R4R",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_index_stride(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_index_stride_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f696e6465785f73747269646528293b",
                    "cpp_ref": "inline int GeomPrimitive::get_index_stride(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_index_stride",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_index_stride(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_index_stride",
                    "indexed": "GeomPrimitive$68$get_index_stride",
                    "mangled": "_inCAAAAhg3p",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_strip_cut_index(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_strip_cut_index_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f73747269705f6375745f696e64657828293b",
                    "cpp_ref": "inline int GeomPrimitive::get_strip_cut_index(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_strip_cut_index",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_strip_cut_index(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_strip_cut_index",
                    "indexed": "GeomPrimitive$69$get_strip_cut_index",
                    "mangled": "_inCAAAAKyB9",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_ends(GeomPrimitive const *param0)",
                    "c_type": "CPTA_int *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_ends_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720435054415f696e7428282a706172616d30292e6765745f656e64732829293b",
                    "cpp_ref": "inline CPTA_int GeomPrimitive::get_ends(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_ends",
                    "extern": [
                        "CPTA_int *",
                        "GeomPrimitive$_$get_ends(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_ends",
                    "indexed": "GeomPrimitive$70$get_ends",
                    "mangled": "_inCAAAAQK6w",
                    "ot": "inline CPTA_int",
                    "rt": "CPTA_int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$modify_ends(GeomPrimitive *param0)",
                    "c_type": "PTA_int *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_modify_ends_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577205054415f696e7428282a706172616d30292e6d6f646966795f656e64732829293b",
                    "cpp_ref": "PTA_int GeomPrimitive::modify_ends(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$modify_ends",
                    "extern": [
                        "PTA_int *",
                        "GeomPrimitive$_$modify_ends(GeomPrimitive *param0)"
                    ],
                    "fn": "modify_ends",
                    "indexed": "GeomPrimitive$71$modify_ends",
                    "mangled": "_inCAAAAUB9R",
                    "ot": "PTA_int",
                    "rt": "PTA_int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "ends"
                    ],
                    "args": [
                        "PTA_int ends"
                    ],
                    "argt": [
                        "PTA_int"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "PTA_int *"
                    ],
                    "c_ref": "GeomPrimitive$_$set_ends(GeomPrimitive *param0, PTA_int *param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_set_ends_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f656e6473282a706172616d31293b",
                    "cpp_ref": "void GeomPrimitive::set_ends(PTA_int ends)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$set_ends",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$set_ends(GeomPrimitive *param0, PTA_int *param1)"
                    ],
                    "fn": "set_ends",
                    "indexed": "GeomPrimitive$72$set_ends",
                    "mangled": "_inCAAAAiDWi",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_mins(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomVertexArrayData > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_mins_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d566572746578417272617944617461203e28282a706172616d30292e6765745f6d696e732829293b",
                    "cpp_ref": "inline ConstPointerTo< GeomVertexArrayData > GeomPrimitive::get_mins(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_mins",
                    "extern": [
                        "ConstPointerTo< GeomVertexArrayData > *",
                        "GeomPrimitive$_$get_mins(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_mins",
                    "indexed": "GeomPrimitive$73$get_mins",
                    "mangled": "_inCAAAAKKGR",
                    "ot": "inline ConstPointerTo< GeomVertexArrayData >",
                    "rt": "GeomVertexArrayData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_maxs(GeomPrimitive const *param0)",
                    "c_type": "ConstPointerTo< GeomVertexArrayData > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_maxs_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d566572746578417272617944617461203e28282a706172616d30292e6765745f6d6178732829293b",
                    "cpp_ref": "inline ConstPointerTo< GeomVertexArrayData > GeomPrimitive::get_maxs(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_maxs",
                    "extern": [
                        "ConstPointerTo< GeomVertexArrayData > *",
                        "GeomPrimitive$_$get_maxs(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_maxs",
                    "indexed": "GeomPrimitive$74$get_maxs",
                    "mangled": "_inCAAAAJsTw",
                    "ot": "inline ConstPointerTo< GeomVertexArrayData >",
                    "rt": "GeomVertexArrayData"
                },
                {
                    "argc": 4,
                    "argn": [
                        "min_vertex",
                        "max_vertex",
                        "mins",
                        "maxs"
                    ],
                    "args": [
                        "int min_vertex",
                        "int max_vertex",
                        "GeomVertexArrayData *mins",
                        "GeomVertexArrayData *maxs"
                    ],
                    "argt": [
                        "int",
                        "int",
                        "GeomVertexArrayData*",
                        "GeomVertexArrayData*"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "int",
                        "int",
                        "GeomVertexArrayData *",
                        "GeomVertexArrayData *"
                    ],
                    "c_ref": "GeomPrimitive$_$set_minmax(GeomPrimitive *param0, int param1, int param2, GeomVertexArrayData *param3, GeomVertexArrayData *param4)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_set_minmax_v_piipp",
                    "cni_args": "piipp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d696e6d617828706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "void GeomPrimitive::set_minmax(int min_vertex, int max_vertex, GeomVertexArrayData *mins, GeomVertexArrayData *maxs)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$set_minmax",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$set_minmax(GeomPrimitive *param0, int param1, int param2, GeomVertexArrayData *param3, GeomVertexArrayData *param4)"
                    ],
                    "fn": "set_minmax",
                    "indexed": "GeomPrimitive$75$set_minmax",
                    "mangled": "_inCAAAAq8m_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$clear_minmax(GeomPrimitive *param0)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_clear_minmax_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6d696e6d617828293b",
                    "cpp_ref": "void GeomPrimitive::clear_minmax(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$clear_minmax",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$clear_minmax(GeomPrimitive *param0)"
                    ],
                    "fn": "clear_minmax",
                    "indexed": "GeomPrimitive$76$clear_minmax",
                    "mangled": "_inCAAAAO9Lj",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_num_vertices_per_primitive(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_num_vertices_per_primitive_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f76657274696365735f7065725f7072696d697469766528293b",
                    "cpp_ref": "virtual int GeomPrimitive::get_num_vertices_per_primitive(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_num_vertices_per_primitive",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_num_vertices_per_primitive(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_num_vertices_per_primitive",
                    "indexed": "GeomPrimitive$77$get_num_vertices_per_primitive",
                    "mangled": "_inCAAAATWqZ",
                    "ot": "virtual int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_min_num_vertices_per_primitive(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_min_num_vertices_per_primitive_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6d696e5f6e756d5f76657274696365735f7065725f7072696d697469766528293b",
                    "cpp_ref": "virtual int GeomPrimitive::get_min_num_vertices_per_primitive(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_min_num_vertices_per_primitive",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_min_num_vertices_per_primitive(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_min_num_vertices_per_primitive",
                    "indexed": "GeomPrimitive$78$get_min_num_vertices_per_primitive",
                    "mangled": "_inCAAAAUxr2",
                    "ot": "virtual int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_num_unused_vertices_per_primitive(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_num_unused_vertices_per_primitive_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f756e757365645f76657274696365735f7065725f7072696d697469766528293b",
                    "cpp_ref": "virtual int GeomPrimitive::get_num_unused_vertices_per_primitive(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_num_unused_vertices_per_primitive",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_num_unused_vertices_per_primitive(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_num_unused_vertices_per_primitive",
                    "indexed": "GeomPrimitive$79$get_num_unused_vertices_per_primitive",
                    "mangled": "_inCAAAAUSE8",
                    "ot": "virtual int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "prepared_objects"
                    ],
                    "args": [
                        "PreparedGraphicsObjects *prepared_objects"
                    ],
                    "argt": [
                        "PreparedGraphicsObjects*"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "PreparedGraphicsObjects *"
                    ],
                    "c_ref": "GeomPrimitive$_$prepare(GeomPrimitive *param0, PreparedGraphicsObjects *param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_prepare_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7072657061726528706172616d31293b",
                    "cpp_ref": "void GeomPrimitive::prepare(PreparedGraphicsObjects *prepared_objects)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$prepare",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$prepare(GeomPrimitive *param0, PreparedGraphicsObjects *param1)"
                    ],
                    "fn": "prepare",
                    "indexed": "GeomPrimitive$80$prepare",
                    "mangled": "_inCAAAA1X36",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "prepared_objects"
                    ],
                    "args": [
                        "PreparedGraphicsObjects *prepared_objects"
                    ],
                    "argt": [
                        "PreparedGraphicsObjects*"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "PreparedGraphicsObjects *"
                    ],
                    "c_ref": "GeomPrimitive$_$is_prepared(GeomPrimitive const *param0, PreparedGraphicsObjects *param1)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_is_prepared_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f707265706172656428706172616d31293b",
                    "cpp_ref": "bool GeomPrimitive::is_prepared(PreparedGraphicsObjects *prepared_objects) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$is_prepared",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$is_prepared(GeomPrimitive const *param0, PreparedGraphicsObjects *param1)"
                    ],
                    "fn": "is_prepared",
                    "indexed": "GeomPrimitive$81$is_prepared",
                    "mangled": "_inCAAAAD77V",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "prepared_objects",
                        "gsg"
                    ],
                    "args": [
                        "PreparedGraphicsObjects *prepared_objects",
                        "GraphicsStateGuardianBase *gsg"
                    ],
                    "argt": [
                        "PreparedGraphicsObjects*",
                        "GraphicsStateGuardianBase*"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "PreparedGraphicsObjects *",
                        "GraphicsStateGuardianBase *"
                    ],
                    "c_ref": "GeomPrimitive$_$prepare_now(GeomPrimitive *param0, PreparedGraphicsObjects *param1, GraphicsStateGuardianBase *param2)",
                    "c_type": "IndexBufferContext *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_prepare_now_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e707265706172655f6e6f7728706172616d312c20706172616d32293b",
                    "cpp_ref": "IndexBufferContext *GeomPrimitive::prepare_now(PreparedGraphicsObjects *prepared_objects, GraphicsStateGuardianBase *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$prepare_now",
                    "extern": [
                        "IndexBufferContext *",
                        "GeomPrimitive$_$prepare_now(GeomPrimitive *param0, PreparedGraphicsObjects *param1, GraphicsStateGuardianBase *param2)"
                    ],
                    "fn": "prepare_now",
                    "indexed": "GeomPrimitive$82$prepare_now",
                    "mangled": "_inCAAAAlgI5",
                    "ot": "IndexBufferContext*",
                    "rt": "IndexBufferContext"
                },
                {
                    "argc": 1,
                    "argn": [
                        "prepared_objects"
                    ],
                    "args": [
                        "PreparedGraphicsObjects *prepared_objects"
                    ],
                    "argt": [
                        "PreparedGraphicsObjects*"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "PreparedGraphicsObjects *"
                    ],
                    "c_ref": "GeomPrimitive$_$release(GeomPrimitive *param0, PreparedGraphicsObjects *param1)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_release_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e72656c6561736528706172616d31293b",
                    "cpp_ref": "bool GeomPrimitive::release(PreparedGraphicsObjects *prepared_objects)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$release",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$release(GeomPrimitive *param0, PreparedGraphicsObjects *param1)"
                    ],
                    "fn": "release",
                    "indexed": "GeomPrimitive$83$release",
                    "mangled": "_inCAAAAeRh0",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$release_all(GeomPrimitive *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_release_all_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e72656c656173655f616c6c28293b",
                    "cpp_ref": "int GeomPrimitive::release_all(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$release_all",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$release_all(GeomPrimitive *param0)"
                    ],
                    "fn": "release_all",
                    "indexed": "GeomPrimitive$84$release_all",
                    "mangled": "_inCAAAADXmz",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_index_format(GeomPrimitive const *param0)",
                    "c_type": "GeomVertexArrayFormat const *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_index_format_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f696e6465785f666f726d617428293b",
                    "cpp_ref": "inline GeomVertexArrayFormat const *GeomPrimitive::get_index_format(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_index_format",
                    "extern": [
                        "GeomVertexArrayFormat const *",
                        "GeomPrimitive$_$get_index_format(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_index_format",
                    "indexed": "GeomPrimitive$85$get_index_format",
                    "mangled": "_inCAAAAdWeC",
                    "ot": "inline GeomVertexArrayFormat const*",
                    "rt": "GeomVertexArrayFormat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index_type"
                    ],
                    "args": [
                        "GeomEnums::NumericType index_type"
                    ],
                    "argt": [
                        "GeomEnums::NumericType"
                    ],
                    "c_argv": [
                        "GeomEnums::NumericType"
                    ],
                    "c_ref": "GeomPrimitive$_$get_index_format(GeomEnums::NumericType param0)",
                    "c_type": "GeomVertexArrayFormat const *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_index_format_p_p_1_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d5072696d69746976653a3a6765745f696e6465785f666f726d617428706172616d30293b",
                    "cpp_ref": "static GeomVertexArrayFormat const *GeomPrimitive::get_index_format(GeomEnums::NumericType index_type)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_index_format",
                    "extern": [
                        "GeomVertexArrayFormat const *",
                        "GeomPrimitive$_$get_index_format(GeomEnums::NumericType param0)"
                    ],
                    "fn": "get_index_format",
                    "indexed": "GeomPrimitive$86$get_index_format",
                    "mangled": "_inCAAAARRdn",
                    "ot": "GeomVertexArrayFormat const*",
                    "rt": "GeomVertexArrayFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$make_index_data(GeomPrimitive const *param0)",
                    "c_type": "PointerTo< GeomVertexArrayData > *",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_make_index_data_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d566572746578417272617944617461203e28282a706172616d30292e6d616b655f696e6465785f646174612829293b",
                    "cpp_ref": "inline PointerTo< GeomVertexArrayData > GeomPrimitive::make_index_data(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$make_index_data",
                    "extern": [
                        "PointerTo< GeomVertexArrayData > *",
                        "GeomPrimitive$_$make_index_data(GeomPrimitive const *param0)"
                    ],
                    "fn": "make_index_data",
                    "indexed": "GeomPrimitive$87$make_index_data",
                    "mangled": "_inCAAAA4Lsu",
                    "ot": "inline PointerTo< GeomVertexArrayData >",
                    "rt": "GeomVertexArrayData"
                },
                {
                    "argc": 3,
                    "argn": [
                        "gsg",
                        "reader",
                        "force"
                    ],
                    "args": [
                        "GraphicsStateGuardianBase *gsg",
                        "GeomPrimitivePipelineReader const *reader",
                        "bool force"
                    ],
                    "argt": [
                        "GraphicsStateGuardianBase*",
                        "GeomPrimitivePipelineReader const*",
                        "bool"
                    ],
                    "c_argv": [
                        "GeomPrimitive const *",
                        "GraphicsStateGuardianBase *",
                        "GeomPrimitivePipelineReader const *",
                        "bool"
                    ],
                    "c_ref": "GeomPrimitive$_$draw(GeomPrimitive const *param0, GraphicsStateGuardianBase *param1, GeomPrimitivePipelineReader const *param2, bool param3)",
                    "c_type": "bool",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_draw_B_pppB",
                    "cni_args": "pppB",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6472617728706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "virtual bool GeomPrimitive::draw(GraphicsStateGuardianBase *gsg, GeomPrimitivePipelineReader const *reader, bool force) const = 0",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$draw",
                    "extern": [
                        "bool",
                        "GeomPrimitive$_$draw(GeomPrimitive const *param0, GraphicsStateGuardianBase *param1, GeomPrimitivePipelineReader const *param2, bool param3)"
                    ],
                    "fn": "draw",
                    "indexed": "GeomPrimitive$88$draw",
                    "mangled": "_inCAAAA01_y",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "GeomPrimitive$_$write_datagram(GeomPrimitive *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void GeomPrimitive::write_datagram(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$write_datagram",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$write_datagram(GeomPrimitive *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "GeomPrimitive$89$write_datagram",
                    "mangled": "_inCAAAADKdV",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "manager"
                    ],
                    "args": [
                        "BamReader *manager"
                    ],
                    "argt": [
                        "BamReader*"
                    ],
                    "c_argv": [
                        "GeomPrimitive *",
                        "BamReader *"
                    ],
                    "c_ref": "GeomPrimitive$_$finalize(GeomPrimitive *param0, BamReader *param1)",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_finalize_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e66696e616c697a6528706172616d31293b",
                    "cpp_ref": "virtual void GeomPrimitive::finalize(BamReader *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$finalize",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$finalize(GeomPrimitive *param0, BamReader *param1)"
                    ],
                    "fn": "finalize",
                    "indexed": "GeomPrimitive$90$finalize",
                    "mangled": "_inCAAAAnnbx",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomPrimitive$_$get_class_type()",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202847656f6d5072696d69746976653a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle GeomPrimitive::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_class_type",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "GeomPrimitive$91$get_class_type",
                    "mangled": "_inCAAAAPsal",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomPrimitive$_$init_type()",
                    "c_type": "void",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d5072696d69746976653a3a696e69745f7479706528293b",
                    "cpp_ref": "static void GeomPrimitive::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$init_type",
                    "extern": [
                        "void",
                        "GeomPrimitive$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "GeomPrimitive$92$init_type",
                    "mangled": "_inCAAAAP6Xi",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive const *"
                    ],
                    "c_ref": "GeomPrimitive$_$get_type(GeomPrimitive const *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomPrimitive::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$get_type",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$get_type(GeomPrimitive const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "GeomPrimitive$93$get_type",
                    "mangled": "_inCAAAAe2dz",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomPrimitive *"
                    ],
                    "c_ref": "GeomPrimitive$_$force_init_type(GeomPrimitive *param0)",
                    "c_type": "int",
                    "cn": "GeomPrimitive",
                    "cni": "GeomPrimitive_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomPrimitive::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomPrimitive$_$force_init_type",
                    "extern": [
                        "int",
                        "GeomPrimitive$_$force_init_type(GeomPrimitive *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "GeomPrimitive$94$force_init_type",
                    "mangled": "_inCAAAA9Zyd",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "GeomTriangles": {
            "bases": [
                "GeomPrimitive"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 1,
                    "argn": [
                        "usage_hint"
                    ],
                    "args": [
                        "GeomEnums::UsageHint usage_hint"
                    ],
                    "argt": [
                        "GeomEnums::UsageHint"
                    ],
                    "c_argv": [
                        "GeomEnums::UsageHint"
                    ],
                    "c_ref": "GeomTriangles$_$GeomTriangles(GeomEnums::UsageHint param0)",
                    "c_type": "GeomTriangles *",
                    "cn": "GeomTriangles",
                    "cni": "GeomTriangles_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d547269616e676c657328706172616d30293b",
                    "cpp_ref": "explicit GeomTriangles::GeomTriangles(GeomEnums::UsageHint usage_hint)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomTriangles$_$GeomTriangles",
                    "extern": [
                        "GeomTriangles *",
                        "GeomTriangles$_$GeomTriangles(GeomEnums::UsageHint param0)"
                    ],
                    "fn": "GeomTriangles",
                    "indexed": "GeomTriangles$1$GeomTriangles",
                    "mangled": "_inCAAAAlM_V",
                    "ot": "explicit",
                    "rt": "GeomTriangles"
                },
                {
                    "argc": 1,
                    "argn": [
                        "copy"
                    ],
                    "args": [
                        "GeomTriangles const &copy"
                    ],
                    "argt": [
                        "GeomTriangles const&"
                    ],
                    "c_argv": [
                        "GeomTriangles const *"
                    ],
                    "c_ref": "GeomTriangles$_$GeomTriangles(GeomTriangles const *param0)",
                    "c_type": "GeomTriangles *",
                    "cn": "GeomTriangles",
                    "cni": "GeomTriangles_C_ctor_p_p_1_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d547269616e676c6573282a706172616d30293b",
                    "cpp_ref": "GeomTriangles::GeomTriangles(GeomTriangles const &copy)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomTriangles$_$GeomTriangles",
                    "extern": [
                        "GeomTriangles *",
                        "GeomTriangles$_$GeomTriangles(GeomTriangles const *param0)"
                    ],
                    "fn": "GeomTriangles",
                    "indexed": "GeomTriangles$2$GeomTriangles",
                    "mangled": "_inCAAAAl_JA",
                    "ot": "",
                    "rt": "GeomTriangles"
                },
                {
                    "argc": 3,
                    "argn": [
                        "gsg",
                        "reader",
                        "force"
                    ],
                    "args": [
                        "GraphicsStateGuardianBase *gsg",
                        "GeomPrimitivePipelineReader const *reader",
                        "bool force"
                    ],
                    "argt": [
                        "GraphicsStateGuardianBase*",
                        "GeomPrimitivePipelineReader const*",
                        "bool"
                    ],
                    "c_argv": [
                        "GeomTriangles const *",
                        "GraphicsStateGuardianBase *",
                        "GeomPrimitivePipelineReader const *",
                        "bool"
                    ],
                    "c_ref": "GeomTriangles$_$draw(GeomTriangles const *param0, GraphicsStateGuardianBase *param1, GeomPrimitivePipelineReader const *param2, bool param3)",
                    "c_type": "bool",
                    "cn": "GeomTriangles",
                    "cni": "GeomTriangles_C_draw_B_pppB",
                    "cni_args": "pppB",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6472617728706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "virtual bool GeomTriangles::draw(GraphicsStateGuardianBase *gsg, GeomPrimitivePipelineReader const *reader, bool force) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomTriangles$_$draw",
                    "extern": [
                        "bool",
                        "GeomTriangles$_$draw(GeomTriangles const *param0, GraphicsStateGuardianBase *param1, GeomPrimitivePipelineReader const *param2, bool param3)"
                    ],
                    "fn": "draw",
                    "indexed": "GeomTriangles$3$draw",
                    "mangled": "_inCAAAALmT7",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomTriangles$_$register_with_read_factory()",
                    "c_type": "void",
                    "cn": "GeomTriangles",
                    "cni": "GeomTriangles_C_register_with_read_factory_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d547269616e676c65733a3a72656769737465725f776974685f726561645f666163746f727928293b",
                    "cpp_ref": "static void GeomTriangles::register_with_read_factory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomTriangles$_$register_with_read_factory",
                    "extern": [
                        "void",
                        "GeomTriangles$_$register_with_read_factory()"
                    ],
                    "fn": "register_with_read_factory",
                    "indexed": "GeomTriangles$4$register_with_read_factory",
                    "mangled": "_inCAAAAPtJQ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomTriangles$_$get_class_type()",
                    "c_type": "int",
                    "cn": "GeomTriangles",
                    "cni": "GeomTriangles_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202847656f6d547269616e676c65733a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle GeomTriangles::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomTriangles$_$get_class_type",
                    "extern": [
                        "int",
                        "GeomTriangles$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "GeomTriangles$5$get_class_type",
                    "mangled": "_inCAAAANvut",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomTriangles$_$init_type()",
                    "c_type": "void",
                    "cn": "GeomTriangles",
                    "cni": "GeomTriangles_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d547269616e676c65733a3a696e69745f7479706528293b",
                    "cpp_ref": "static void GeomTriangles::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomTriangles$_$init_type",
                    "extern": [
                        "void",
                        "GeomTriangles$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "GeomTriangles$6$init_type",
                    "mangled": "_inCAAAAp_rq",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomTriangles const *"
                    ],
                    "c_ref": "GeomTriangles$_$get_type(GeomTriangles const *param0)",
                    "c_type": "int",
                    "cn": "GeomTriangles",
                    "cni": "GeomTriangles_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomTriangles::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomTriangles$_$get_type",
                    "extern": [
                        "int",
                        "GeomTriangles$_$get_type(GeomTriangles const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "GeomTriangles$7$get_type",
                    "mangled": "_inCAAAAFly7",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomTriangles *"
                    ],
                    "c_ref": "GeomTriangles$_$force_init_type(GeomTriangles *param0)",
                    "c_type": "int",
                    "cn": "GeomTriangles",
                    "cni": "GeomTriangles_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomTriangles::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomTriangles$_$force_init_type",
                    "extern": [
                        "int",
                        "GeomTriangles$_$force_init_type(GeomTriangles *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "GeomTriangles$8$force_init_type",
                    "mangled": "_inCAAAAbRHm",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "GeomVertexData": {
            "bases": [
                "CopyOnWriteObject",
                "GeomEnums"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$upcast_to_CopyOnWriteObject(GeomVertexData *param0)",
                    "c_type": "CopyOnWriteObject *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_upcast_to_CopyOnWriteObject_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2028436f70794f6e57726974654f626a656374202a29706172616d303b",
                    "cpp_ref": "CopyOnWriteObject *GeomVertexData::upcast_to_CopyOnWriteObject(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$upcast_to_CopyOnWriteObject",
                    "extern": [
                        "CopyOnWriteObject *",
                        "GeomVertexData$_$upcast_to_CopyOnWriteObject(GeomVertexData *param0)"
                    ],
                    "fn": "upcast_to_CopyOnWriteObject",
                    "indexed": "GeomVertexData$1$upcast_to_CopyOnWriteObject",
                    "mangled": "_inCAAAAkRv_",
                    "ot": "CopyOnWriteObject*",
                    "rt": "CopyOnWriteObject"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$upcast_to_GeomEnums(GeomVertexData *param0)",
                    "c_type": "GeomEnums *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_upcast_to_GeomEnums_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d456e756d73202a29706172616d303b",
                    "cpp_ref": "GeomEnums *GeomVertexData::upcast_to_GeomEnums(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$upcast_to_GeomEnums",
                    "extern": [
                        "GeomEnums *",
                        "GeomVertexData$_$upcast_to_GeomEnums(GeomVertexData *param0)"
                    ],
                    "fn": "upcast_to_GeomEnums",
                    "indexed": "GeomVertexData$2$upcast_to_GeomEnums",
                    "mangled": "_inCAAAAVY07",
                    "ot": "GeomEnums*",
                    "rt": "GeomEnums"
                },
                {
                    "argc": 1,
                    "argn": [
                        "copy"
                    ],
                    "args": [
                        "GeomVertexData const &copy"
                    ],
                    "argt": [
                        "GeomVertexData const&"
                    ],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$GeomVertexData(GeomVertexData const *param0)",
                    "c_type": "GeomVertexData *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657844617461282a706172616d30293b",
                    "cpp_ref": "GeomVertexData::GeomVertexData(GeomVertexData const &copy)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexData$_$GeomVertexData",
                    "extern": [
                        "GeomVertexData *",
                        "GeomVertexData$_$GeomVertexData(GeomVertexData const *param0)"
                    ],
                    "fn": "GeomVertexData",
                    "indexed": "GeomVertexData$3$GeomVertexData",
                    "mangled": "_inCAAAAKRDk",
                    "ot": "",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 2,
                    "argn": [
                        "copy",
                        "format"
                    ],
                    "args": [
                        "GeomVertexData const &copy",
                        "GeomVertexFormat const *format"
                    ],
                    "argt": [
                        "GeomVertexData const&",
                        "GeomVertexFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexData$_$GeomVertexData(GeomVertexData const *param0, GeomVertexFormat const *param1)",
                    "c_type": "GeomVertexData *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_ctor_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657844617461282a706172616d302c20706172616d31293b",
                    "cpp_ref": "explicit GeomVertexData::GeomVertexData(GeomVertexData const &copy, GeomVertexFormat const *format)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexData$_$GeomVertexData",
                    "extern": [
                        "GeomVertexData *",
                        "GeomVertexData$_$GeomVertexData(GeomVertexData const *param0, GeomVertexFormat const *param1)"
                    ],
                    "fn": "GeomVertexData",
                    "indexed": "GeomVertexData$4$GeomVertexData",
                    "mangled": "_inCAAAARp_z",
                    "ot": "explicit",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 3,
                    "argn": [
                        "name",
                        "format",
                        "usage_hint"
                    ],
                    "args": [
                        "std::string const &name",
                        "GeomVertexFormat const *format",
                        "GeomEnums::UsageHint usage_hint"
                    ],
                    "argt": [
                        "std::string const&",
                        "GeomVertexFormat const*",
                        "GeomEnums::UsageHint"
                    ],
                    "c_argv": [
                        "char const *",
                        "GeomVertexFormat const *",
                        "GeomEnums::UsageHint"
                    ],
                    "c_ref": "GeomVertexData$_$GeomVertexData(char const *param0, GeomVertexFormat const *param1, GeomEnums::UsageHint param2)",
                    "c_type": "GeomVertexData *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_ctor_p_spp",
                    "cni_args": "spp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657844617461287374643a3a737472696e6728706172616d30292c20706172616d312c20706172616d32293b",
                    "cpp_ref": "explicit GeomVertexData::GeomVertexData(std::string const &name, GeomVertexFormat const *format, GeomEnums::UsageHint usage_hint)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexData$_$GeomVertexData",
                    "extern": [
                        "GeomVertexData *",
                        "GeomVertexData$_$GeomVertexData(char const *param0, GeomVertexFormat const *param1, GeomEnums::UsageHint param2)"
                    ],
                    "fn": "GeomVertexData",
                    "indexed": "GeomVertexData$5$GeomVertexData",
                    "mangled": "_inCAAAAQDxG",
                    "ot": "explicit",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "GeomVertexData const &other"
                    ],
                    "argt": [
                        "GeomVertexData const&"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$compare_to(GeomVertexData const *param0, GeomVertexData const *param1)",
                    "c_type": "int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_compare_to_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f746f282a706172616d31293b",
                    "cpp_ref": "int GeomVertexData::compare_to(GeomVertexData const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$compare_to",
                    "extern": [
                        "int",
                        "GeomVertexData$_$compare_to(GeomVertexData const *param0, GeomVertexData const *param1)"
                    ],
                    "fn": "compare_to",
                    "indexed": "GeomVertexData$6$compare_to",
                    "mangled": "_inCAAAAhhxk",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_name(GeomVertexData const *param0)",
                    "c_type": "char const *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_name_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f6e616d652829292e635f73747228293b",
                    "cpp_ref": "inline std::string const &GeomVertexData::get_name(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_name",
                    "extern": [
                        "char const *",
                        "GeomVertexData$_$get_name(GeomVertexData const *param0)"
                    ],
                    "fn": "get_name",
                    "indexed": "GeomVertexData$7$get_name",
                    "mangled": "_inCAAAABGI0",
                    "ot": "inline std::string const&",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "char const *"
                    ],
                    "c_ref": "GeomVertexData$_$set_name(GeomVertexData *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_name_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6e616d65287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void GeomVertexData::set_name(std::string const &name)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_name",
                    "extern": [
                        "void",
                        "GeomVertexData$_$set_name(GeomVertexData *param0, char const *param1)"
                    ],
                    "fn": "set_name",
                    "indexed": "GeomVertexData$8$set_name",
                    "mangled": "_inCAAAAzQCt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_usage_hint(GeomVertexData const *param0)",
                    "c_type": "GeomEnums::UsageHint",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_usage_hint_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f75736167655f68696e7428293b",
                    "cpp_ref": "inline GeomEnums::UsageHint GeomVertexData::get_usage_hint(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_usage_hint",
                    "extern": [
                        "GeomEnums::UsageHint",
                        "GeomVertexData$_$get_usage_hint(GeomVertexData const *param0)"
                    ],
                    "fn": "get_usage_hint",
                    "indexed": "GeomVertexData$9$get_usage_hint",
                    "mangled": "_inCAAAAs9db",
                    "ot": "inline GeomEnums::UsageHint",
                    "rt": "GeomEnums::UsageHint"
                },
                {
                    "argc": 1,
                    "argn": [
                        "usage_hint"
                    ],
                    "args": [
                        "GeomEnums::UsageHint usage_hint"
                    ],
                    "argt": [
                        "GeomEnums::UsageHint"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "GeomEnums::UsageHint"
                    ],
                    "c_ref": "GeomVertexData$_$set_usage_hint(GeomVertexData *param0, GeomEnums::UsageHint param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_usage_hint_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f75736167655f68696e7428706172616d31293b",
                    "cpp_ref": "void GeomVertexData::set_usage_hint(GeomEnums::UsageHint usage_hint)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_usage_hint",
                    "extern": [
                        "void",
                        "GeomVertexData$_$set_usage_hint(GeomVertexData *param0, GeomEnums::UsageHint param1)"
                    ],
                    "fn": "set_usage_hint",
                    "indexed": "GeomVertexData$10$set_usage_hint",
                    "mangled": "_inCAAAAk_1i",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_format(GeomVertexData const *param0)",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_format_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f666f726d617428293b",
                    "cpp_ref": "inline GeomVertexFormat const *GeomVertexData::get_format(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_format",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexData$_$get_format(GeomVertexData const *param0)"
                    ],
                    "fn": "get_format",
                    "indexed": "GeomVertexData$11$get_format",
                    "mangled": "_inCAAAA67sy",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "format"
                    ],
                    "args": [
                        "GeomVertexFormat const *format"
                    ],
                    "argt": [
                        "GeomVertexFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexData$_$set_format(GeomVertexData *param0, GeomVertexFormat const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_format_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666f726d617428706172616d31293b",
                    "cpp_ref": "void GeomVertexData::set_format(GeomVertexFormat const *format)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_format",
                    "extern": [
                        "void",
                        "GeomVertexData$_$set_format(GeomVertexData *param0, GeomVertexFormat const *param1)"
                    ],
                    "fn": "set_format",
                    "indexed": "GeomVertexData$12$set_format",
                    "mangled": "_inCAAAAD1zm",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "format"
                    ],
                    "args": [
                        "GeomVertexFormat const *format"
                    ],
                    "argt": [
                        "GeomVertexFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexData$_$unclean_set_format(GeomVertexData *param0, GeomVertexFormat const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_unclean_set_format_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e636c65616e5f7365745f666f726d617428706172616d31293b",
                    "cpp_ref": "void GeomVertexData::unclean_set_format(GeomVertexFormat const *format)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$unclean_set_format",
                    "extern": [
                        "void",
                        "GeomVertexData$_$unclean_set_format(GeomVertexData *param0, GeomVertexFormat const *param1)"
                    ],
                    "fn": "unclean_set_format",
                    "indexed": "GeomVertexData$13$unclean_set_format",
                    "mangled": "_inCAAAAM5bJ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "InternalName const *name"
                    ],
                    "argt": [
                        "InternalName const*"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "InternalName const *"
                    ],
                    "c_ref": "GeomVertexData$_$has_column(GeomVertexData const *param0, InternalName const *param1)",
                    "c_type": "bool",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_has_column_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f636f6c756d6e28706172616d31293b",
                    "cpp_ref": "inline bool GeomVertexData::has_column(InternalName const *name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$has_column",
                    "extern": [
                        "bool",
                        "GeomVertexData$_$has_column(GeomVertexData const *param0, InternalName const *param1)"
                    ],
                    "fn": "has_column",
                    "indexed": "GeomVertexData$14$has_column",
                    "mangled": "_inCAAAA88D7",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_num_rows(GeomVertexData const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_num_rows_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f726f777328293b",
                    "cpp_ref": "inline int GeomVertexData::get_num_rows(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_num_rows",
                    "extern": [
                        "int",
                        "GeomVertexData$_$get_num_rows(GeomVertexData const *param0)"
                    ],
                    "fn": "get_num_rows",
                    "indexed": "GeomVertexData$15$get_num_rows",
                    "mangled": "_inCAAAAxs3S",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "int"
                    ],
                    "c_ref": "GeomVertexData$_$set_num_rows(GeomVertexData *param0, int param1)",
                    "c_type": "bool",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_num_rows_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7365745f6e756d5f726f777328706172616d31293b",
                    "cpp_ref": "inline bool GeomVertexData::set_num_rows(int n)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_num_rows",
                    "extern": [
                        "bool",
                        "GeomVertexData$_$set_num_rows(GeomVertexData *param0, int param1)"
                    ],
                    "fn": "set_num_rows",
                    "indexed": "GeomVertexData$16$set_num_rows",
                    "mangled": "_inCAAAAtnWY",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "int"
                    ],
                    "c_ref": "GeomVertexData$_$unclean_set_num_rows(GeomVertexData *param0, int param1)",
                    "c_type": "bool",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_unclean_set_num_rows_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e756e636c65616e5f7365745f6e756d5f726f777328706172616d31293b",
                    "cpp_ref": "inline bool GeomVertexData::unclean_set_num_rows(int n)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$unclean_set_num_rows",
                    "extern": [
                        "bool",
                        "GeomVertexData$_$unclean_set_num_rows(GeomVertexData *param0, int param1)"
                    ],
                    "fn": "unclean_set_num_rows",
                    "indexed": "GeomVertexData$17$unclean_set_num_rows",
                    "mangled": "_inCAAAA0MpE",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "int"
                    ],
                    "c_ref": "GeomVertexData$_$reserve_num_rows(GeomVertexData *param0, int param1)",
                    "c_type": "bool",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_reserve_num_rows_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726573657276655f6e756d5f726f777328706172616d31293b",
                    "cpp_ref": "inline bool GeomVertexData::reserve_num_rows(int n)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$reserve_num_rows",
                    "extern": [
                        "bool",
                        "GeomVertexData$_$reserve_num_rows(GeomVertexData *param0, int param1)"
                    ],
                    "fn": "reserve_num_rows",
                    "indexed": "GeomVertexData$18$reserve_num_rows",
                    "mangled": "_inCAAAAFkl7",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$clear_rows(GeomVertexData *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_clear_rows_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f726f777328293b",
                    "cpp_ref": "void GeomVertexData::clear_rows(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$clear_rows",
                    "extern": [
                        "void",
                        "GeomVertexData$_$clear_rows(GeomVertexData *param0)"
                    ],
                    "fn": "clear_rows",
                    "indexed": "GeomVertexData$19$clear_rows",
                    "mangled": "_inCAAAAv6Ji",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_num_arrays(GeomVertexData const *param0)",
                    "c_type": "std::size_t",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_num_arrays_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f61727261797328293b",
                    "cpp_ref": "inline std::size_t GeomVertexData::get_num_arrays(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_num_arrays",
                    "extern": [
                        "std::size_t",
                        "GeomVertexData$_$get_num_arrays(GeomVertexData const *param0)"
                    ],
                    "fn": "get_num_arrays",
                    "indexed": "GeomVertexData$20$get_num_arrays",
                    "mangled": "_inCAAAALk3d",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexData$_$get_array(GeomVertexData const *param0, std::size_t param1)",
                    "c_type": "ConstPointerTo< GeomVertexArrayData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_array_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d566572746578417272617944617461203e28282a706172616d30292e6765745f617272617928706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< GeomVertexArrayData > GeomVertexData::get_array(std::size_t i) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_array",
                    "extern": [
                        "ConstPointerTo< GeomVertexArrayData > *",
                        "GeomVertexData$_$get_array(GeomVertexData const *param0, std::size_t param1)"
                    ],
                    "fn": "get_array",
                    "indexed": "GeomVertexData$21$get_array",
                    "mangled": "_inCAAAAwvcJ",
                    "ot": "inline ConstPointerTo< GeomVertexArrayData >",
                    "rt": "GeomVertexArrayData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexData$_$get_array_handle(GeomVertexData const *param0, std::size_t param1)",
                    "c_type": "ConstPointerTo< GeomVertexArrayDataHandle > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_array_handle_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657841727261794461746148616e646c65203e28282a706172616d30292e6765745f61727261795f68616e646c6528706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< GeomVertexArrayDataHandle > GeomVertexData::get_array_handle(std::size_t i) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_array_handle",
                    "extern": [
                        "ConstPointerTo< GeomVertexArrayDataHandle > *",
                        "GeomVertexData$_$get_array_handle(GeomVertexData const *param0, std::size_t param1)"
                    ],
                    "fn": "get_array_handle",
                    "indexed": "GeomVertexData$22$get_array_handle",
                    "mangled": "_inCAAAAc7_s",
                    "ot": "inline ConstPointerTo< GeomVertexArrayDataHandle >",
                    "rt": "GeomVertexArrayDataHandle"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexData$_$modify_array(GeomVertexData *param0, std::size_t param1)",
                    "c_type": "PointerTo< GeomVertexArrayData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_modify_array_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d566572746578417272617944617461203e28282a706172616d30292e6d6f646966795f617272617928706172616d3129293b",
                    "cpp_ref": "inline PointerTo< GeomVertexArrayData > GeomVertexData::modify_array(std::size_t i)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$modify_array",
                    "extern": [
                        "PointerTo< GeomVertexArrayData > *",
                        "GeomVertexData$_$modify_array(GeomVertexData *param0, std::size_t param1)"
                    ],
                    "fn": "modify_array",
                    "indexed": "GeomVertexData$23$modify_array",
                    "mangled": "_inCAAAAW_Pc",
                    "ot": "inline PointerTo< GeomVertexArrayData >",
                    "rt": "GeomVertexArrayData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexData$_$modify_array_handle(GeomVertexData *param0, std::size_t param1)",
                    "c_type": "PointerTo< GeomVertexArrayDataHandle > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_modify_array_handle_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d56657274657841727261794461746148616e646c65203e28282a706172616d30292e6d6f646966795f61727261795f68616e646c6528706172616d3129293b",
                    "cpp_ref": "inline PointerTo< GeomVertexArrayDataHandle > GeomVertexData::modify_array_handle(std::size_t i)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$modify_array_handle",
                    "extern": [
                        "PointerTo< GeomVertexArrayDataHandle > *",
                        "GeomVertexData$_$modify_array_handle(GeomVertexData *param0, std::size_t param1)"
                    ],
                    "fn": "modify_array_handle",
                    "indexed": "GeomVertexData$24$modify_array_handle",
                    "mangled": "_inCAAAAVIgR",
                    "ot": "inline PointerTo< GeomVertexArrayDataHandle >",
                    "rt": "GeomVertexArrayDataHandle"
                },
                {
                    "argc": 2,
                    "argn": [
                        "i",
                        "array"
                    ],
                    "args": [
                        "std::size_t i",
                        "GeomVertexArrayData const *array"
                    ],
                    "argt": [
                        "std::size_t",
                        "GeomVertexArrayData const*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "std::size_t",
                        "GeomVertexArrayData const *"
                    ],
                    "c_ref": "GeomVertexData$_$set_array(GeomVertexData *param0, std::size_t param1, GeomVertexArrayData const *param2)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_array_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f617272617928706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomVertexData::set_array(std::size_t i, GeomVertexArrayData const *array)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_array",
                    "extern": [
                        "void",
                        "GeomVertexData$_$set_array(GeomVertexData *param0, std::size_t param1, GeomVertexArrayData const *param2)"
                    ],
                    "fn": "set_array",
                    "indexed": "GeomVertexData$25$set_array",
                    "mangled": "_inCAAAARZ_Q",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_transform_table(GeomVertexData const *param0)",
                    "c_type": "TransformTable const *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_transform_table_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7472616e73666f726d5f7461626c6528293b",
                    "cpp_ref": "inline TransformTable const *GeomVertexData::get_transform_table(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_transform_table",
                    "extern": [
                        "TransformTable const *",
                        "GeomVertexData$_$get_transform_table(GeomVertexData const *param0)"
                    ],
                    "fn": "get_transform_table",
                    "indexed": "GeomVertexData$26$get_transform_table",
                    "mangled": "_inCAAAABS4c",
                    "ot": "inline TransformTable const*",
                    "rt": "TransformTable"
                },
                {
                    "argc": 1,
                    "argn": [
                        "table"
                    ],
                    "args": [
                        "TransformTable const *table"
                    ],
                    "argt": [
                        "TransformTable const*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "TransformTable const *"
                    ],
                    "c_ref": "GeomVertexData$_$set_transform_table(GeomVertexData *param0, TransformTable const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_transform_table_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73666f726d5f7461626c6528706172616d31293b",
                    "cpp_ref": "void GeomVertexData::set_transform_table(TransformTable const *table)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_transform_table",
                    "extern": [
                        "void",
                        "GeomVertexData$_$set_transform_table(GeomVertexData *param0, TransformTable const *param1)"
                    ],
                    "fn": "set_transform_table",
                    "indexed": "GeomVertexData$27$set_transform_table",
                    "mangled": "_inCAAAAsx_5",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$clear_transform_table(GeomVertexData *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_clear_transform_table_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7472616e73666f726d5f7461626c6528293b",
                    "cpp_ref": "inline void GeomVertexData::clear_transform_table(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$clear_transform_table",
                    "extern": [
                        "void",
                        "GeomVertexData$_$clear_transform_table(GeomVertexData *param0)"
                    ],
                    "fn": "clear_transform_table",
                    "indexed": "GeomVertexData$28$clear_transform_table",
                    "mangled": "_inCAAAAYfui",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_transform_blend_table(GeomVertexData const *param0)",
                    "c_type": "ConstPointerTo< TransformBlendTable > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_transform_blend_table_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d426c656e645461626c65203e28282a706172616d30292e6765745f7472616e73666f726d5f626c656e645f7461626c652829293b",
                    "cpp_ref": "inline ConstPointerTo< TransformBlendTable > GeomVertexData::get_transform_blend_table(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_transform_blend_table",
                    "extern": [
                        "ConstPointerTo< TransformBlendTable > *",
                        "GeomVertexData$_$get_transform_blend_table(GeomVertexData const *param0)"
                    ],
                    "fn": "get_transform_blend_table",
                    "indexed": "GeomVertexData$29$get_transform_blend_table",
                    "mangled": "_inCAAAAFkfO",
                    "ot": "inline ConstPointerTo< TransformBlendTable >",
                    "rt": "TransformBlendTable"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$modify_transform_blend_table(GeomVertexData *param0)",
                    "c_type": "PointerTo< TransformBlendTable > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_modify_transform_blend_table_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c205472616e73666f726d426c656e645461626c65203e28282a706172616d30292e6d6f646966795f7472616e73666f726d5f626c656e645f7461626c652829293b",
                    "cpp_ref": "PointerTo< TransformBlendTable > GeomVertexData::modify_transform_blend_table(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$modify_transform_blend_table",
                    "extern": [
                        "PointerTo< TransformBlendTable > *",
                        "GeomVertexData$_$modify_transform_blend_table(GeomVertexData *param0)"
                    ],
                    "fn": "modify_transform_blend_table",
                    "indexed": "GeomVertexData$30$modify_transform_blend_table",
                    "mangled": "_inCAAAAfufT",
                    "ot": "PointerTo< TransformBlendTable >",
                    "rt": "TransformBlendTable"
                },
                {
                    "argc": 1,
                    "argn": [
                        "table"
                    ],
                    "args": [
                        "TransformBlendTable const *table"
                    ],
                    "argt": [
                        "TransformBlendTable const*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "TransformBlendTable const *"
                    ],
                    "c_ref": "GeomVertexData$_$set_transform_blend_table(GeomVertexData *param0, TransformBlendTable const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_transform_blend_table_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73666f726d5f626c656e645f7461626c6528706172616d31293b",
                    "cpp_ref": "void GeomVertexData::set_transform_blend_table(TransformBlendTable const *table)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_transform_blend_table",
                    "extern": [
                        "void",
                        "GeomVertexData$_$set_transform_blend_table(GeomVertexData *param0, TransformBlendTable const *param1)"
                    ],
                    "fn": "set_transform_blend_table",
                    "indexed": "GeomVertexData$31$set_transform_blend_table",
                    "mangled": "_inCAAAA7Mco",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$clear_transform_blend_table(GeomVertexData *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_clear_transform_blend_table_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7472616e73666f726d5f626c656e645f7461626c6528293b",
                    "cpp_ref": "inline void GeomVertexData::clear_transform_blend_table(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$clear_transform_blend_table",
                    "extern": [
                        "void",
                        "GeomVertexData$_$clear_transform_blend_table(GeomVertexData *param0)"
                    ],
                    "fn": "clear_transform_blend_table",
                    "indexed": "GeomVertexData$32$clear_transform_blend_table",
                    "mangled": "_inCAAAAkA3X",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_slider_table(GeomVertexData const *param0)",
                    "c_type": "SliderTable const *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_slider_table_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f736c696465725f7461626c6528293b",
                    "cpp_ref": "inline SliderTable const *GeomVertexData::get_slider_table(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_slider_table",
                    "extern": [
                        "SliderTable const *",
                        "GeomVertexData$_$get_slider_table(GeomVertexData const *param0)"
                    ],
                    "fn": "get_slider_table",
                    "indexed": "GeomVertexData$33$get_slider_table",
                    "mangled": "_inCAAAAED2E",
                    "ot": "inline SliderTable const*",
                    "rt": "SliderTable"
                },
                {
                    "argc": 1,
                    "argn": [
                        "table"
                    ],
                    "args": [
                        "SliderTable const *table"
                    ],
                    "argt": [
                        "SliderTable const*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "SliderTable const *"
                    ],
                    "c_ref": "GeomVertexData$_$set_slider_table(GeomVertexData *param0, SliderTable const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_slider_table_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f736c696465725f7461626c6528706172616d31293b",
                    "cpp_ref": "void GeomVertexData::set_slider_table(SliderTable const *table)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_slider_table",
                    "extern": [
                        "void",
                        "GeomVertexData$_$set_slider_table(GeomVertexData *param0, SliderTable const *param1)"
                    ],
                    "fn": "set_slider_table",
                    "indexed": "GeomVertexData$34$set_slider_table",
                    "mangled": "_inCAAAA__9X",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$clear_slider_table(GeomVertexData *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_clear_slider_table_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f736c696465725f7461626c6528293b",
                    "cpp_ref": "inline void GeomVertexData::clear_slider_table(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$clear_slider_table",
                    "extern": [
                        "void",
                        "GeomVertexData$_$clear_slider_table(GeomVertexData *param0)"
                    ],
                    "fn": "clear_slider_table",
                    "indexed": "GeomVertexData$35$clear_slider_table",
                    "mangled": "_inCAAAAFr1M",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_num_bytes(GeomVertexData const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_num_bytes_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f627974657328293b",
                    "cpp_ref": "inline int GeomVertexData::get_num_bytes(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_num_bytes",
                    "extern": [
                        "int",
                        "GeomVertexData$_$get_num_bytes(GeomVertexData const *param0)"
                    ],
                    "fn": "get_num_bytes",
                    "indexed": "GeomVertexData$36$get_num_bytes",
                    "mangled": "_inCAAAABRE9",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "Thread *"
                    ],
                    "c_ref": "GeomVertexData$_$get_modified(GeomVertexData const *param0, Thread *param1)",
                    "c_type": "UpdateSeq *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_modified_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772055706461746553657128282a706172616d30292e6765745f6d6f64696669656428706172616d3129293b",
                    "cpp_ref": "inline UpdateSeq GeomVertexData::get_modified(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_modified",
                    "extern": [
                        "UpdateSeq *",
                        "GeomVertexData$_$get_modified(GeomVertexData const *param0, Thread *param1)"
                    ],
                    "fn": "get_modified",
                    "indexed": "GeomVertexData$37$get_modified",
                    "mangled": "_inCAAAAvZmm",
                    "ot": "inline UpdateSeq",
                    "rt": "UpdateSeq"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_modified(GeomVertexData const *param0)",
                    "c_type": "UpdateSeq *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_modified_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772055706461746553657128282a706172616d30292e6765745f6d6f6469666965642829293b",
                    "cpp_ref": "inline UpdateSeq GeomVertexData::get_modified(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_modified",
                    "extern": [
                        "UpdateSeq *",
                        "GeomVertexData$_$get_modified(GeomVertexData const *param0)"
                    ],
                    "fn": "get_modified",
                    "indexed": "GeomVertexData$38$get_modified",
                    "mangled": "_inCAAAAdUin",
                    "ot": "inline UpdateSeq",
                    "rt": "UpdateSeq"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$request_resident(GeomVertexData const *param0)",
                    "c_type": "bool",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_request_resident_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726571756573745f7265736964656e7428293b",
                    "cpp_ref": "bool GeomVertexData::request_resident(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$request_resident",
                    "extern": [
                        "bool",
                        "GeomVertexData$_$request_resident(GeomVertexData const *param0)"
                    ],
                    "fn": "request_resident",
                    "indexed": "GeomVertexData$39$request_resident",
                    "mangled": "_inCAAAAOOPS",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 3,
                    "argn": [
                        "source",
                        "keep_data_objects",
                        "current_thread"
                    ],
                    "args": [
                        "GeomVertexData const *source",
                        "bool keep_data_objects",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "GeomVertexData const*",
                        "bool",
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "GeomVertexData const *",
                        "bool",
                        "Thread *"
                    ],
                    "c_ref": "GeomVertexData$_$copy_from(GeomVertexData *param0, GeomVertexData const *param1, bool param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_copy_from_v_ppBp",
                    "cni_args": "ppBp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f70795f66726f6d28706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void GeomVertexData::copy_from(GeomVertexData const *source, bool keep_data_objects, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$copy_from",
                    "extern": [
                        "void",
                        "GeomVertexData$_$copy_from(GeomVertexData *param0, GeomVertexData const *param1, bool param2, Thread *param3)"
                    ],
                    "fn": "copy_from",
                    "indexed": "GeomVertexData$40$copy_from",
                    "mangled": "_inCAAAAI7Mn",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "source",
                        "keep_data_objects"
                    ],
                    "args": [
                        "GeomVertexData const *source",
                        "bool keep_data_objects"
                    ],
                    "argt": [
                        "GeomVertexData const*",
                        "bool"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "GeomVertexData const *",
                        "bool"
                    ],
                    "c_ref": "GeomVertexData$_$copy_from(GeomVertexData *param0, GeomVertexData const *param1, bool param2)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_copy_from_v_ppB",
                    "cni_args": "ppB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f70795f66726f6d28706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomVertexData::copy_from(GeomVertexData const *source, bool keep_data_objects, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$copy_from",
                    "extern": [
                        "void",
                        "GeomVertexData$_$copy_from(GeomVertexData *param0, GeomVertexData const *param1, bool param2)"
                    ],
                    "fn": "copy_from",
                    "indexed": "GeomVertexData$41$copy_from",
                    "mangled": "_inCAAAATi_p",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "dest_row",
                        "source",
                        "source_row",
                        "current_thread"
                    ],
                    "args": [
                        "int dest_row",
                        "GeomVertexData const *source",
                        "int source_row",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "GeomVertexData const*",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "int",
                        "GeomVertexData const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "GeomVertexData$_$copy_row_from(GeomVertexData *param0, int param1, GeomVertexData const *param2, int param3, Thread *param4)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_copy_row_from_v_pipip",
                    "cni_args": "pipip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f70795f726f775f66726f6d28706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "void GeomVertexData::copy_row_from(int dest_row, GeomVertexData const *source, int source_row, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$copy_row_from",
                    "extern": [
                        "void",
                        "GeomVertexData$_$copy_row_from(GeomVertexData *param0, int param1, GeomVertexData const *param2, int param3, Thread *param4)"
                    ],
                    "fn": "copy_row_from",
                    "indexed": "GeomVertexData$42$copy_row_from",
                    "mangled": "_inCAAAA6qtd",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "new_format"
                    ],
                    "args": [
                        "GeomVertexFormat const *new_format"
                    ],
                    "argt": [
                        "GeomVertexFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexData$_$convert_to(GeomVertexData const *param0, GeomVertexFormat const *param1)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_convert_to_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e636f6e766572745f746f28706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexData > GeomVertexData::convert_to(GeomVertexFormat const *new_format) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$convert_to",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "GeomVertexData$_$convert_to(GeomVertexData const *param0, GeomVertexFormat const *param1)"
                    ],
                    "fn": "convert_to",
                    "indexed": "GeomVertexData$43$convert_to",
                    "mangled": "_inCAAAAUeFN",
                    "ot": "ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "color_scale"
                    ],
                    "args": [
                        "LVecBase4 const &color_scale"
                    ],
                    "argt": [
                        "LVecBase4 const&"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "LVecBase4 const *"
                    ],
                    "c_ref": "GeomVertexData$_$scale_color(GeomVertexData const *param0, LVecBase4 const *param1)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_scale_color_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e7363616c655f636f6c6f72282a706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexData > GeomVertexData::scale_color(LVecBase4 const &color_scale) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$scale_color",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "GeomVertexData$_$scale_color(GeomVertexData const *param0, LVecBase4 const *param1)"
                    ],
                    "fn": "scale_color",
                    "indexed": "GeomVertexData$44$scale_color",
                    "mangled": "_inCAAAAEt8J",
                    "ot": "ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 4,
                    "argn": [
                        "color_scale",
                        "num_components",
                        "numeric_type",
                        "contents"
                    ],
                    "args": [
                        "LVecBase4 const &color_scale",
                        "int num_components",
                        "GeomEnums::NumericType numeric_type",
                        "GeomEnums::Contents contents"
                    ],
                    "argt": [
                        "LVecBase4 const&",
                        "int",
                        "GeomEnums::NumericType",
                        "GeomEnums::Contents"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "LVecBase4 const *",
                        "int",
                        "GeomEnums::NumericType",
                        "GeomEnums::Contents"
                    ],
                    "c_ref": "GeomVertexData$_$scale_color(GeomVertexData const *param0, LVecBase4 const *param1, int param2, GeomEnums::NumericType param3, GeomEnums::Contents param4)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_scale_color_p_ppipp",
                    "cni_args": "ppipp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e7363616c655f636f6c6f72282a706172616d312c20706172616d322c20706172616d332c20706172616d3429293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexData > GeomVertexData::scale_color(LVecBase4 const &color_scale, int num_components, GeomEnums::NumericType numeric_type, GeomEnums::Contents contents) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$scale_color",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "GeomVertexData$_$scale_color(GeomVertexData const *param0, LVecBase4 const *param1, int param2, GeomEnums::NumericType param3, GeomEnums::Contents param4)"
                    ],
                    "fn": "scale_color",
                    "indexed": "GeomVertexData$45$scale_color",
                    "mangled": "_inCAAAAAQUA",
                    "ot": "ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "color"
                    ],
                    "args": [
                        "LColor const &color"
                    ],
                    "argt": [
                        "LColor const&"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "LColor const *"
                    ],
                    "c_ref": "GeomVertexData$_$set_color(GeomVertexData const *param0, LColor const *param1)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_color_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e7365745f636f6c6f72282a706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexData > GeomVertexData::set_color(LColor const &color) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_color",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "GeomVertexData$_$set_color(GeomVertexData const *param0, LColor const *param1)"
                    ],
                    "fn": "set_color",
                    "indexed": "GeomVertexData$46$set_color",
                    "mangled": "_inCAAAAo88V",
                    "ot": "ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 4,
                    "argn": [
                        "color",
                        "num_components",
                        "numeric_type",
                        "contents"
                    ],
                    "args": [
                        "LColor const &color",
                        "int num_components",
                        "GeomEnums::NumericType numeric_type",
                        "GeomEnums::Contents contents"
                    ],
                    "argt": [
                        "LColor const&",
                        "int",
                        "GeomEnums::NumericType",
                        "GeomEnums::Contents"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "LColor const *",
                        "int",
                        "GeomEnums::NumericType",
                        "GeomEnums::Contents"
                    ],
                    "c_ref": "GeomVertexData$_$set_color(GeomVertexData const *param0, LColor const *param1, int param2, GeomEnums::NumericType param3, GeomEnums::Contents param4)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_set_color_p_ppipp",
                    "cni_args": "ppipp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e7365745f636f6c6f72282a706172616d312c20706172616d322c20706172616d332c20706172616d3429293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexData > GeomVertexData::set_color(LColor const &color, int num_components, GeomEnums::NumericType numeric_type, GeomEnums::Contents contents) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$set_color",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "GeomVertexData$_$set_color(GeomVertexData const *param0, LColor const *param1, int param2, GeomEnums::NumericType param3, GeomEnums::Contents param4)"
                    ],
                    "fn": "set_color",
                    "indexed": "GeomVertexData$47$set_color",
                    "mangled": "_inCAAAAfzCR",
                    "ot": "ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$reverse_normals(GeomVertexData const *param0)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_reverse_normals_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e726576657273655f6e6f726d616c732829293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexData > GeomVertexData::reverse_normals(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$reverse_normals",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "GeomVertexData$_$reverse_normals(GeomVertexData const *param0)"
                    ],
                    "fn": "reverse_normals",
                    "indexed": "GeomVertexData$48$reverse_normals",
                    "mangled": "_inCAAAApzio",
                    "ot": "ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 2,
                    "argn": [
                        "force",
                        "current_thread"
                    ],
                    "args": [
                        "bool force",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "bool",
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "bool",
                        "Thread *"
                    ],
                    "c_ref": "GeomVertexData$_$animate_vertices(GeomVertexData const *param0, bool param1, Thread *param2)",
                    "c_type": "ConstPointerTo< GeomVertexData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_animate_vertices_p_pBp",
                    "cni_args": "pBp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e616e696d6174655f766572746963657328706172616d312c20706172616d3229293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexData > GeomVertexData::animate_vertices(bool force, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$animate_vertices",
                    "extern": [
                        "ConstPointerTo< GeomVertexData > *",
                        "GeomVertexData$_$animate_vertices(GeomVertexData const *param0, bool param1, Thread *param2)"
                    ],
                    "fn": "animate_vertices",
                    "indexed": "GeomVertexData$49$animate_vertices",
                    "mangled": "_inCAAAANBVp",
                    "ot": "ConstPointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$clear_animated_vertices(GeomVertexData *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_clear_animated_vertices_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f616e696d617465645f766572746963657328293b",
                    "cpp_ref": "void GeomVertexData::clear_animated_vertices(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$clear_animated_vertices",
                    "extern": [
                        "void",
                        "GeomVertexData$_$clear_animated_vertices(GeomVertexData *param0)"
                    ],
                    "fn": "clear_animated_vertices",
                    "indexed": "GeomVertexData$50$clear_animated_vertices",
                    "mangled": "_inCAAAAd9F_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4 const &mat"
                    ],
                    "argt": [
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "GeomVertexData$_$transform_vertices(GeomVertexData *param0, LMatrix4 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_transform_vertices_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7472616e73666f726d5f7665727469636573282a706172616d31293b",
                    "cpp_ref": "void GeomVertexData::transform_vertices(LMatrix4 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$transform_vertices",
                    "extern": [
                        "void",
                        "GeomVertexData$_$transform_vertices(GeomVertexData *param0, LMatrix4 const *param1)"
                    ],
                    "fn": "transform_vertices",
                    "indexed": "GeomVertexData$51$transform_vertices",
                    "mangled": "_inCAAAAiw96",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "mat",
                        "rows"
                    ],
                    "args": [
                        "LMatrix4 const &mat",
                        "SparseArray const &rows"
                    ],
                    "argt": [
                        "LMatrix4 const&",
                        "SparseArray const&"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "LMatrix4 const *",
                        "SparseArray const *"
                    ],
                    "c_ref": "GeomVertexData$_$transform_vertices(GeomVertexData *param0, LMatrix4 const *param1, SparseArray const *param2)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_transform_vertices_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7472616e73666f726d5f7665727469636573282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void GeomVertexData::transform_vertices(LMatrix4 const &mat, SparseArray const &rows)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$transform_vertices",
                    "extern": [
                        "void",
                        "GeomVertexData$_$transform_vertices(GeomVertexData *param0, LMatrix4 const *param1, SparseArray const *param2)"
                    ],
                    "fn": "transform_vertices",
                    "indexed": "GeomVertexData$52$transform_vertices",
                    "mangled": "_inCAAAAT_7D",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "mat",
                        "begin_row",
                        "end_row"
                    ],
                    "args": [
                        "LMatrix4 const &mat",
                        "int begin_row",
                        "int end_row"
                    ],
                    "argt": [
                        "LMatrix4 const&",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "LMatrix4 const *",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomVertexData$_$transform_vertices(GeomVertexData *param0, LMatrix4 const *param1, int param2, int param3)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_transform_vertices_v_ppii",
                    "cni_args": "ppii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7472616e73666f726d5f7665727469636573282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void GeomVertexData::transform_vertices(LMatrix4 const &mat, int begin_row, int end_row)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$transform_vertices",
                    "extern": [
                        "void",
                        "GeomVertexData$_$transform_vertices(GeomVertexData *param0, LMatrix4 const *param1, int param2, int param3)"
                    ],
                    "fn": "transform_vertices",
                    "indexed": "GeomVertexData$53$transform_vertices",
                    "mangled": "_inCAAAAgdzG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "name",
                        "num_components",
                        "numeric_type",
                        "contents"
                    ],
                    "args": [
                        "InternalName *name",
                        "int num_components",
                        "GeomEnums::NumericType numeric_type",
                        "GeomEnums::Contents contents"
                    ],
                    "argt": [
                        "InternalName*",
                        "int",
                        "GeomEnums::NumericType",
                        "GeomEnums::Contents"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "InternalName *",
                        "int",
                        "GeomEnums::NumericType",
                        "GeomEnums::Contents"
                    ],
                    "c_ref": "GeomVertexData$_$replace_column(GeomVertexData const *param0, InternalName *param1, int param2, GeomEnums::NumericType param3, GeomEnums::Contents param4)",
                    "c_type": "PointerTo< GeomVertexData > *",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_replace_column_p_ppipp",
                    "cni_args": "ppipp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2047656f6d56657274657844617461203e28282a706172616d30292e7265706c6163655f636f6c756d6e28706172616d312c20706172616d322c20706172616d332c20706172616d3429293b",
                    "cpp_ref": "PointerTo< GeomVertexData > GeomVertexData::replace_column(InternalName *name, int num_components, GeomEnums::NumericType numeric_type, GeomEnums::Contents contents) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$replace_column",
                    "extern": [
                        "PointerTo< GeomVertexData > *",
                        "GeomVertexData$_$replace_column(GeomVertexData const *param0, InternalName *param1, int param2, GeomEnums::NumericType param3, GeomEnums::Contents param4)"
                    ],
                    "fn": "replace_column",
                    "indexed": "GeomVertexData$54$replace_column",
                    "mangled": "_inCAAAAwwi1",
                    "ot": "PointerTo< GeomVertexData >",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "std::ostream *"
                    ],
                    "c_ref": "GeomVertexData$_$output(GeomVertexData const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "void GeomVertexData::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$output",
                    "extern": [
                        "void",
                        "GeomVertexData$_$output(GeomVertexData const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "GeomVertexData$55$output",
                    "mangled": "_inCAAAAI6SD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "GeomVertexData$_$write(GeomVertexData const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_write_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomVertexData::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$write",
                    "extern": [
                        "void",
                        "GeomVertexData$_$write(GeomVertexData const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "write",
                    "indexed": "GeomVertexData$56$write",
                    "mangled": "_inCAAAA4YSS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "std::ostream *"
                    ],
                    "c_ref": "GeomVertexData$_$write(GeomVertexData const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_write_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d31293b",
                    "cpp_ref": "void GeomVertexData::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$write",
                    "extern": [
                        "void",
                        "GeomVertexData$_$write(GeomVertexData const *param0, std::ostream *param1)"
                    ],
                    "fn": "write",
                    "indexed": "GeomVertexData$57$write",
                    "mangled": "_inCAAAA6m03",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "row"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int row"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexData const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "GeomVertexData$_$describe_vertex(GeomVertexData const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_describe_vertex_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e64657363726962655f766572746578282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomVertexData::describe_vertex(std::ostream &out, int row) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$describe_vertex",
                    "extern": [
                        "void",
                        "GeomVertexData$_$describe_vertex(GeomVertexData const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "describe_vertex",
                    "indexed": "GeomVertexData$58$describe_vertex",
                    "mangled": "_inCAAAAkktY",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$clear_cache(GeomVertexData *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_clear_cache_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f636163686528293b",
                    "cpp_ref": "void GeomVertexData::clear_cache(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$clear_cache",
                    "extern": [
                        "void",
                        "GeomVertexData$_$clear_cache(GeomVertexData *param0)"
                    ],
                    "fn": "clear_cache",
                    "indexed": "GeomVertexData$59$clear_cache",
                    "mangled": "_inCAAAAZI16",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$clear_cache_stage(GeomVertexData *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_clear_cache_stage_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f63616368655f737461676528293b",
                    "cpp_ref": "void GeomVertexData::clear_cache_stage(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$clear_cache_stage",
                    "extern": [
                        "void",
                        "GeomVertexData$_$clear_cache_stage(GeomVertexData *param0)"
                    ],
                    "fn": "clear_cache_stage",
                    "indexed": "GeomVertexData$60$clear_cache_stage",
                    "mangled": "_inCAAAAn1dY",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "a",
                        "b",
                        "c",
                        "d"
                    ],
                    "args": [
                        "unsigned int a",
                        "unsigned int b",
                        "unsigned int c",
                        "unsigned int d"
                    ],
                    "argt": [
                        "unsigned int",
                        "unsigned int",
                        "unsigned int",
                        "unsigned int"
                    ],
                    "c_argv": [
                        "unsigned int",
                        "unsigned int",
                        "unsigned int",
                        "unsigned int"
                    ],
                    "c_ref": "GeomVertexData$_$pack_abcd(unsigned int param0, unsigned int param1, unsigned int param2, unsigned int param3)",
                    "c_type": "uint32_t",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_pack_abcd_I_IIII",
                    "cni_args": "IIII",
                    "cni_rt": "I",
                    "code": "2020202072657475726e2047656f6d566572746578446174613a3a7061636b5f6162636428706172616d302c20706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "static inline uint32_t GeomVertexData::pack_abcd(unsigned int a, unsigned int b, unsigned int c, unsigned int d)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$pack_abcd",
                    "extern": [
                        "uint32_t",
                        "GeomVertexData$_$pack_abcd(unsigned int param0, unsigned int param1, unsigned int param2, unsigned int param3)"
                    ],
                    "fn": "pack_abcd",
                    "indexed": "GeomVertexData$61$pack_abcd",
                    "mangled": "_inCAAAASz1m",
                    "ot": "inline uint32_t",
                    "rt": "uint32_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "uint32_t data"
                    ],
                    "argt": [
                        "uint32_t"
                    ],
                    "c_argv": [
                        "uint32_t"
                    ],
                    "c_ref": "GeomVertexData$_$unpack_abcd_a(uint32_t param0)",
                    "c_type": "unsigned int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_unpack_abcd_a_I_I",
                    "cni_args": "I",
                    "cni_rt": "I",
                    "code": "2020202072657475726e2047656f6d566572746578446174613a3a756e7061636b5f616263645f6128706172616d30293b",
                    "cpp_ref": "static inline unsigned int GeomVertexData::unpack_abcd_a(uint32_t data)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$unpack_abcd_a",
                    "extern": [
                        "unsigned int",
                        "GeomVertexData$_$unpack_abcd_a(uint32_t param0)"
                    ],
                    "fn": "unpack_abcd_a",
                    "indexed": "GeomVertexData$62$unpack_abcd_a",
                    "mangled": "_inCAAAA9Q7m",
                    "ot": "inline unsigned int",
                    "rt": "unsigned int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "uint32_t data"
                    ],
                    "argt": [
                        "uint32_t"
                    ],
                    "c_argv": [
                        "uint32_t"
                    ],
                    "c_ref": "GeomVertexData$_$unpack_abcd_b(uint32_t param0)",
                    "c_type": "unsigned int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_unpack_abcd_b_I_I",
                    "cni_args": "I",
                    "cni_rt": "I",
                    "code": "2020202072657475726e2047656f6d566572746578446174613a3a756e7061636b5f616263645f6228706172616d30293b",
                    "cpp_ref": "static inline unsigned int GeomVertexData::unpack_abcd_b(uint32_t data)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$unpack_abcd_b",
                    "extern": [
                        "unsigned int",
                        "GeomVertexData$_$unpack_abcd_b(uint32_t param0)"
                    ],
                    "fn": "unpack_abcd_b",
                    "indexed": "GeomVertexData$63$unpack_abcd_b",
                    "mangled": "_inCAAAA0b7C",
                    "ot": "inline unsigned int",
                    "rt": "unsigned int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "uint32_t data"
                    ],
                    "argt": [
                        "uint32_t"
                    ],
                    "c_argv": [
                        "uint32_t"
                    ],
                    "c_ref": "GeomVertexData$_$unpack_abcd_c(uint32_t param0)",
                    "c_type": "unsigned int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_unpack_abcd_c_I_I",
                    "cni_args": "I",
                    "cni_rt": "I",
                    "code": "2020202072657475726e2047656f6d566572746578446174613a3a756e7061636b5f616263645f6328706172616d30293b",
                    "cpp_ref": "static inline unsigned int GeomVertexData::unpack_abcd_c(uint32_t data)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$unpack_abcd_c",
                    "extern": [
                        "unsigned int",
                        "GeomVertexData$_$unpack_abcd_c(uint32_t param0)"
                    ],
                    "fn": "unpack_abcd_c",
                    "indexed": "GeomVertexData$64$unpack_abcd_c",
                    "mangled": "_inCAAAAsG7e",
                    "ot": "inline unsigned int",
                    "rt": "unsigned int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "uint32_t data"
                    ],
                    "argt": [
                        "uint32_t"
                    ],
                    "c_argv": [
                        "uint32_t"
                    ],
                    "c_ref": "GeomVertexData$_$unpack_abcd_d(uint32_t param0)",
                    "c_type": "unsigned int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_unpack_abcd_d_I_I",
                    "cni_args": "I",
                    "cni_rt": "I",
                    "code": "2020202072657475726e2047656f6d566572746578446174613a3a756e7061636b5f616263645f6428706172616d30293b",
                    "cpp_ref": "static inline unsigned int GeomVertexData::unpack_abcd_d(uint32_t data)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$unpack_abcd_d",
                    "extern": [
                        "unsigned int",
                        "GeomVertexData$_$unpack_abcd_d(uint32_t param0)"
                    ],
                    "fn": "unpack_abcd_d",
                    "indexed": "GeomVertexData$65$unpack_abcd_d",
                    "mangled": "_inCAAAAkB76",
                    "ot": "inline unsigned int",
                    "rt": "unsigned int"
                },
                {
                    "argc": 3,
                    "argn": [
                        "a",
                        "b",
                        "c"
                    ],
                    "args": [
                        "float a",
                        "float b",
                        "float c"
                    ],
                    "argt": [
                        "float",
                        "float",
                        "float"
                    ],
                    "c_argv": [
                        "float",
                        "float",
                        "float"
                    ],
                    "c_ref": "GeomVertexData$_$pack_ufloat(float param0, float param1, float param2)",
                    "c_type": "uint32_t",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_pack_ufloat_I_fff",
                    "cni_args": "fff",
                    "cni_rt": "I",
                    "code": "2020202072657475726e2047656f6d566572746578446174613a3a7061636b5f75666c6f617428706172616d302c20706172616d312c20706172616d32293b",
                    "cpp_ref": "static inline uint32_t GeomVertexData::pack_ufloat(float a, float b, float c)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$pack_ufloat",
                    "extern": [
                        "uint32_t",
                        "GeomVertexData$_$pack_ufloat(float param0, float param1, float param2)"
                    ],
                    "fn": "pack_ufloat",
                    "indexed": "GeomVertexData$66$pack_ufloat",
                    "mangled": "_inCAAAAk2re",
                    "ot": "inline uint32_t",
                    "rt": "uint32_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "uint32_t data"
                    ],
                    "argt": [
                        "uint32_t"
                    ],
                    "c_argv": [
                        "uint32_t"
                    ],
                    "c_ref": "GeomVertexData$_$unpack_ufloat_a(uint32_t param0)",
                    "c_type": "float",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_unpack_ufloat_a_f_I",
                    "cni_args": "I",
                    "cni_rt": "f",
                    "code": "2020202072657475726e2047656f6d566572746578446174613a3a756e7061636b5f75666c6f61745f6128706172616d30293b",
                    "cpp_ref": "static inline float GeomVertexData::unpack_ufloat_a(uint32_t data)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$unpack_ufloat_a",
                    "extern": [
                        "float",
                        "GeomVertexData$_$unpack_ufloat_a(uint32_t param0)"
                    ],
                    "fn": "unpack_ufloat_a",
                    "indexed": "GeomVertexData$67$unpack_ufloat_a",
                    "mangled": "_inCAAAAPwUg",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "uint32_t data"
                    ],
                    "argt": [
                        "uint32_t"
                    ],
                    "c_argv": [
                        "uint32_t"
                    ],
                    "c_ref": "GeomVertexData$_$unpack_ufloat_b(uint32_t param0)",
                    "c_type": "float",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_unpack_ufloat_b_f_I",
                    "cni_args": "I",
                    "cni_rt": "f",
                    "code": "2020202072657475726e2047656f6d566572746578446174613a3a756e7061636b5f75666c6f61745f6228706172616d30293b",
                    "cpp_ref": "static inline float GeomVertexData::unpack_ufloat_b(uint32_t data)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$unpack_ufloat_b",
                    "extern": [
                        "float",
                        "GeomVertexData$_$unpack_ufloat_b(uint32_t param0)"
                    ],
                    "fn": "unpack_ufloat_b",
                    "indexed": "GeomVertexData$68$unpack_ufloat_b",
                    "mangled": "_inCAAAAPJih",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "uint32_t data"
                    ],
                    "argt": [
                        "uint32_t"
                    ],
                    "c_argv": [
                        "uint32_t"
                    ],
                    "c_ref": "GeomVertexData$_$unpack_ufloat_c(uint32_t param0)",
                    "c_type": "float",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_unpack_ufloat_c_f_I",
                    "cni_args": "I",
                    "cni_rt": "f",
                    "code": "2020202072657475726e2047656f6d566572746578446174613a3a756e7061636b5f75666c6f61745f6328706172616d30293b",
                    "cpp_ref": "static inline float GeomVertexData::unpack_ufloat_c(uint32_t data)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$unpack_ufloat_c",
                    "extern": [
                        "float",
                        "GeomVertexData$_$unpack_ufloat_c(uint32_t param0)"
                    ],
                    "fn": "unpack_ufloat_c",
                    "indexed": "GeomVertexData$69$unpack_ufloat_c",
                    "mangled": "_inCAAAAPOwi",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexData$_$register_with_read_factory()",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_register_with_read_factory_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d566572746578446174613a3a72656769737465725f776974685f726561645f666163746f727928293b",
                    "cpp_ref": "static void GeomVertexData::register_with_read_factory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$register_with_read_factory",
                    "extern": [
                        "void",
                        "GeomVertexData$_$register_with_read_factory()"
                    ],
                    "fn": "register_with_read_factory",
                    "indexed": "GeomVertexData$70$register_with_read_factory",
                    "mangled": "_inCAAAAOsCY",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "GeomVertexData$_$write_datagram(GeomVertexData *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void GeomVertexData::write_datagram(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$write_datagram",
                    "extern": [
                        "void",
                        "GeomVertexData$_$write_datagram(GeomVertexData *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "GeomVertexData$71$write_datagram",
                    "mangled": "_inCAAAA8HIM",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$require_fully_complete(GeomVertexData const *param0)",
                    "c_type": "bool",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_require_fully_complete_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726571756972655f66756c6c795f636f6d706c65746528293b",
                    "cpp_ref": "virtual bool GeomVertexData::require_fully_complete(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$require_fully_complete",
                    "extern": [
                        "bool",
                        "GeomVertexData$_$require_fully_complete(GeomVertexData const *param0)"
                    ],
                    "fn": "require_fully_complete",
                    "indexed": "GeomVertexData$72$require_fully_complete",
                    "mangled": "_inCAAAAAdKg",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "manager"
                    ],
                    "args": [
                        "BamReader *manager"
                    ],
                    "argt": [
                        "BamReader*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "BamReader *"
                    ],
                    "c_ref": "GeomVertexData$_$finalize(GeomVertexData *param0, BamReader *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_finalize_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e66696e616c697a6528706172616d31293b",
                    "cpp_ref": "virtual void GeomVertexData::finalize(BamReader *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$finalize",
                    "extern": [
                        "void",
                        "GeomVertexData$_$finalize(GeomVertexData *param0, BamReader *param1)"
                    ],
                    "fn": "finalize",
                    "indexed": "GeomVertexData$73$finalize",
                    "mangled": "_inCAAAASM2H",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexData$_$get_class_type()",
                    "c_type": "int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202847656f6d566572746578446174613a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle GeomVertexData::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_class_type",
                    "extern": [
                        "int",
                        "GeomVertexData$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "GeomVertexData$74$get_class_type",
                    "mangled": "_inCAAAAIU4H",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexData$_$init_type()",
                    "c_type": "void",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d566572746578446174613a3a696e69745f7479706528293b",
                    "cpp_ref": "static void GeomVertexData::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$init_type",
                    "extern": [
                        "void",
                        "GeomVertexData$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "GeomVertexData$75$init_type",
                    "mangled": "_inCAAAAFc6l",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexData$_$get_type(GeomVertexData const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomVertexData::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$get_type",
                    "extern": [
                        "int",
                        "GeomVertexData$_$get_type(GeomVertexData const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "GeomVertexData$76$get_type",
                    "mangled": "_inCAAAAUImJ",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexData$_$force_init_type(GeomVertexData *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexData",
                    "cni": "GeomVertexData_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomVertexData::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexData$_$force_init_type",
                    "extern": [
                        "int",
                        "GeomVertexData$_$force_init_type(GeomVertexData *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "GeomVertexData$77$force_init_type",
                    "mangled": "_inCAAAAp5JU",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "GeomVertexFormat": {
            "bases": [
                "TypedWritableReferenceCount",
                "GeomEnums"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat *"
                    ],
                    "c_ref": "GeomVertexFormat$_$upcast_to_TypedWritableReferenceCount(GeomVertexFormat *param0)",
                    "c_type": "TypedWritableReferenceCount *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_upcast_to_TypedWritableReferenceCount_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202854797065645772697461626c655265666572656e6365436f756e74202a29706172616d303b",
                    "cpp_ref": "TypedWritableReferenceCount *GeomVertexFormat::upcast_to_TypedWritableReferenceCount(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$upcast_to_TypedWritableReferenceCount",
                    "extern": [
                        "TypedWritableReferenceCount *",
                        "GeomVertexFormat$_$upcast_to_TypedWritableReferenceCount(GeomVertexFormat *param0)"
                    ],
                    "fn": "upcast_to_TypedWritableReferenceCount",
                    "indexed": "GeomVertexFormat$1$upcast_to_TypedWritableReferenceCount",
                    "mangled": "_inCAAAAN_wu",
                    "ot": "TypedWritableReferenceCount*",
                    "rt": "TypedWritableReferenceCount"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat *"
                    ],
                    "c_ref": "GeomVertexFormat$_$upcast_to_GeomEnums(GeomVertexFormat *param0)",
                    "c_type": "GeomEnums *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_upcast_to_GeomEnums_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d456e756d73202a29706172616d303b",
                    "cpp_ref": "GeomEnums *GeomVertexFormat::upcast_to_GeomEnums(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$upcast_to_GeomEnums",
                    "extern": [
                        "GeomEnums *",
                        "GeomVertexFormat$_$upcast_to_GeomEnums(GeomVertexFormat *param0)"
                    ],
                    "fn": "upcast_to_GeomEnums",
                    "indexed": "GeomVertexFormat$2$upcast_to_GeomEnums",
                    "mangled": "_inCAAAArIs2",
                    "ot": "GeomEnums*",
                    "rt": "GeomEnums"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$GeomVertexFormat()",
                    "c_type": "GeomVertexFormat *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d566572746578466f726d617428293b",
                    "cpp_ref": "GeomVertexFormat::GeomVertexFormat(void)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexFormat$_$GeomVertexFormat",
                    "extern": [
                        "GeomVertexFormat *",
                        "GeomVertexFormat$_$GeomVertexFormat()"
                    ],
                    "fn": "GeomVertexFormat",
                    "indexed": "GeomVertexFormat$3$GeomVertexFormat",
                    "mangled": "_inCAAAAp5IE",
                    "ot": "",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "array_format"
                    ],
                    "args": [
                        "GeomVertexArrayFormat const *array_format"
                    ],
                    "argt": [
                        "GeomVertexArrayFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexArrayFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$GeomVertexFormat(GeomVertexArrayFormat const *param0)",
                    "c_type": "GeomVertexFormat *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d566572746578466f726d617428706172616d30293b",
                    "cpp_ref": "GeomVertexFormat::GeomVertexFormat(GeomVertexArrayFormat const *array_format)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexFormat$_$GeomVertexFormat",
                    "extern": [
                        "GeomVertexFormat *",
                        "GeomVertexFormat$_$GeomVertexFormat(GeomVertexArrayFormat const *param0)"
                    ],
                    "fn": "GeomVertexFormat",
                    "indexed": "GeomVertexFormat$4$GeomVertexFormat",
                    "mangled": "_inCAAAA0V7R",
                    "ot": "",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "copy"
                    ],
                    "args": [
                        "GeomVertexFormat const &copy"
                    ],
                    "argt": [
                        "GeomVertexFormat const&"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$GeomVertexFormat(GeomVertexFormat const *param0)",
                    "c_type": "GeomVertexFormat *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_ctor_p_p_1_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d566572746578466f726d6174282a706172616d30293b",
                    "cpp_ref": "GeomVertexFormat::GeomVertexFormat(GeomVertexFormat const &copy)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexFormat$_$GeomVertexFormat",
                    "extern": [
                        "GeomVertexFormat *",
                        "GeomVertexFormat$_$GeomVertexFormat(GeomVertexFormat const *param0)"
                    ],
                    "fn": "GeomVertexFormat",
                    "indexed": "GeomVertexFormat$5$GeomVertexFormat",
                    "mangled": "_inCAAAAekha",
                    "ot": "",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$unref(GeomVertexFormat const *param0)",
                    "c_type": "bool",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_unref_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e756e72656628293b",
                    "cpp_ref": "virtual bool GeomVertexFormat::unref(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$unref",
                    "extern": [
                        "bool",
                        "GeomVertexFormat$_$unref(GeomVertexFormat const *param0)"
                    ],
                    "fn": "unref",
                    "indexed": "GeomVertexFormat$6$unref",
                    "mangled": "_inCAAAAwY7m",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$is_registered(GeomVertexFormat const *param0)",
                    "c_type": "bool",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_is_registered_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f7265676973746572656428293b",
                    "cpp_ref": "inline bool GeomVertexFormat::is_registered(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$is_registered",
                    "extern": [
                        "bool",
                        "GeomVertexFormat$_$is_registered(GeomVertexFormat const *param0)"
                    ],
                    "fn": "is_registered",
                    "indexed": "GeomVertexFormat$7$is_registered",
                    "mangled": "_inCAAAAYvVU",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "format"
                    ],
                    "args": [
                        "GeomVertexArrayFormat const *format"
                    ],
                    "argt": [
                        "GeomVertexArrayFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexArrayFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$register_format(GeomVertexArrayFormat const *param0)",
                    "c_type": "ConstPointerTo< GeomVertexFormat > *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_register_format_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d566572746578466f726d6174203e2847656f6d566572746578466f726d61743a3a72656769737465725f666f726d617428706172616d3029293b",
                    "cpp_ref": "static inline ConstPointerTo< GeomVertexFormat > GeomVertexFormat::register_format(GeomVertexArrayFormat const *format)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$register_format",
                    "extern": [
                        "ConstPointerTo< GeomVertexFormat > *",
                        "GeomVertexFormat$_$register_format(GeomVertexArrayFormat const *param0)"
                    ],
                    "fn": "register_format",
                    "indexed": "GeomVertexFormat$8$register_format",
                    "mangled": "_inCAAAAnlvK",
                    "ot": "inline ConstPointerTo< GeomVertexFormat >",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "format"
                    ],
                    "args": [
                        "GeomVertexFormat const *format"
                    ],
                    "argt": [
                        "GeomVertexFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$register_format(GeomVertexFormat const *param0)",
                    "c_type": "ConstPointerTo< GeomVertexFormat > *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_register_format_p_p_1_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d566572746578466f726d6174203e2847656f6d566572746578466f726d61743a3a72656769737465725f666f726d617428706172616d3029293b",
                    "cpp_ref": "static inline ConstPointerTo< GeomVertexFormat > GeomVertexFormat::register_format(GeomVertexFormat const *format)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$register_format",
                    "extern": [
                        "ConstPointerTo< GeomVertexFormat > *",
                        "GeomVertexFormat$_$register_format(GeomVertexFormat const *param0)"
                    ],
                    "fn": "register_format",
                    "indexed": "GeomVertexFormat$9$register_format",
                    "mangled": "_inCAAAAF5LQ",
                    "ot": "inline ConstPointerTo< GeomVertexFormat >",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_animation(GeomVertexFormat const *param0)",
                    "c_type": "GeomVertexAnimationSpec const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_animation_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f616e696d6174696f6e2829293b",
                    "cpp_ref": "inline GeomVertexAnimationSpec const &GeomVertexFormat::get_animation(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_animation",
                    "extern": [
                        "GeomVertexAnimationSpec const *",
                        "GeomVertexFormat$_$get_animation(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_animation",
                    "indexed": "GeomVertexFormat$10$get_animation",
                    "mangled": "_inCAAAARiXK",
                    "ot": "inline GeomVertexAnimationSpec const&",
                    "rt": "GeomVertexAnimationSpec"
                },
                {
                    "argc": 1,
                    "argn": [
                        "animation"
                    ],
                    "args": [
                        "GeomVertexAnimationSpec const &animation"
                    ],
                    "argt": [
                        "GeomVertexAnimationSpec const&"
                    ],
                    "c_argv": [
                        "GeomVertexFormat *",
                        "GeomVertexAnimationSpec const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$set_animation(GeomVertexFormat *param0, GeomVertexAnimationSpec const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_set_animation_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f616e696d6174696f6e282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexFormat::set_animation(GeomVertexAnimationSpec const &animation)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$set_animation",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$set_animation(GeomVertexFormat *param0, GeomVertexAnimationSpec const *param1)"
                    ],
                    "fn": "set_animation",
                    "indexed": "GeomVertexFormat$11$set_animation",
                    "mangled": "_inCAAAAWlqH",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_post_animated_format(GeomVertexFormat const *param0)",
                    "c_type": "ConstPointerTo< GeomVertexFormat > *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_post_animated_format_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d566572746578466f726d6174203e28282a706172616d30292e6765745f706f73745f616e696d617465645f666f726d61742829293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexFormat > GeomVertexFormat::get_post_animated_format(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_post_animated_format",
                    "extern": [
                        "ConstPointerTo< GeomVertexFormat > *",
                        "GeomVertexFormat$_$get_post_animated_format(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_post_animated_format",
                    "indexed": "GeomVertexFormat$12$get_post_animated_format",
                    "mangled": "_inCAAAA8LzX",
                    "ot": "ConstPointerTo< GeomVertexFormat >",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "GeomVertexFormat const *other"
                    ],
                    "argt": [
                        "GeomVertexFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_union_format(GeomVertexFormat const *param0, GeomVertexFormat const *param1)",
                    "c_type": "ConstPointerTo< GeomVertexFormat > *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_union_format_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2047656f6d566572746578466f726d6174203e28282a706172616d30292e6765745f756e696f6e5f666f726d617428706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< GeomVertexFormat > GeomVertexFormat::get_union_format(GeomVertexFormat const *other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_union_format",
                    "extern": [
                        "ConstPointerTo< GeomVertexFormat > *",
                        "GeomVertexFormat$_$get_union_format(GeomVertexFormat const *param0, GeomVertexFormat const *param1)"
                    ],
                    "fn": "get_union_format",
                    "indexed": "GeomVertexFormat$13$get_union_format",
                    "mangled": "_inCAAAAKWDM",
                    "ot": "ConstPointerTo< GeomVertexFormat >",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_num_arrays(GeomVertexFormat const *param0)",
                    "c_type": "std::size_t",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_num_arrays_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f61727261797328293b",
                    "cpp_ref": "inline std::size_t GeomVertexFormat::get_num_arrays(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_num_arrays",
                    "extern": [
                        "std::size_t",
                        "GeomVertexFormat$_$get_num_arrays(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_num_arrays",
                    "indexed": "GeomVertexFormat$14$get_num_arrays",
                    "mangled": "_inCAAAAxaAs",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "array"
                    ],
                    "args": [
                        "std::size_t array"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_array(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "GeomVertexArrayFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_array_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f617272617928706172616d31293b",
                    "cpp_ref": "inline GeomVertexArrayFormat const *GeomVertexFormat::get_array(std::size_t array) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_array",
                    "extern": [
                        "GeomVertexArrayFormat const *",
                        "GeomVertexFormat$_$get_array(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_array",
                    "indexed": "GeomVertexFormat$15$get_array",
                    "mangled": "_inCAAAA03f6",
                    "ot": "inline GeomVertexArrayFormat const*",
                    "rt": "GeomVertexArrayFormat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "array"
                    ],
                    "args": [
                        "std::size_t array"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$modify_array(GeomVertexFormat *param0, std::size_t param1)",
                    "c_type": "GeomVertexArrayFormat *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_modify_array_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6d6f646966795f617272617928706172616d31293b",
                    "cpp_ref": "GeomVertexArrayFormat *GeomVertexFormat::modify_array(std::size_t array)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$modify_array",
                    "extern": [
                        "GeomVertexArrayFormat *",
                        "GeomVertexFormat$_$modify_array(GeomVertexFormat *param0, std::size_t param1)"
                    ],
                    "fn": "modify_array",
                    "indexed": "GeomVertexFormat$16$modify_array",
                    "mangled": "_inCAAAAiYLu",
                    "ot": "GeomVertexArrayFormat*",
                    "rt": "GeomVertexArrayFormat"
                },
                {
                    "argc": 2,
                    "argn": [
                        "array",
                        "format"
                    ],
                    "args": [
                        "std::size_t array",
                        "GeomVertexArrayFormat const *format"
                    ],
                    "argt": [
                        "std::size_t",
                        "GeomVertexArrayFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat *",
                        "std::size_t",
                        "GeomVertexArrayFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$set_array(GeomVertexFormat *param0, std::size_t param1, GeomVertexArrayFormat const *param2)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_set_array_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f617272617928706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomVertexFormat::set_array(std::size_t array, GeomVertexArrayFormat const *format)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$set_array",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$set_array(GeomVertexFormat *param0, std::size_t param1, GeomVertexArrayFormat const *param2)"
                    ],
                    "fn": "set_array",
                    "indexed": "GeomVertexFormat$17$set_array",
                    "mangled": "_inCAAAA7_CK",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "array"
                    ],
                    "args": [
                        "std::size_t array"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$remove_array(GeomVertexFormat *param0, std::size_t param1)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_remove_array_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f617272617928706172616d31293b",
                    "cpp_ref": "void GeomVertexFormat::remove_array(std::size_t array)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$remove_array",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$remove_array(GeomVertexFormat *param0, std::size_t param1)"
                    ],
                    "fn": "remove_array",
                    "indexed": "GeomVertexFormat$18$remove_array",
                    "mangled": "_inCAAAASua9",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "array_format"
                    ],
                    "args": [
                        "GeomVertexArrayFormat const *array_format"
                    ],
                    "argt": [
                        "GeomVertexArrayFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat *",
                        "GeomVertexArrayFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$add_array(GeomVertexFormat *param0, GeomVertexArrayFormat const *param1)",
                    "c_type": "std::size_t",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_add_array_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6164645f617272617928706172616d31293b",
                    "cpp_ref": "std::size_t GeomVertexFormat::add_array(GeomVertexArrayFormat const *array_format)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$add_array",
                    "extern": [
                        "std::size_t",
                        "GeomVertexFormat$_$add_array(GeomVertexFormat *param0, GeomVertexArrayFormat const *param1)"
                    ],
                    "fn": "add_array",
                    "indexed": "GeomVertexFormat$19$add_array",
                    "mangled": "_inCAAAAIwkF",
                    "ot": "std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 2,
                    "argn": [
                        "array",
                        "array_format"
                    ],
                    "args": [
                        "std::size_t array",
                        "GeomVertexArrayFormat const *array_format"
                    ],
                    "argt": [
                        "std::size_t",
                        "GeomVertexArrayFormat const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat *",
                        "std::size_t",
                        "GeomVertexArrayFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$insert_array(GeomVertexFormat *param0, std::size_t param1, GeomVertexArrayFormat const *param2)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_insert_array_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e696e736572745f617272617928706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomVertexFormat::insert_array(std::size_t array, GeomVertexArrayFormat const *array_format)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$insert_array",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$insert_array(GeomVertexFormat *param0, std::size_t param1, GeomVertexArrayFormat const *param2)"
                    ],
                    "fn": "insert_array",
                    "indexed": "GeomVertexFormat$20$insert_array",
                    "mangled": "_inCAAAAkuai",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat *"
                    ],
                    "c_ref": "GeomVertexFormat$_$clear_arrays(GeomVertexFormat *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_clear_arrays_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f61727261797328293b",
                    "cpp_ref": "void GeomVertexFormat::clear_arrays(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$clear_arrays",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$clear_arrays(GeomVertexFormat *param0)"
                    ],
                    "fn": "clear_arrays",
                    "indexed": "GeomVertexFormat$21$clear_arrays",
                    "mangled": "_inCAAAAQpcp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat *"
                    ],
                    "c_ref": "GeomVertexFormat$_$remove_empty_arrays(GeomVertexFormat *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_remove_empty_arrays_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f656d7074795f61727261797328293b",
                    "cpp_ref": "void GeomVertexFormat::remove_empty_arrays(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$remove_empty_arrays",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$remove_empty_arrays(GeomVertexFormat *param0)"
                    ],
                    "fn": "remove_empty_arrays",
                    "indexed": "GeomVertexFormat$22$remove_empty_arrays",
                    "mangled": "_inCAAAAucei",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_num_columns(GeomVertexFormat const *param0)",
                    "c_type": "std::size_t",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_num_columns_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f636f6c756d6e7328293b",
                    "cpp_ref": "std::size_t GeomVertexFormat::get_num_columns(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_num_columns",
                    "extern": [
                        "std::size_t",
                        "GeomVertexFormat$_$get_num_columns(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_num_columns",
                    "indexed": "GeomVertexFormat$23$get_num_columns",
                    "mangled": "_inCAAAAEb8v",
                    "ot": "std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "InternalName const *name"
                    ],
                    "argt": [
                        "InternalName const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "InternalName const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_array_with(GeomVertexFormat const *param0, InternalName const *param1)",
                    "c_type": "int",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_array_with_i_ps",
                    "cni_args": "ps",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f61727261795f7769746828706172616d31293b",
                    "cpp_ref": "int GeomVertexFormat::get_array_with(InternalName const *name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_array_with",
                    "extern": [
                        "int",
                        "GeomVertexFormat$_$get_array_with(GeomVertexFormat const *param0, InternalName const *param1)"
                    ],
                    "fn": "get_array_with",
                    "indexed": "GeomVertexFormat$24$get_array_with",
                    "mangled": "_inCAAAA7nrL",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_array_with(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "int",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_array_with_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f61727261795f7769746828706172616d31293b",
                    "cpp_ref": "int GeomVertexFormat::get_array_with(std::size_t i) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_array_with",
                    "extern": [
                        "int",
                        "GeomVertexFormat$_$get_array_with(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_array_with",
                    "indexed": "GeomVertexFormat$25$get_array_with",
                    "mangled": "_inCAAAANXXj",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "InternalName const *name"
                    ],
                    "argt": [
                        "InternalName const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "InternalName const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_column(GeomVertexFormat const *param0, InternalName const *param1)",
                    "c_type": "GeomVertexColumn const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_column_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f636f6c756d6e28706172616d31293b",
                    "cpp_ref": "GeomVertexColumn const *GeomVertexFormat::get_column(InternalName const *name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_column",
                    "extern": [
                        "GeomVertexColumn const *",
                        "GeomVertexFormat$_$get_column(GeomVertexFormat const *param0, InternalName const *param1)"
                    ],
                    "fn": "get_column",
                    "indexed": "GeomVertexFormat$26$get_column",
                    "mangled": "_inCAAAAzgLi",
                    "ot": "GeomVertexColumn const*",
                    "rt": "GeomVertexColumn"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_column(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "GeomVertexColumn const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_column_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f636f6c756d6e28706172616d31293b",
                    "cpp_ref": "GeomVertexColumn const *GeomVertexFormat::get_column(std::size_t i) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_column",
                    "extern": [
                        "GeomVertexColumn const *",
                        "GeomVertexFormat$_$get_column(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_column",
                    "indexed": "GeomVertexFormat$27$get_column",
                    "mangled": "_inCAAAAObkc",
                    "ot": "GeomVertexColumn const*",
                    "rt": "GeomVertexColumn"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "InternalName const *name"
                    ],
                    "argt": [
                        "InternalName const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "InternalName const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$has_column(GeomVertexFormat const *param0, InternalName const *param1)",
                    "c_type": "bool",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_has_column_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f636f6c756d6e28706172616d31293b",
                    "cpp_ref": "inline bool GeomVertexFormat::has_column(InternalName const *name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$has_column",
                    "extern": [
                        "bool",
                        "GeomVertexFormat$_$has_column(GeomVertexFormat const *param0, InternalName const *param1)"
                    ],
                    "fn": "has_column",
                    "indexed": "GeomVertexFormat$28$has_column",
                    "mangled": "_inCAAAArn1o",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_column_name(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "InternalName const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_column_name_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f636f6c756d6e5f6e616d6528706172616d31293b",
                    "cpp_ref": "InternalName const *GeomVertexFormat::get_column_name(std::size_t i) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_column_name",
                    "extern": [
                        "InternalName const *",
                        "GeomVertexFormat$_$get_column_name(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_column_name",
                    "indexed": "GeomVertexFormat$29$get_column_name",
                    "mangled": "_inCAAAAnri4",
                    "ot": "InternalName const*",
                    "rt": ""
                },
                {
                    "argc": 2,
                    "argn": [
                        "name",
                        "keep_empty_array"
                    ],
                    "args": [
                        "InternalName const *name",
                        "bool keep_empty_array"
                    ],
                    "argt": [
                        "InternalName const*",
                        "bool"
                    ],
                    "c_argv": [
                        "GeomVertexFormat *",
                        "InternalName const *",
                        "bool"
                    ],
                    "c_ref": "GeomVertexFormat$_$remove_column(GeomVertexFormat *param0, InternalName const *param1, bool param2)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_remove_column_v_psB",
                    "cni_args": "psB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f636f6c756d6e28706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomVertexFormat::remove_column(InternalName const *name, bool keep_empty_array)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$remove_column",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$remove_column(GeomVertexFormat *param0, InternalName const *param1, bool param2)"
                    ],
                    "fn": "remove_column",
                    "indexed": "GeomVertexFormat$30$remove_column",
                    "mangled": "_inCAAAAD4KU",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "InternalName const *name"
                    ],
                    "argt": [
                        "InternalName const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat *",
                        "InternalName const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$remove_column(GeomVertexFormat *param0, InternalName const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_remove_column_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f636f6c756d6e28706172616d31293b",
                    "cpp_ref": "void GeomVertexFormat::remove_column(InternalName const *name, bool keep_empty_array)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$remove_column",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$remove_column(GeomVertexFormat *param0, InternalName const *param1)"
                    ],
                    "fn": "remove_column",
                    "indexed": "GeomVertexFormat$31$remove_column",
                    "mangled": "_inCAAAAGmoS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat *"
                    ],
                    "c_ref": "GeomVertexFormat$_$pack_columns(GeomVertexFormat *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_pack_columns_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7061636b5f636f6c756d6e7328293b",
                    "cpp_ref": "void GeomVertexFormat::pack_columns(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$pack_columns",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$pack_columns(GeomVertexFormat *param0)"
                    ],
                    "fn": "pack_columns",
                    "indexed": "GeomVertexFormat$32$pack_columns",
                    "mangled": "_inCAAAAytua",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat *"
                    ],
                    "c_ref": "GeomVertexFormat$_$align_columns_for_animation(GeomVertexFormat *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_align_columns_for_animation_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e616c69676e5f636f6c756d6e735f666f725f616e696d6174696f6e28293b",
                    "cpp_ref": "void GeomVertexFormat::align_columns_for_animation(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$align_columns_for_animation",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$align_columns_for_animation(GeomVertexFormat *param0)"
                    ],
                    "fn": "align_columns_for_animation",
                    "indexed": "GeomVertexFormat$33$align_columns_for_animation",
                    "mangled": "_inCAAAAGdZz",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat *"
                    ],
                    "c_ref": "GeomVertexFormat$_$maybe_align_columns_for_animation(GeomVertexFormat *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_maybe_align_columns_for_animation_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d617962655f616c69676e5f636f6c756d6e735f666f725f616e696d6174696f6e28293b",
                    "cpp_ref": "void GeomVertexFormat::maybe_align_columns_for_animation(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$maybe_align_columns_for_animation",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$maybe_align_columns_for_animation(GeomVertexFormat *param0)"
                    ],
                    "fn": "maybe_align_columns_for_animation",
                    "indexed": "GeomVertexFormat$34$maybe_align_columns_for_animation",
                    "mangled": "_inCAAAARJ5L",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_num_points(GeomVertexFormat const *param0)",
                    "c_type": "std::size_t",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_num_points_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f706f696e747328293b",
                    "cpp_ref": "inline std::size_t GeomVertexFormat::get_num_points(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_num_points",
                    "extern": [
                        "std::size_t",
                        "GeomVertexFormat$_$get_num_points(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_num_points",
                    "indexed": "GeomVertexFormat$35$get_num_points",
                    "mangled": "_inCAAAAMqq8",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_point(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "InternalName const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_point_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f706f696e7428706172616d31293b",
                    "cpp_ref": "inline InternalName const *GeomVertexFormat::get_point(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_point",
                    "extern": [
                        "InternalName const *",
                        "GeomVertexFormat$_$get_point(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_point",
                    "indexed": "GeomVertexFormat$36$get_point",
                    "mangled": "_inCAAAAD_LF",
                    "ot": "inline InternalName const*",
                    "rt": ""
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_num_vectors(GeomVertexFormat const *param0)",
                    "c_type": "std::size_t",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_num_vectors_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f766563746f727328293b",
                    "cpp_ref": "inline std::size_t GeomVertexFormat::get_num_vectors(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_num_vectors",
                    "extern": [
                        "std::size_t",
                        "GeomVertexFormat$_$get_num_vectors(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_num_vectors",
                    "indexed": "GeomVertexFormat$37$get_num_vectors",
                    "mangled": "_inCAAAANM2c",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_vector(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "InternalName const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_vector_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f766563746f7228706172616d31293b",
                    "cpp_ref": "inline InternalName const *GeomVertexFormat::get_vector(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_vector",
                    "extern": [
                        "InternalName const *",
                        "GeomVertexFormat$_$get_vector(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_vector",
                    "indexed": "GeomVertexFormat$38$get_vector",
                    "mangled": "_inCAAAAbrqq",
                    "ot": "inline InternalName const*",
                    "rt": ""
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_num_texcoords(GeomVertexFormat const *param0)",
                    "c_type": "std::size_t",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_num_texcoords_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f746578636f6f72647328293b",
                    "cpp_ref": "inline std::size_t GeomVertexFormat::get_num_texcoords(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_num_texcoords",
                    "extern": [
                        "std::size_t",
                        "GeomVertexFormat$_$get_num_texcoords(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_num_texcoords",
                    "indexed": "GeomVertexFormat$39$get_num_texcoords",
                    "mangled": "_inCAAAAKJ7H",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_texcoord(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "InternalName const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_texcoord_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f746578636f6f726428706172616d31293b",
                    "cpp_ref": "inline InternalName const *GeomVertexFormat::get_texcoord(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_texcoord",
                    "extern": [
                        "InternalName const *",
                        "GeomVertexFormat$_$get_texcoord(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_texcoord",
                    "indexed": "GeomVertexFormat$40$get_texcoord",
                    "mangled": "_inCAAAAJc1b",
                    "ot": "inline InternalName const*",
                    "rt": ""
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_num_morphs(GeomVertexFormat const *param0)",
                    "c_type": "std::size_t",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_num_morphs_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f6d6f7270687328293b",
                    "cpp_ref": "inline std::size_t GeomVertexFormat::get_num_morphs(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_num_morphs",
                    "extern": [
                        "std::size_t",
                        "GeomVertexFormat$_$get_num_morphs(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_num_morphs",
                    "indexed": "GeomVertexFormat$41$get_num_morphs",
                    "mangled": "_inCAAAAFthv",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_morph_slider(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "InternalName const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_morph_slider_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6d6f7270685f736c6964657228706172616d31293b",
                    "cpp_ref": "inline InternalName const *GeomVertexFormat::get_morph_slider(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_morph_slider",
                    "extern": [
                        "InternalName const *",
                        "GeomVertexFormat$_$get_morph_slider(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_morph_slider",
                    "indexed": "GeomVertexFormat$42$get_morph_slider",
                    "mangled": "_inCAAAAIUdD",
                    "ot": "inline InternalName const*",
                    "rt": ""
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_morph_base(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "InternalName const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_morph_base_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6d6f7270685f6261736528706172616d31293b",
                    "cpp_ref": "inline InternalName const *GeomVertexFormat::get_morph_base(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_morph_base",
                    "extern": [
                        "InternalName const *",
                        "GeomVertexFormat$_$get_morph_base(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_morph_base",
                    "indexed": "GeomVertexFormat$43$get_morph_base",
                    "mangled": "_inCAAAAzhGZ",
                    "ot": "inline InternalName const*",
                    "rt": ""
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::size_t"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_morph_delta(GeomVertexFormat const *param0, std::size_t param1)",
                    "c_type": "InternalName const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_morph_delta_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6d6f7270685f64656c746128706172616d31293b",
                    "cpp_ref": "inline InternalName const *GeomVertexFormat::get_morph_delta(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_morph_delta",
                    "extern": [
                        "InternalName const *",
                        "GeomVertexFormat$_$get_morph_delta(GeomVertexFormat const *param0, std::size_t param1)"
                    ],
                    "fn": "get_morph_delta",
                    "indexed": "GeomVertexFormat$44$get_morph_delta",
                    "mangled": "_inCAAAA9ztO",
                    "ot": "inline InternalName const*",
                    "rt": ""
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::ostream *"
                    ],
                    "c_ref": "GeomVertexFormat$_$output(GeomVertexFormat const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "void GeomVertexFormat::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$output",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$output(GeomVertexFormat const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "GeomVertexFormat$45$output",
                    "mangled": "_inCAAAAZXPf",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "GeomVertexFormat$_$write(GeomVertexFormat const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_write_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void GeomVertexFormat::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$write",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$write(GeomVertexFormat const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "write",
                    "indexed": "GeomVertexFormat$46$write",
                    "mangled": "_inCAAAAhry4",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::ostream *"
                    ],
                    "c_ref": "GeomVertexFormat$_$write(GeomVertexFormat const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_write_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d31293b",
                    "cpp_ref": "void GeomVertexFormat::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$write",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$write(GeomVertexFormat const *param0, std::ostream *param1)"
                    ],
                    "fn": "write",
                    "indexed": "GeomVertexFormat$47$write",
                    "mangled": "_inCAAAAWw0L",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "out",
                        "indent_level",
                        "data"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level",
                        "GeomVertexData const *data"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int",
                        "GeomVertexData const*"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "std::ostream *",
                        "int",
                        "GeomVertexData const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$write_with_data(GeomVertexFormat const *param0, std::ostream *param1, int param2, GeomVertexData const *param3)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_write_with_data_v_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f776974685f64617461282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void GeomVertexFormat::write_with_data(std::ostream &out, int indent_level, GeomVertexData const *data) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$write_with_data",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$write_with_data(GeomVertexFormat const *param0, std::ostream *param1, int param2, GeomVertexData const *param3)"
                    ],
                    "fn": "write_with_data",
                    "indexed": "GeomVertexFormat$48$write_with_data",
                    "mangled": "_inCAAAAOjX6",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_empty()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_empty_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f656d70747928293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_empty(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_empty",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_empty()"
                    ],
                    "fn": "get_empty",
                    "indexed": "GeomVertexFormat$49$get_empty",
                    "mangled": "_inCAAAALAhu",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f763328293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3()"
                    ],
                    "fn": "get_v3",
                    "indexed": "GeomVertexFormat$50$get_v3",
                    "mangled": "_inCAAAAM264",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3n3()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3n3_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f76336e3328293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3n3(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3n3",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3n3()"
                    ],
                    "fn": "get_v3n3",
                    "indexed": "GeomVertexFormat$51$get_v3n3",
                    "mangled": "_inCAAAAw8Vh",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3t2()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3t2_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f7633743228293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3t2(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3t2",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3t2()"
                    ],
                    "fn": "get_v3t2",
                    "indexed": "GeomVertexFormat$52$get_v3t2",
                    "mangled": "_inCAAAA6P2g",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3n3t2()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3n3t2_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f76336e33743228293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3n3t2(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3n3t2",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3n3t2()"
                    ],
                    "fn": "get_v3n3t2",
                    "indexed": "GeomVertexFormat$53$get_v3n3t2",
                    "mangled": "_inCAAAAp05G",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3cp()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3cp_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f7633637028293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3cp(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3cp",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3cp()"
                    ],
                    "fn": "get_v3cp",
                    "indexed": "GeomVertexFormat$54$get_v3cp",
                    "mangled": "_inCAAAAm2WG",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3cpt2()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3cpt2_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f76336370743228293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3cpt2(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3cpt2",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3cpt2()"
                    ],
                    "fn": "get_v3cpt2",
                    "indexed": "GeomVertexFormat$55$get_v3cpt2",
                    "mangled": "_inCAAAAE76r",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3n3cp()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3n3cp_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f76336e33637028293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3n3cp(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3n3cp",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3n3cp()"
                    ],
                    "fn": "get_v3n3cp",
                    "indexed": "GeomVertexFormat$56$get_v3n3cp",
                    "mangled": "_inCAAAAxdLR",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3n3cpt2()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3n3cpt2_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f76336e336370743228293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3n3cpt2(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3n3cpt2",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3n3cpt2()"
                    ],
                    "fn": "get_v3n3cpt2",
                    "indexed": "GeomVertexFormat$57$get_v3n3cpt2",
                    "mangled": "_inCAAAAaDrT",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3c4()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3c4_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f7633633428293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3c4(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3c4",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3c4()"
                    ],
                    "fn": "get_v3c4",
                    "indexed": "GeomVertexFormat$58$get_v3c4",
                    "mangled": "_inCAAAAlkvh",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3c4t2()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3c4t2_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f76336334743228293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3c4t2(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3c4t2",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3c4t2()"
                    ],
                    "fn": "get_v3c4t2",
                    "indexed": "GeomVertexFormat$59$get_v3c4t2",
                    "mangled": "_inCAAAAEtTH",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3n3c4()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3n3c4_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f76336e33633428293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3n3c4(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3n3c4",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3n3c4()"
                    ],
                    "fn": "get_v3n3c4",
                    "indexed": "GeomVertexFormat$60$get_v3n3c4",
                    "mangled": "_inCAAAA_Erc",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_v3n3c4t2()",
                    "c_type": "GeomVertexFormat const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_v3n3c4t2_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2047656f6d566572746578466f726d61743a3a6765745f76336e336334743228293b",
                    "cpp_ref": "static inline GeomVertexFormat const *GeomVertexFormat::get_v3n3c4t2(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_v3n3c4t2",
                    "extern": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat$_$get_v3n3c4t2()"
                    ],
                    "fn": "get_v3n3c4t2",
                    "indexed": "GeomVertexFormat$61$get_v3n3c4t2",
                    "mangled": "_inCAAAAE8Lf",
                    "ot": "inline GeomVertexFormat const*",
                    "rt": "GeomVertexFormat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_vertex_array_index(GeomVertexFormat const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_vertex_array_index_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7665727465785f61727261795f696e64657828293b",
                    "cpp_ref": "inline int GeomVertexFormat::get_vertex_array_index(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_vertex_array_index",
                    "extern": [
                        "int",
                        "GeomVertexFormat$_$get_vertex_array_index(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_vertex_array_index",
                    "indexed": "GeomVertexFormat$62$get_vertex_array_index",
                    "mangled": "_inCAAAAVxYi",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_vertex_column(GeomVertexFormat const *param0)",
                    "c_type": "GeomVertexColumn const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_vertex_column_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7665727465785f636f6c756d6e28293b",
                    "cpp_ref": "inline GeomVertexColumn const *GeomVertexFormat::get_vertex_column(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_vertex_column",
                    "extern": [
                        "GeomVertexColumn const *",
                        "GeomVertexFormat$_$get_vertex_column(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_vertex_column",
                    "indexed": "GeomVertexFormat$63$get_vertex_column",
                    "mangled": "_inCAAAAnqvf",
                    "ot": "inline GeomVertexColumn const*",
                    "rt": "GeomVertexColumn"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_normal_array_index(GeomVertexFormat const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_normal_array_index_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e6f726d616c5f61727261795f696e64657828293b",
                    "cpp_ref": "inline int GeomVertexFormat::get_normal_array_index(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_normal_array_index",
                    "extern": [
                        "int",
                        "GeomVertexFormat$_$get_normal_array_index(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_normal_array_index",
                    "indexed": "GeomVertexFormat$64$get_normal_array_index",
                    "mangled": "_inCAAAAKBAO",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_normal_column(GeomVertexFormat const *param0)",
                    "c_type": "GeomVertexColumn const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_normal_column_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e6f726d616c5f636f6c756d6e28293b",
                    "cpp_ref": "inline GeomVertexColumn const *GeomVertexFormat::get_normal_column(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_normal_column",
                    "extern": [
                        "GeomVertexColumn const *",
                        "GeomVertexFormat$_$get_normal_column(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_normal_column",
                    "indexed": "GeomVertexFormat$65$get_normal_column",
                    "mangled": "_inCAAAAAPWL",
                    "ot": "inline GeomVertexColumn const*",
                    "rt": "GeomVertexColumn"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_color_array_index(GeomVertexFormat const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_color_array_index_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f636f6c6f725f61727261795f696e64657828293b",
                    "cpp_ref": "inline int GeomVertexFormat::get_color_array_index(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_color_array_index",
                    "extern": [
                        "int",
                        "GeomVertexFormat$_$get_color_array_index(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_color_array_index",
                    "indexed": "GeomVertexFormat$66$get_color_array_index",
                    "mangled": "_inCAAAAE6wB",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_color_column(GeomVertexFormat const *param0)",
                    "c_type": "GeomVertexColumn const *",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_color_column_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f636f6c6f725f636f6c756d6e28293b",
                    "cpp_ref": "inline GeomVertexColumn const *GeomVertexFormat::get_color_column(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_color_column",
                    "extern": [
                        "GeomVertexColumn const *",
                        "GeomVertexFormat$_$get_color_column(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_color_column",
                    "indexed": "GeomVertexFormat$67$get_color_column",
                    "mangled": "_inCAAAAvorX",
                    "ot": "inline GeomVertexColumn const*",
                    "rt": "GeomVertexColumn"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "GeomVertexFormat const &other"
                    ],
                    "argt": [
                        "GeomVertexFormat const&"
                    ],
                    "c_argv": [
                        "GeomVertexFormat const *",
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$compare_to(GeomVertexFormat const *param0, GeomVertexFormat const *param1)",
                    "c_type": "int",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_compare_to_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f746f282a706172616d31293b",
                    "cpp_ref": "int GeomVertexFormat::compare_to(GeomVertexFormat const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$compare_to",
                    "extern": [
                        "int",
                        "GeomVertexFormat$_$compare_to(GeomVertexFormat const *param0, GeomVertexFormat const *param1)"
                    ],
                    "fn": "compare_to",
                    "indexed": "GeomVertexFormat$68$compare_to",
                    "mangled": "_inCAAAADKeQ",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$register_with_read_factory()",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_register_with_read_factory_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d566572746578466f726d61743a3a72656769737465725f776974685f726561645f666163746f727928293b",
                    "cpp_ref": "static void GeomVertexFormat::register_with_read_factory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$register_with_read_factory",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$register_with_read_factory()"
                    ],
                    "fn": "register_with_read_factory",
                    "indexed": "GeomVertexFormat$69$register_with_read_factory",
                    "mangled": "_inCAAAAY_W1",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "GeomVertexFormat *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "GeomVertexFormat$_$write_datagram(GeomVertexFormat *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void GeomVertexFormat::write_datagram(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$write_datagram",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$write_datagram(GeomVertexFormat *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "GeomVertexFormat$70$write_datagram",
                    "mangled": "_inCAAAAj4hI",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$get_class_type()",
                    "c_type": "int",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202847656f6d566572746578466f726d61743a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle GeomVertexFormat::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_class_type",
                    "extern": [
                        "int",
                        "GeomVertexFormat$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "GeomVertexFormat$71$get_class_type",
                    "mangled": "_inCAAAAzbuh",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexFormat$_$init_type()",
                    "c_type": "void",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202047656f6d566572746578466f726d61743a3a696e69745f7479706528293b",
                    "cpp_ref": "static void GeomVertexFormat::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$init_type",
                    "extern": [
                        "void",
                        "GeomVertexFormat$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "GeomVertexFormat$72$init_type",
                    "mangled": "_inCAAAAjw2s",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat const *"
                    ],
                    "c_ref": "GeomVertexFormat$_$get_type(GeomVertexFormat const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomVertexFormat::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$get_type",
                    "extern": [
                        "int",
                        "GeomVertexFormat$_$get_type(GeomVertexFormat const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "GeomVertexFormat$73$get_type",
                    "mangled": "_inCAAAAvl3_",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexFormat *"
                    ],
                    "c_ref": "GeomVertexFormat$_$force_init_type(GeomVertexFormat *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexFormat",
                    "cni": "GeomVertexFormat_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle GeomVertexFormat::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexFormat$_$force_init_type",
                    "extern": [
                        "int",
                        "GeomVertexFormat$_$force_init_type(GeomVertexFormat *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "GeomVertexFormat$74$force_init_type",
                    "mangled": "_inCAAAA0Ul6",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "GeomVertexWriter": {
            "bases": [
                "GeomEnums"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 2,
                    "argn": [
                        "array_data",
                        "current_thread"
                    ],
                    "args": [
                        "GeomVertexArrayData *array_data",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "GeomVertexArrayData*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomVertexArrayData *",
                        "Thread *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexArrayData *param0, Thread *param1)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d302c20706172616d31293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexArrayData *array_data, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexArrayData *param0, Thread *param1)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$1$GeomVertexWriter",
                    "mangled": "_inCAAAADYGf",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 1,
                    "argn": [
                        "array_data"
                    ],
                    "args": [
                        "GeomVertexArrayData *array_data"
                    ],
                    "argt": [
                        "GeomVertexArrayData*"
                    ],
                    "c_argv": [
                        "GeomVertexArrayData *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexArrayData *param0)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d30293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexArrayData *array_data, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexArrayData *param0)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$2$GeomVertexWriter",
                    "mangled": "_inCAAAAm1bv",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 3,
                    "argn": [
                        "array_data",
                        "column",
                        "current_thread"
                    ],
                    "args": [
                        "GeomVertexArrayData *array_data",
                        "int column",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "GeomVertexArrayData*",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomVertexArrayData *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexArrayData *param0, int param1, Thread *param2)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_pip",
                    "cni_args": "pip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d302c20706172616d312c20706172616d32293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexArrayData *array_data, int column, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexArrayData *param0, int param1, Thread *param2)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$3$GeomVertexWriter",
                    "mangled": "_inCAAAABk28",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 2,
                    "argn": [
                        "array_data",
                        "column"
                    ],
                    "args": [
                        "GeomVertexArrayData *array_data",
                        "int column"
                    ],
                    "argt": [
                        "GeomVertexArrayData*",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexArrayData *",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexArrayData *param0, int param1)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d302c20706172616d31293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexArrayData *array_data, int column, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexArrayData *param0, int param1)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$4$GeomVertexWriter",
                    "mangled": "_inCAAAA8wdd",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 3,
                    "argn": [
                        "vertex_data",
                        "name",
                        "current_thread"
                    ],
                    "args": [
                        "GeomVertexData *vertex_data",
                        "CPT_InternalName name",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "GeomVertexData*",
                        "CPT_InternalName",
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "CPT_InternalName *",
                        "Thread *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexData *param0, CPT_InternalName *param1, Thread *param2)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_psp",
                    "cni_args": "psp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d302c202a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexData *vertex_data, CPT_InternalName name, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexData *param0, CPT_InternalName *param1, Thread *param2)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$5$GeomVertexWriter",
                    "mangled": "_inCAAAAdgbd",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 2,
                    "argn": [
                        "vertex_data",
                        "name"
                    ],
                    "args": [
                        "GeomVertexData *vertex_data",
                        "CPT_InternalName name"
                    ],
                    "argt": [
                        "GeomVertexData*",
                        "CPT_InternalName"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "CPT_InternalName *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexData *param0, CPT_InternalName *param1)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d302c202a706172616d31293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexData *vertex_data, CPT_InternalName name, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexData *param0, CPT_InternalName *param1)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$6$GeomVertexWriter",
                    "mangled": "_inCAAAA0Ikz",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 2,
                    "argn": [
                        "vertex_data",
                        "current_thread"
                    ],
                    "args": [
                        "GeomVertexData *vertex_data",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "GeomVertexData*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "GeomVertexData *",
                        "Thread *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexData *param0, Thread *param1)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_pp_1_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d302c20706172616d31293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexData *vertex_data, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexData *param0, Thread *param1)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$7$GeomVertexWriter",
                    "mangled": "_inCAAAA_sLT",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 1,
                    "argn": [
                        "vertex_data"
                    ],
                    "args": [
                        "GeomVertexData *vertex_data"
                    ],
                    "argt": [
                        "GeomVertexData*"
                    ],
                    "c_argv": [
                        "GeomVertexData *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexData *param0)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_p_1_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d30293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexData *vertex_data, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexData *param0)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$8$GeomVertexWriter",
                    "mangled": "_inCAAAAiuVb",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 2,
                    "argn": [
                        "data_writer",
                        "name"
                    ],
                    "args": [
                        "GeomVertexDataPipelineWriter *data_writer",
                        "InternalName const *name"
                    ],
                    "argt": [
                        "GeomVertexDataPipelineWriter*",
                        "InternalName const*"
                    ],
                    "c_argv": [
                        "GeomVertexDataPipelineWriter *",
                        "InternalName const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexDataPipelineWriter *param0, InternalName const *param1)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_ps_1_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d302c20706172616d31293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexDataPipelineWriter *data_writer, InternalName const *name)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexDataPipelineWriter *param0, InternalName const *param1)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$9$GeomVertexWriter",
                    "mangled": "_inCAAAA2HJ_",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 1,
                    "argn": [
                        "copy"
                    ],
                    "args": [
                        "GeomVertexWriter const &copy"
                    ],
                    "argt": [
                        "GeomVertexWriter const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(GeomVertexWriter const *param0)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_p_1_p_p_2_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d566572746578577269746572282a706172616d30293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(GeomVertexWriter const &copy)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(GeomVertexWriter const *param0)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$10$GeomVertexWriter",
                    "mangled": "_inCAAAA3jti",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "Thread *"
                    ],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter(Thread *param0)",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_p_1_p_p_2_p_p_3_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228706172616d30293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter(Thread *param0)"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$11$GeomVertexWriter",
                    "mangled": "_inCAAAAWOrH",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "GeomVertexWriter$_$GeomVertexWriter()",
                    "c_type": "GeomVertexWriter *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772047656f6d56657274657857726974657228293b",
                    "cpp_ref": "inline GeomVertexWriter::GeomVertexWriter(Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "GeomVertexWriter$_$GeomVertexWriter",
                    "extern": [
                        "GeomVertexWriter *",
                        "GeomVertexWriter$_$GeomVertexWriter()"
                    ],
                    "fn": "GeomVertexWriter",
                    "indexed": "GeomVertexWriter$12$GeomVertexWriter",
                    "mangled": "_inCAAAA_1gf",
                    "ot": "inline",
                    "rt": "GeomVertexWriter"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$get_vertex_data(GeomVertexWriter const *param0)",
                    "c_type": "GeomVertexData *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_get_vertex_data_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7665727465785f6461746128293b",
                    "cpp_ref": "inline GeomVertexData *GeomVertexWriter::get_vertex_data(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$get_vertex_data",
                    "extern": [
                        "GeomVertexData *",
                        "GeomVertexWriter$_$get_vertex_data(GeomVertexWriter const *param0)"
                    ],
                    "fn": "get_vertex_data",
                    "indexed": "GeomVertexWriter$13$get_vertex_data",
                    "mangled": "_inCAAAA1wqw",
                    "ot": "inline GeomVertexData*",
                    "rt": "GeomVertexData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$get_array_data(GeomVertexWriter const *param0)",
                    "c_type": "GeomVertexArrayData *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_get_array_data_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f61727261795f6461746128293b",
                    "cpp_ref": "inline GeomVertexArrayData *GeomVertexWriter::get_array_data(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$get_array_data",
                    "extern": [
                        "GeomVertexArrayData *",
                        "GeomVertexWriter$_$get_array_data(GeomVertexWriter const *param0)"
                    ],
                    "fn": "get_array_data",
                    "indexed": "GeomVertexWriter$14$get_array_data",
                    "mangled": "_inCAAAA4pZu",
                    "ot": "inline GeomVertexArrayData*",
                    "rt": "GeomVertexArrayData"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$get_array_handle(GeomVertexWriter const *param0)",
                    "c_type": "GeomVertexArrayDataHandle *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_get_array_handle_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f61727261795f68616e646c6528293b",
                    "cpp_ref": "inline GeomVertexArrayDataHandle *GeomVertexWriter::get_array_handle(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$get_array_handle",
                    "extern": [
                        "GeomVertexArrayDataHandle *",
                        "GeomVertexWriter$_$get_array_handle(GeomVertexWriter const *param0)"
                    ],
                    "fn": "get_array_handle",
                    "indexed": "GeomVertexWriter$15$get_array_handle",
                    "mangled": "_inCAAAAefIP",
                    "ot": "inline GeomVertexArrayDataHandle*",
                    "rt": "GeomVertexArrayDataHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$get_stride(GeomVertexWriter const *param0)",
                    "c_type": "std::size_t",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_get_stride_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f73747269646528293b",
                    "cpp_ref": "inline std::size_t GeomVertexWriter::get_stride(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$get_stride",
                    "extern": [
                        "std::size_t",
                        "GeomVertexWriter$_$get_stride(GeomVertexWriter const *param0)"
                    ],
                    "fn": "get_stride",
                    "indexed": "GeomVertexWriter$16$get_stride",
                    "mangled": "_inCAAAAkglK",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$get_current_thread(GeomVertexWriter const *param0)",
                    "c_type": "Thread *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_get_current_thread_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f63757272656e745f74687265616428293b",
                    "cpp_ref": "inline Thread *GeomVertexWriter::get_current_thread(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$get_current_thread",
                    "extern": [
                        "Thread *",
                        "GeomVertexWriter$_$get_current_thread(GeomVertexWriter const *param0)"
                    ],
                    "fn": "get_current_thread",
                    "indexed": "GeomVertexWriter$17$get_current_thread",
                    "mangled": "_inCAAAARIaa",
                    "ot": "inline Thread*",
                    "rt": "Thread"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "CPT_InternalName name"
                    ],
                    "argt": [
                        "CPT_InternalName"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "CPT_InternalName *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_column(GeomVertexWriter *param0, CPT_InternalName *param1)",
                    "c_type": "bool",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_column_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7365745f636f6c756d6e282a706172616d31293b",
                    "cpp_ref": "inline bool GeomVertexWriter::set_column(CPT_InternalName name)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_column",
                    "extern": [
                        "bool",
                        "GeomVertexWriter$_$set_column(GeomVertexWriter *param0, CPT_InternalName *param1)"
                    ],
                    "fn": "set_column",
                    "indexed": "GeomVertexWriter$18$set_column",
                    "mangled": "_inCAAAAxzis",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "column"
                    ],
                    "args": [
                        "int column"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_column(GeomVertexWriter *param0, int param1)",
                    "c_type": "bool",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_column_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7365745f636f6c756d6e28706172616d31293b",
                    "cpp_ref": "inline bool GeomVertexWriter::set_column(int column)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_column",
                    "extern": [
                        "bool",
                        "GeomVertexWriter$_$set_column(GeomVertexWriter *param0, int param1)"
                    ],
                    "fn": "set_column",
                    "indexed": "GeomVertexWriter$19$set_column",
                    "mangled": "_inCAAAA4bSL",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "array",
                        "column"
                    ],
                    "args": [
                        "int array",
                        "GeomVertexColumn const *column"
                    ],
                    "argt": [
                        "int",
                        "GeomVertexColumn const*"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int",
                        "GeomVertexColumn const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_column(GeomVertexWriter *param0, int param1, GeomVertexColumn const *param2)",
                    "c_type": "bool",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_column_B_pip",
                    "cni_args": "pip",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7365745f636f6c756d6e28706172616d312c20706172616d32293b",
                    "cpp_ref": "bool GeomVertexWriter::set_column(int array, GeomVertexColumn const *column)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_column",
                    "extern": [
                        "bool",
                        "GeomVertexWriter$_$set_column(GeomVertexWriter *param0, int param1, GeomVertexColumn const *param2)"
                    ],
                    "fn": "set_column",
                    "indexed": "GeomVertexWriter$20$set_column",
                    "mangled": "_inCAAAA5him",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter *"
                    ],
                    "c_ref": "GeomVertexWriter$_$clear(GeomVertexWriter *param0)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_clear_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c65617228293b",
                    "cpp_ref": "inline void GeomVertexWriter::clear(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$clear",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$clear(GeomVertexWriter *param0)"
                    ],
                    "fn": "clear",
                    "indexed": "GeomVertexWriter$21$clear",
                    "mangled": "_inCAAAAh0DZ",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "num_rows"
                    ],
                    "args": [
                        "int num_rows"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$reserve_num_rows(GeomVertexWriter *param0, int param1)",
                    "c_type": "bool",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_reserve_num_rows_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726573657276655f6e756d5f726f777328706172616d31293b",
                    "cpp_ref": "bool GeomVertexWriter::reserve_num_rows(int num_rows)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$reserve_num_rows",
                    "extern": [
                        "bool",
                        "GeomVertexWriter$_$reserve_num_rows(GeomVertexWriter *param0, int param1)"
                    ],
                    "fn": "reserve_num_rows",
                    "indexed": "GeomVertexWriter$22$reserve_num_rows",
                    "mangled": "_inCAAAATc4i",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$has_column(GeomVertexWriter const *param0)",
                    "c_type": "bool",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_has_column_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f636f6c756d6e28293b",
                    "cpp_ref": "inline bool GeomVertexWriter::has_column(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$has_column",
                    "extern": [
                        "bool",
                        "GeomVertexWriter$_$has_column(GeomVertexWriter const *param0)"
                    ],
                    "fn": "has_column",
                    "indexed": "GeomVertexWriter$23$has_column",
                    "mangled": "_inCAAAA7zCz",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$get_array(GeomVertexWriter const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_get_array_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f617272617928293b",
                    "cpp_ref": "inline int GeomVertexWriter::get_array(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$get_array",
                    "extern": [
                        "int",
                        "GeomVertexWriter$_$get_array(GeomVertexWriter const *param0)"
                    ],
                    "fn": "get_array",
                    "indexed": "GeomVertexWriter$24$get_array",
                    "mangled": "_inCAAAAImzD",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$get_column(GeomVertexWriter const *param0)",
                    "c_type": "GeomVertexColumn const *",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_get_column_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f636f6c756d6e28293b",
                    "cpp_ref": "inline GeomVertexColumn const *GeomVertexWriter::get_column(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$get_column",
                    "extern": [
                        "GeomVertexColumn const *",
                        "GeomVertexWriter$_$get_column(GeomVertexWriter const *param0)"
                    ],
                    "fn": "get_column",
                    "indexed": "GeomVertexWriter$25$get_column",
                    "mangled": "_inCAAAATOZs",
                    "ot": "inline GeomVertexColumn const*",
                    "rt": "GeomVertexColumn"
                },
                {
                    "argc": 1,
                    "argn": [
                        "row"
                    ],
                    "args": [
                        "int row"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_row_unsafe(GeomVertexWriter *param0, int param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_row_unsafe_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f726f775f756e7361666528706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_row_unsafe(int row)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_row_unsafe",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_row_unsafe(GeomVertexWriter *param0, int param1)"
                    ],
                    "fn": "set_row_unsafe",
                    "indexed": "GeomVertexWriter$26$set_row_unsafe",
                    "mangled": "_inCAAAAX9mF",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "row"
                    ],
                    "args": [
                        "int row"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_row(GeomVertexWriter *param0, int param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_row_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f726f7728706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_row(int row)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_row",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_row(GeomVertexWriter *param0, int param1)"
                    ],
                    "fn": "set_row",
                    "indexed": "GeomVertexWriter$27$set_row",
                    "mangled": "_inCAAAAk3SK",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$get_start_row(GeomVertexWriter const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_get_start_row_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f73746172745f726f7728293b",
                    "cpp_ref": "inline int GeomVertexWriter::get_start_row(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$get_start_row",
                    "extern": [
                        "int",
                        "GeomVertexWriter$_$get_start_row(GeomVertexWriter const *param0)"
                    ],
                    "fn": "get_start_row",
                    "indexed": "GeomVertexWriter$28$get_start_row",
                    "mangled": "_inCAAAAiCoy",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$get_write_row(GeomVertexWriter const *param0)",
                    "c_type": "int",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_get_write_row_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f77726974655f726f7728293b",
                    "cpp_ref": "inline int GeomVertexWriter::get_write_row(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$get_write_row",
                    "extern": [
                        "int",
                        "GeomVertexWriter$_$get_write_row(GeomVertexWriter const *param0)"
                    ],
                    "fn": "get_write_row",
                    "indexed": "GeomVertexWriter$29$get_write_row",
                    "mangled": "_inCAAAADv2U",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "GeomVertexWriter const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$is_at_end(GeomVertexWriter const *param0)",
                    "c_type": "bool",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_is_at_end_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f61745f656e6428293b",
                    "cpp_ref": "inline bool GeomVertexWriter::is_at_end(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$is_at_end",
                    "extern": [
                        "bool",
                        "GeomVertexWriter$_$is_at_end(GeomVertexWriter const *param0)"
                    ],
                    "fn": "is_at_end",
                    "indexed": "GeomVertexWriter$30$is_at_end",
                    "mangled": "_inCAAAAqN8y",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "float data"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "float"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data1f(GeomVertexWriter *param0, float param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data1f_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461316628706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data1f(float data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data1f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data1f(GeomVertexWriter *param0, float param1)"
                    ],
                    "fn": "set_data1f",
                    "indexed": "GeomVertexWriter$31$set_data1f",
                    "mangled": "_inCAAAA8dnY",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase2f const &data"
                    ],
                    "argt": [
                        "LVecBase2f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase2f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data2f(GeomVertexWriter *param0, LVecBase2f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data2f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613266282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data2f(LVecBase2f const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data2f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data2f(GeomVertexWriter *param0, LVecBase2f const *param1)"
                    ],
                    "fn": "set_data2f",
                    "indexed": "GeomVertexWriter$32$set_data2f",
                    "mangled": "_inCAAAAuO4g",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "x",
                        "y"
                    ],
                    "args": [
                        "float x",
                        "float y"
                    ],
                    "argt": [
                        "float",
                        "float"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "float",
                        "float"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data2f(GeomVertexWriter *param0, float param1, float param2)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data2f_v_pff",
                    "cni_args": "pff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461326628706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data2f(float x, float y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data2f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data2f(GeomVertexWriter *param0, float param1, float param2)"
                    ],
                    "fn": "set_data2f",
                    "indexed": "GeomVertexWriter$33$set_data2f",
                    "mangled": "_inCAAAAmeMu",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase3f const &data"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data3f(GeomVertexWriter *param0, LVecBase3f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data3f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613366282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data3f(LVecBase3f const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data3f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data3f(GeomVertexWriter *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "set_data3f",
                    "indexed": "GeomVertexWriter$34$set_data3f",
                    "mangled": "_inCAAAAH_73",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "float x",
                        "float y",
                        "float z"
                    ],
                    "argt": [
                        "float",
                        "float",
                        "float"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "float",
                        "float",
                        "float"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data3f(GeomVertexWriter *param0, float param1, float param2, float param3)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data3f_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461336628706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data3f(float x, float y, float z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data3f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data3f(GeomVertexWriter *param0, float param1, float param2, float param3)"
                    ],
                    "fn": "set_data3f",
                    "indexed": "GeomVertexWriter$35$set_data3f",
                    "mangled": "_inCAAAA_DXP",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase4f const &data"
                    ],
                    "argt": [
                        "LVecBase4f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase4f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data4f(GeomVertexWriter *param0, LVecBase4f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data4f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613466282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data4f(LVecBase4f const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data4f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data4f(GeomVertexWriter *param0, LVecBase4f const *param1)"
                    ],
                    "fn": "set_data4f",
                    "indexed": "GeomVertexWriter$36$set_data4f",
                    "mangled": "_inCAAAAfh9O",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "x",
                        "y",
                        "z",
                        "w"
                    ],
                    "args": [
                        "float x",
                        "float y",
                        "float z",
                        "float w"
                    ],
                    "argt": [
                        "float",
                        "float",
                        "float",
                        "float"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "float",
                        "float",
                        "float",
                        "float"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data4f(GeomVertexWriter *param0, float param1, float param2, float param3, float param4)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data4f_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461346628706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data4f(float x, float y, float z, float w)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data4f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data4f(GeomVertexWriter *param0, float param1, float param2, float param3, float param4)"
                    ],
                    "fn": "set_data4f",
                    "indexed": "GeomVertexWriter$37$set_data4f",
                    "mangled": "_inCAAAAKTZT",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix3f const &mat"
                    ],
                    "argt": [
                        "LMatrix3f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix3f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_matrix3f(GeomVertexWriter *param0, LMatrix3f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_matrix3f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d61747269783366282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_matrix3f(LMatrix3f const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_matrix3f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_matrix3f(GeomVertexWriter *param0, LMatrix3f const *param1)"
                    ],
                    "fn": "set_matrix3f",
                    "indexed": "GeomVertexWriter$38$set_matrix3f",
                    "mangled": "_inCAAAA1xsE",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4f const &mat"
                    ],
                    "argt": [
                        "LMatrix4f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix4f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_matrix4f(GeomVertexWriter *param0, LMatrix4f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_matrix4f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d61747269783466282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_matrix4f(LMatrix4f const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_matrix4f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_matrix4f(GeomVertexWriter *param0, LMatrix4f const *param1)"
                    ],
                    "fn": "set_matrix4f",
                    "indexed": "GeomVertexWriter$39$set_matrix4f",
                    "mangled": "_inCAAAAmYtQ",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "double data"
                    ],
                    "argt": [
                        "double"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "double"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data1d(GeomVertexWriter *param0, double param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data1d_v_pd",
                    "cni_args": "pd",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461316428706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data1d(double data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data1d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data1d(GeomVertexWriter *param0, double param1)"
                    ],
                    "fn": "set_data1d",
                    "indexed": "GeomVertexWriter$40$set_data1d",
                    "mangled": "_inCAAAAMHKv",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase2d const &data"
                    ],
                    "argt": [
                        "LVecBase2d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase2d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data2d(GeomVertexWriter *param0, LVecBase2d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data2d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613264282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data2d(LVecBase2d const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data2d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data2d(GeomVertexWriter *param0, LVecBase2d const *param1)"
                    ],
                    "fn": "set_data2d",
                    "indexed": "GeomVertexWriter$41$set_data2d",
                    "mangled": "_inCAAAABWJf",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "x",
                        "y"
                    ],
                    "args": [
                        "double x",
                        "double y"
                    ],
                    "argt": [
                        "double",
                        "double"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "double",
                        "double"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data2d(GeomVertexWriter *param0, double param1, double param2)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data2d_v_pdd",
                    "cni_args": "pdd",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461326428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data2d(double x, double y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data2d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data2d(GeomVertexWriter *param0, double param1, double param2)"
                    ],
                    "fn": "set_data2d",
                    "indexed": "GeomVertexWriter$42$set_data2d",
                    "mangled": "_inCAAAAzkV3",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase3d const &data"
                    ],
                    "argt": [
                        "LVecBase3d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase3d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data3d(GeomVertexWriter *param0, LVecBase3d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data3d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613364282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data3d(LVecBase3d const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data3d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data3d(GeomVertexWriter *param0, LVecBase3d const *param1)"
                    ],
                    "fn": "set_data3d",
                    "indexed": "GeomVertexWriter$43$set_data3d",
                    "mangled": "_inCAAAAeZK2",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "double x",
                        "double y",
                        "double z"
                    ],
                    "argt": [
                        "double",
                        "double",
                        "double"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "double",
                        "double",
                        "double"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data3d(GeomVertexWriter *param0, double param1, double param2, double param3)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data3d_v_pddd",
                    "cni_args": "pddd",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461336428706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data3d(double x, double y, double z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data3d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data3d(GeomVertexWriter *param0, double param1, double param2, double param3)"
                    ],
                    "fn": "set_data3d",
                    "indexed": "GeomVertexWriter$44$set_data3d",
                    "mangled": "_inCAAAAEWjv",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase4d const &data"
                    ],
                    "argt": [
                        "LVecBase4d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase4d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data4d(GeomVertexWriter *param0, LVecBase4d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data4d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613464282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data4d(LVecBase4d const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data4d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data4d(GeomVertexWriter *param0, LVecBase4d const *param1)"
                    ],
                    "fn": "set_data4d",
                    "indexed": "GeomVertexWriter$45$set_data4d",
                    "mangled": "_inCAAAA2IMN",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "x",
                        "y",
                        "z",
                        "w"
                    ],
                    "args": [
                        "double x",
                        "double y",
                        "double z",
                        "double w"
                    ],
                    "argt": [
                        "double",
                        "double",
                        "double",
                        "double"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "double",
                        "double",
                        "double",
                        "double"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data4d(GeomVertexWriter *param0, double param1, double param2, double param3, double param4)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data4d_v_pdddd",
                    "cni_args": "pdddd",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461346428706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data4d(double x, double y, double z, double w)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data4d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data4d(GeomVertexWriter *param0, double param1, double param2, double param3, double param4)"
                    ],
                    "fn": "set_data4d",
                    "indexed": "GeomVertexWriter$46$set_data4d",
                    "mangled": "_inCAAAAK68x",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix3d const &mat"
                    ],
                    "argt": [
                        "LMatrix3d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix3d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_matrix3d(GeomVertexWriter *param0, LMatrix3d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_matrix3d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d61747269783364282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_matrix3d(LMatrix3d const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_matrix3d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_matrix3d(GeomVertexWriter *param0, LMatrix3d const *param1)"
                    ],
                    "fn": "set_matrix3d",
                    "indexed": "GeomVertexWriter$47$set_matrix3d",
                    "mangled": "_inCAAAA5bUE",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4d const &mat"
                    ],
                    "argt": [
                        "LMatrix4d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix4d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_matrix4d(GeomVertexWriter *param0, LMatrix4d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_matrix4d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d61747269783464282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_matrix4d(LMatrix4d const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_matrix4d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_matrix4d(GeomVertexWriter *param0, LMatrix4d const *param1)"
                    ],
                    "fn": "set_matrix4d",
                    "indexed": "GeomVertexWriter$48$set_matrix4d",
                    "mangled": "_inCAAAAa9VQ",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "PN_stdfloat data"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data1(GeomVertexWriter *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data1_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613128706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data1(PN_stdfloat data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data1",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data1(GeomVertexWriter *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_data1",
                    "indexed": "GeomVertexWriter$49$set_data1",
                    "mangled": "_inCAAAAuByz",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase2 const &data"
                    ],
                    "argt": [
                        "LVecBase2 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase2 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data2(GeomVertexWriter *param0, LVecBase2 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data2_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6461746132282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data2(LVecBase2 const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data2",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data2(GeomVertexWriter *param0, LVecBase2 const *param1)"
                    ],
                    "fn": "set_data2",
                    "indexed": "GeomVertexWriter$50$set_data2",
                    "mangled": "_inCAAAA7u_2",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "x",
                        "y"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data2(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data2_v_pff",
                    "cni_args": "pff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613228706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data2(PN_stdfloat x, PN_stdfloat y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data2",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data2(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_data2",
                    "indexed": "GeomVertexWriter$51$set_data2",
                    "mangled": "_inCAAAA5dY1",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase3 const &data"
                    ],
                    "argt": [
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data3(GeomVertexWriter *param0, LVecBase3 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data3_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6461746133282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data3(LVecBase3 const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data3",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data3(GeomVertexWriter *param0, LVecBase3 const *param1)"
                    ],
                    "fn": "set_data3",
                    "indexed": "GeomVertexWriter$52$set_data3",
                    "mangled": "_inCAAAAFBnY",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data3(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data3_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613328706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data3(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data3",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data3(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_data3",
                    "indexed": "GeomVertexWriter$53$set_data3",
                    "mangled": "_inCAAAAMrMF",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase4 const &data"
                    ],
                    "argt": [
                        "LVecBase4 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase4 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data4(GeomVertexWriter *param0, LVecBase4 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data4_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6461746134282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data4(LVecBase4 const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data4",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data4(GeomVertexWriter *param0, LVecBase4 const *param1)"
                    ],
                    "fn": "set_data4",
                    "indexed": "GeomVertexWriter$54$set_data4",
                    "mangled": "_inCAAAAGRQ6",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "x",
                        "y",
                        "z",
                        "w"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z",
                        "PN_stdfloat w"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data4(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data4_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613428706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data4(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z, PN_stdfloat w)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data4",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data4(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_data4",
                    "indexed": "GeomVertexWriter$55$set_data4",
                    "mangled": "_inCAAAA_Tr4",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix3 const &mat"
                    ],
                    "argt": [
                        "LMatrix3 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix3 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_matrix3(GeomVertexWriter *param0, LMatrix3 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_matrix3_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d617472697833282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_matrix3(LMatrix3 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_matrix3",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_matrix3(GeomVertexWriter *param0, LMatrix3 const *param1)"
                    ],
                    "fn": "set_matrix3",
                    "indexed": "GeomVertexWriter$56$set_matrix3",
                    "mangled": "_inCAAAA80o0",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4 const &mat"
                    ],
                    "argt": [
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_matrix4(GeomVertexWriter *param0, LMatrix4 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_matrix4_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d617472697834282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_matrix4(LMatrix4 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_matrix4",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_matrix4(GeomVertexWriter *param0, LMatrix4 const *param1)"
                    ],
                    "fn": "set_matrix4",
                    "indexed": "GeomVertexWriter$57$set_matrix4",
                    "mangled": "_inCAAAAc_IU",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "int data"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data1i(GeomVertexWriter *param0, int param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data1i_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461316928706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data1i(int data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data1i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data1i(GeomVertexWriter *param0, int param1)"
                    ],
                    "fn": "set_data1i",
                    "indexed": "GeomVertexWriter$58$set_data1i",
                    "mangled": "_inCAAAAWrrr",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase2i const &data"
                    ],
                    "argt": [
                        "LVecBase2i const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase2i const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data2i(GeomVertexWriter *param0, LVecBase2i const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data2i_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613269282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data2i(LVecBase2i const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data2i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data2i(GeomVertexWriter *param0, LVecBase2i const *param1)"
                    ],
                    "fn": "set_data2i",
                    "indexed": "GeomVertexWriter$59$set_data2i",
                    "mangled": "_inCAAAALsiD",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "a",
                        "b"
                    ],
                    "args": [
                        "int a",
                        "int b"
                    ],
                    "argt": [
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data2i(GeomVertexWriter *param0, int param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data2i_v_pii",
                    "cni_args": "pii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461326928706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data2i(int a, int b)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data2i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data2i(GeomVertexWriter *param0, int param1, int param2)"
                    ],
                    "fn": "set_data2i",
                    "indexed": "GeomVertexWriter$60$set_data2i",
                    "mangled": "_inCAAAAsRPt",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase3i const &data"
                    ],
                    "argt": [
                        "LVecBase3i const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase3i const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data3i(GeomVertexWriter *param0, LVecBase3i const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data3i_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613369282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data3i(LVecBase3i const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data3i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data3i(GeomVertexWriter *param0, LVecBase3i const *param1)"
                    ],
                    "fn": "set_data3i",
                    "indexed": "GeomVertexWriter$61$set_data3i",
                    "mangled": "_inCAAAAy8ka",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "a",
                        "b",
                        "c"
                    ],
                    "args": [
                        "int a",
                        "int b",
                        "int c"
                    ],
                    "argt": [
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data3i(GeomVertexWriter *param0, int param1, int param2, int param3)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data3i_v_piii",
                    "cni_args": "piii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461336928706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data3i(int a, int b, int c)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data3i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data3i(GeomVertexWriter *param0, int param1, int param2, int param3)"
                    ],
                    "fn": "set_data3i",
                    "indexed": "GeomVertexWriter$62$set_data3i",
                    "mangled": "_inCAAAARmzc",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase4i const &data"
                    ],
                    "argt": [
                        "LVecBase4i const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase4i const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data4i(GeomVertexWriter *param0, LVecBase4i const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data4i_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f646174613469282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data4i(LVecBase4i const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data4i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data4i(GeomVertexWriter *param0, LVecBase4i const *param1)"
                    ],
                    "fn": "set_data4i",
                    "indexed": "GeomVertexWriter$63$set_data4i",
                    "mangled": "_inCAAAAZNlx",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "a",
                        "b",
                        "c",
                        "d"
                    ],
                    "args": [
                        "int a",
                        "int b",
                        "int c",
                        "int d"
                    ],
                    "argt": [
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$set_data4i(GeomVertexWriter *param0, int param1, int param2, int param3, int param4)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_set_data4i_v_piiii",
                    "cni_args": "piiii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64617461346928706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void GeomVertexWriter::set_data4i(int a, int b, int c, int d)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$set_data4i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$set_data4i(GeomVertexWriter *param0, int param1, int param2, int param3, int param4)"
                    ],
                    "fn": "set_data4i",
                    "indexed": "GeomVertexWriter$64$set_data4i",
                    "mangled": "_inCAAAAdVco",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "float data"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "float"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data1f(GeomVertexWriter *param0, float param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data1f_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461316628706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data1f(float data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data1f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data1f(GeomVertexWriter *param0, float param1)"
                    ],
                    "fn": "add_data1f",
                    "indexed": "GeomVertexWriter$65$add_data1f",
                    "mangled": "_inCAAAA5Qu1",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase2f const &data"
                    ],
                    "argt": [
                        "LVecBase2f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase2f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data2f(GeomVertexWriter *param0, LVecBase2f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data2f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613266282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data2f(LVecBase2f const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data2f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data2f(GeomVertexWriter *param0, LVecBase2f const *param1)"
                    ],
                    "fn": "add_data2f",
                    "indexed": "GeomVertexWriter$66$add_data2f",
                    "mangled": "_inCAAAAsnA_",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "x",
                        "y"
                    ],
                    "args": [
                        "float x",
                        "float y"
                    ],
                    "argt": [
                        "float",
                        "float"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "float",
                        "float"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data2f(GeomVertexWriter *param0, float param1, float param2)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data2f_v_pff",
                    "cni_args": "pff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461326628706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data2f(float x, float y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data2f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data2f(GeomVertexWriter *param0, float param1, float param2)"
                    ],
                    "fn": "add_data2f",
                    "indexed": "GeomVertexWriter$67$add_data2f",
                    "mangled": "_inCAAAAn5UL",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase3f const &data"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data3f(GeomVertexWriter *param0, LVecBase3f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data3f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613366282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data3f(LVecBase3f const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data3f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data3f(GeomVertexWriter *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "add_data3f",
                    "indexed": "GeomVertexWriter$68$add_data3f",
                    "mangled": "_inCAAAAEXCV",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "float x",
                        "float y",
                        "float z"
                    ],
                    "argt": [
                        "float",
                        "float",
                        "float"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "float",
                        "float",
                        "float"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data3f(GeomVertexWriter *param0, float param1, float param2, float param3)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data3f_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461336628706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data3f(float x, float y, float z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data3f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data3f(GeomVertexWriter *param0, float param1, float param2, float param3)"
                    ],
                    "fn": "add_data3f",
                    "indexed": "GeomVertexWriter$69$add_data3f",
                    "mangled": "_inCAAAA72es",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase4f const &data"
                    ],
                    "argt": [
                        "LVecBase4f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase4f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data4f(GeomVertexWriter *param0, LVecBase4f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data4f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613466282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data4f(LVecBase4f const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data4f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data4f(GeomVertexWriter *param0, LVecBase4f const *param1)"
                    ],
                    "fn": "add_data4f",
                    "indexed": "GeomVertexWriter$70$add_data4f",
                    "mangled": "_inCAAAAdGEs",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "x",
                        "y",
                        "z",
                        "w"
                    ],
                    "args": [
                        "float x",
                        "float y",
                        "float z",
                        "float w"
                    ],
                    "argt": [
                        "float",
                        "float",
                        "float",
                        "float"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "float",
                        "float",
                        "float",
                        "float"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data4f(GeomVertexWriter *param0, float param1, float param2, float param3, float param4)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data4f_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461346628706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data4f(float x, float y, float z, float w)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data4f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data4f(GeomVertexWriter *param0, float param1, float param2, float param3, float param4)"
                    ],
                    "fn": "add_data4f",
                    "indexed": "GeomVertexWriter$71$add_data4f",
                    "mangled": "_inCAAAANOgw",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix3f const &mat"
                    ],
                    "argt": [
                        "LMatrix3f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix3f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_matrix3f(GeomVertexWriter *param0, LMatrix3f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_matrix3f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6d61747269783366282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_matrix3f(LMatrix3f const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_matrix3f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_matrix3f(GeomVertexWriter *param0, LMatrix3f const *param1)"
                    ],
                    "fn": "add_matrix3f",
                    "indexed": "GeomVertexWriter$72$add_matrix3f",
                    "mangled": "_inCAAAAwk0h",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4f const &mat"
                    ],
                    "argt": [
                        "LMatrix4f const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix4f const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_matrix4f(GeomVertexWriter *param0, LMatrix4f const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_matrix4f_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6d61747269783466282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_matrix4f(LMatrix4f const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_matrix4f",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_matrix4f(GeomVertexWriter *param0, LMatrix4f const *param1)"
                    ],
                    "fn": "add_matrix4f",
                    "indexed": "GeomVertexWriter$73$add_matrix4f",
                    "mangled": "_inCAAAAjt1t",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "double data"
                    ],
                    "argt": [
                        "double"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "double"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data1d(GeomVertexWriter *param0, double param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data1d_v_pd",
                    "cni_args": "pd",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461316428706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data1d(double data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data1d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data1d(GeomVertexWriter *param0, double param1)"
                    ],
                    "fn": "add_data1d",
                    "indexed": "GeomVertexWriter$74$add_data1d",
                    "mangled": "_inCAAAACaRM",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase2d const &data"
                    ],
                    "argt": [
                        "LVecBase2d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase2d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data2d(GeomVertexWriter *param0, LVecBase2d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data2d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613264282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data2d(LVecBase2d const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data2d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data2d(GeomVertexWriter *param0, LVecBase2d const *param1)"
                    ],
                    "fn": "add_data2d",
                    "indexed": "GeomVertexWriter$75$add_data2d",
                    "mangled": "_inCAAAA8cQ8",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "x",
                        "y"
                    ],
                    "args": [
                        "double x",
                        "double y"
                    ],
                    "argt": [
                        "double",
                        "double"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "double",
                        "double"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data2d(GeomVertexWriter *param0, double param1, double param2)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data2d_v_pdd",
                    "cni_args": "pdd",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461326428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data2d(double x, double y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data2d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data2d(GeomVertexWriter *param0, double param1, double param2)"
                    ],
                    "fn": "add_data2d",
                    "indexed": "GeomVertexWriter$76$add_data2d",
                    "mangled": "_inCAAAAwNcU",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase3d const &data"
                    ],
                    "argt": [
                        "LVecBase3d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase3d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data3d(GeomVertexWriter *param0, LVecBase3d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data3d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613364282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data3d(LVecBase3d const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data3d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data3d(GeomVertexWriter *param0, LVecBase3d const *param1)"
                    ],
                    "fn": "add_data3d",
                    "indexed": "GeomVertexWriter$77$add_data3d",
                    "mangled": "_inCAAAAUsST",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "double x",
                        "double y",
                        "double z"
                    ],
                    "argt": [
                        "double",
                        "double",
                        "double"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "double",
                        "double",
                        "double"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data3d(GeomVertexWriter *param0, double param1, double param2, double param3)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data3d_v_pddd",
                    "cni_args": "pddd",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461336428706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data3d(double x, double y, double z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data3d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data3d(GeomVertexWriter *param0, double param1, double param2, double param3)"
                    ],
                    "fn": "add_data3d",
                    "indexed": "GeomVertexWriter$78$add_data3d",
                    "mangled": "_inCAAAAODqM",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase4d const &data"
                    ],
                    "argt": [
                        "LVecBase4d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase4d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data4d(GeomVertexWriter *param0, LVecBase4d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data4d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613464282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data4d(LVecBase4d const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data4d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data4d(GeomVertexWriter *param0, LVecBase4d const *param1)"
                    ],
                    "fn": "add_data4d",
                    "indexed": "GeomVertexWriter$79$add_data4d",
                    "mangled": "_inCAAAAt_Uq",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "x",
                        "y",
                        "z",
                        "w"
                    ],
                    "args": [
                        "double x",
                        "double y",
                        "double z",
                        "double w"
                    ],
                    "argt": [
                        "double",
                        "double",
                        "double",
                        "double"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "double",
                        "double",
                        "double",
                        "double"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data4d(GeomVertexWriter *param0, double param1, double param2, double param3, double param4)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data4d_v_pdddd",
                    "cni_args": "pdddd",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461346428706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data4d(double x, double y, double z, double w)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data4d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data4d(GeomVertexWriter *param0, double param1, double param2, double param3, double param4)"
                    ],
                    "fn": "add_data4d",
                    "indexed": "GeomVertexWriter$80$add_data4d",
                    "mangled": "_inCAAAAEFEP",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix3d const &mat"
                    ],
                    "argt": [
                        "LMatrix3d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix3d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_matrix3d(GeomVertexWriter *param0, LMatrix3d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_matrix3d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6d61747269783364282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_matrix3d(LMatrix3d const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_matrix3d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_matrix3d(GeomVertexWriter *param0, LMatrix3d const *param1)"
                    ],
                    "fn": "add_matrix3d",
                    "indexed": "GeomVertexWriter$81$add_matrix3d",
                    "mangled": "_inCAAAA8Obh",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4d const &mat"
                    ],
                    "argt": [
                        "LMatrix4d const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix4d const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_matrix4d(GeomVertexWriter *param0, LMatrix4d const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_matrix4d_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6d61747269783464282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_matrix4d(LMatrix4d const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_matrix4d",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_matrix4d(GeomVertexWriter *param0, LMatrix4d const *param1)"
                    ],
                    "fn": "add_matrix4d",
                    "indexed": "GeomVertexWriter$82$add_matrix4d",
                    "mangled": "_inCAAAAfAct",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "PN_stdfloat data"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data1(GeomVertexWriter *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data1_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613128706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data1(PN_stdfloat data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data1",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data1(GeomVertexWriter *param0, PN_stdfloat param1)"
                    ],
                    "fn": "add_data1",
                    "indexed": "GeomVertexWriter$83$add_data1",
                    "mangled": "_inCAAAAQ_6Q",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase2 const &data"
                    ],
                    "argt": [
                        "LVecBase2 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase2 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data2(GeomVertexWriter *param0, LVecBase2 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data2_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6461746132282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data2(LVecBase2 const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data2",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data2(GeomVertexWriter *param0, LVecBase2 const *param1)"
                    ],
                    "fn": "add_data2",
                    "indexed": "GeomVertexWriter$84$add_data2",
                    "mangled": "_inCAAAABkGU",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "x",
                        "y"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data2(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data2_v_pff",
                    "cni_args": "pff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613228706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data2(PN_stdfloat x, PN_stdfloat y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data2",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data2(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2)"
                    ],
                    "fn": "add_data2",
                    "indexed": "GeomVertexWriter$85$add_data2",
                    "mangled": "_inCAAAA_CfS",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase3 const &data"
                    ],
                    "argt": [
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data3(GeomVertexWriter *param0, LVecBase3 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data3_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6461746133282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data3(LVecBase3 const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data3",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data3(GeomVertexWriter *param0, LVecBase3 const *param1)"
                    ],
                    "fn": "add_data3",
                    "indexed": "GeomVertexWriter$86$add_data3",
                    "mangled": "_inCAAAACUu1",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data3(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data3_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613328706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data3(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data3",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data3(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "add_data3",
                    "indexed": "GeomVertexWriter$87$add_data3",
                    "mangled": "_inCAAAAKYVi",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase4 const &data"
                    ],
                    "argt": [
                        "LVecBase4 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase4 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data4(GeomVertexWriter *param0, LVecBase4 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data4_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6461746134282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data4(LVecBase4 const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data4",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data4(GeomVertexWriter *param0, LVecBase4 const *param1)"
                    ],
                    "fn": "add_data4",
                    "indexed": "GeomVertexWriter$88$add_data4",
                    "mangled": "_inCAAAAMEXX",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "x",
                        "y",
                        "z",
                        "w"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z",
                        "PN_stdfloat w"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data4(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data4_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613428706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data4(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z, PN_stdfloat w)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data4",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data4(GeomVertexWriter *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "add_data4",
                    "indexed": "GeomVertexWriter$89$add_data4",
                    "mangled": "_inCAAAABlzV",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix3 const &mat"
                    ],
                    "argt": [
                        "LMatrix3 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix3 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_matrix3(GeomVertexWriter *param0, LMatrix3 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_matrix3_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6d617472697833282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_matrix3(LMatrix3 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_matrix3",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_matrix3(GeomVertexWriter *param0, LMatrix3 const *param1)"
                    ],
                    "fn": "add_matrix3",
                    "indexed": "GeomVertexWriter$90$add_matrix3",
                    "mangled": "_inCAAAAipuR",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4 const &mat"
                    ],
                    "argt": [
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_matrix4(GeomVertexWriter *param0, LMatrix4 const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_matrix4_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6d617472697834282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_matrix4(LMatrix4 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_matrix4",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_matrix4(GeomVertexWriter *param0, LMatrix4 const *param1)"
                    ],
                    "fn": "add_matrix4",
                    "indexed": "GeomVertexWriter$91$add_matrix4",
                    "mangled": "_inCAAAADjOx",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "int data"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data1i(GeomVertexWriter *param0, int param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data1i_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461316928706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data1i(int data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data1i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data1i(GeomVertexWriter *param0, int param1)"
                    ],
                    "fn": "add_data1i",
                    "indexed": "GeomVertexWriter$92$add_data1i",
                    "mangled": "_inCAAAAMcyI",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase2i const &data"
                    ],
                    "argt": [
                        "LVecBase2i const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase2i const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data2i(GeomVertexWriter *param0, LVecBase2i const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data2i_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613269282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data2i(LVecBase2i const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data2i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data2i(GeomVertexWriter *param0, LVecBase2i const *param1)"
                    ],
                    "fn": "add_data2i",
                    "indexed": "GeomVertexWriter$93$add_data2i",
                    "mangled": "_inCAAAAQ5og",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "a",
                        "b"
                    ],
                    "args": [
                        "int a",
                        "int b"
                    ],
                    "argt": [
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data2i(GeomVertexWriter *param0, int param1, int param2)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data2i_v_pii",
                    "cni_args": "pii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461326928706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data2i(int a, int b)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data2i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data2i(GeomVertexWriter *param0, int param1, int param2)"
                    ],
                    "fn": "add_data2i",
                    "indexed": "GeomVertexWriter$94$add_data2i",
                    "mangled": "_inCAAAArwVK",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase3i const &data"
                    ],
                    "argt": [
                        "LVecBase3i const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase3i const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data3i(GeomVertexWriter *param0, LVecBase3i const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data3i_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613369282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data3i(LVecBase3i const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data3i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data3i(GeomVertexWriter *param0, LVecBase3i const *param1)"
                    ],
                    "fn": "add_data3i",
                    "indexed": "GeomVertexWriter$95$add_data3i",
                    "mangled": "_inCAAAA_pq3",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "a",
                        "b",
                        "c"
                    ],
                    "args": [
                        "int a",
                        "int b",
                        "int c"
                    ],
                    "argt": [
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data3i(GeomVertexWriter *param0, int param1, int param2, int param3)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data3i_v_piii",
                    "cni_args": "piii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461336928706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data3i(int a, int b, int c)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data3i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data3i(GeomVertexWriter *param0, int param1, int param2, int param3)"
                    ],
                    "fn": "add_data3i",
                    "indexed": "GeomVertexWriter$96$add_data3i",
                    "mangled": "_inCAAAAWt75",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "LVecBase4i const &data"
                    ],
                    "argt": [
                        "LVecBase4i const&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "LVecBase4i const *"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data4i(GeomVertexWriter *param0, LVecBase4i const *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data4i_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f646174613469282a706172616d31293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data4i(LVecBase4i const &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data4i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data4i(GeomVertexWriter *param0, LVecBase4i const *param1)"
                    ],
                    "fn": "add_data4i",
                    "indexed": "GeomVertexWriter$97$add_data4i",
                    "mangled": "_inCAAAAnasO",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "a",
                        "b",
                        "c",
                        "d"
                    ],
                    "args": [
                        "int a",
                        "int b",
                        "int c",
                        "int d"
                    ],
                    "argt": [
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "GeomVertexWriter *",
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "GeomVertexWriter$_$add_data4i(GeomVertexWriter *param0, int param1, int param2, int param3, int param4)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_add_data4i_v_piiii",
                    "cni_args": "piiii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f64617461346928706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void GeomVertexWriter::add_data4i(int a, int b, int c, int d)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$add_data4i",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$add_data4i(GeomVertexWriter *param0, int param1, int param2, int param3, int param4)"
                    ],
                    "fn": "add_data4i",
                    "indexed": "GeomVertexWriter$98$add_data4i",
                    "mangled": "_inCAAAAngjF",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "GeomVertexWriter const *",
                        "std::ostream *"
                    ],
                    "c_ref": "GeomVertexWriter$_$output(GeomVertexWriter const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "GeomVertexWriter",
                    "cni": "GeomVertexWriter_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "void GeomVertexWriter::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "GeomVertexWriter$_$output",
                    "extern": [
                        "void",
                        "GeomVertexWriter$_$output(GeomVertexWriter const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "GeomVertexWriter$99$output",
                    "mangled": "_inCAAAAHNFB",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "InternalName": {
            "bases": [
                "TypedWritableReferenceCount"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "InternalName$_$make(char const *param0)",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_make_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6d616b65287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::make(std::string const &name)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$make",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$make(char const *param0)"
                    ],
                    "fn": "make",
                    "indexed": "InternalName$1$make",
                    "mangled": "_inCAAAAMlqi",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 2,
                    "argn": [
                        "name",
                        "index"
                    ],
                    "args": [
                        "std::string const &name",
                        "int index"
                    ],
                    "argt": [
                        "std::string const&",
                        "int"
                    ],
                    "c_argv": [
                        "char const *",
                        "int"
                    ],
                    "c_ref": "InternalName$_$make(char const *param0, int param1)",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_make_p_si",
                    "cni_args": "si",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6d616b65287374643a3a737472696e6728706172616d30292c20706172616d3129293b",
                    "cpp_ref": "static PointerTo< InternalName > InternalName::make(std::string const &name, int index)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$make",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$make(char const *param0, int param1)"
                    ],
                    "fn": "make",
                    "indexed": "InternalName$2$make",
                    "mangled": "_inCAAAAJP_c",
                    "ot": "PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 1,
                    "argn": [
                        "basename"
                    ],
                    "args": [
                        "std::string const &basename"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "InternalName *",
                        "char const *"
                    ],
                    "c_ref": "InternalName$_$append(InternalName *param0, char const *param1)",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_append_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28282a706172616d30292e617070656e64287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "PointerTo< InternalName > InternalName::append(std::string const &basename)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$append",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$append(InternalName *param0, char const *param1)"
                    ],
                    "fn": "append",
                    "indexed": "InternalName$3$append",
                    "mangled": "_inCAAAA3rOD",
                    "ot": "PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "InternalName const *"
                    ],
                    "c_ref": "InternalName$_$get_parent(InternalName const *param0)",
                    "c_type": "InternalName *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_parent_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f706172656e7428293b",
                    "cpp_ref": "inline InternalName *InternalName::get_parent(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_parent",
                    "extern": [
                        "InternalName *",
                        "InternalName$_$get_parent(InternalName const *param0)"
                    ],
                    "fn": "get_parent",
                    "indexed": "InternalName$4$get_parent",
                    "mangled": "_inCAAAAxW48",
                    "ot": "inline InternalName*",
                    "rt": "InternalName"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "InternalName const *"
                    ],
                    "c_ref": "InternalName$_$get_name(InternalName const *param0)",
                    "c_type": "char const *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_name_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f6e616d6528293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string InternalName::get_name(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_name",
                    "extern": [
                        "char const *",
                        "InternalName$_$get_name(InternalName const *param0)"
                    ],
                    "fn": "get_name",
                    "indexed": "InternalName$5$get_name",
                    "mangled": "_inCAAAAKewZ",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sep"
                    ],
                    "args": [
                        "std::string const &sep"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "InternalName const *",
                        "char const *"
                    ],
                    "c_ref": "InternalName$_$join(InternalName const *param0, char const *param1)",
                    "c_type": "char const *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_join_s_ss",
                    "cni_args": "ss",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6a6f696e287374643a3a737472696e6728706172616d3129293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string InternalName::join(std::string const &sep) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$join",
                    "extern": [
                        "char const *",
                        "InternalName$_$join(InternalName const *param0, char const *param1)"
                    ],
                    "fn": "join",
                    "indexed": "InternalName$6$join",
                    "mangled": "_inCAAAAzwAG",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "InternalName const *"
                    ],
                    "c_ref": "InternalName$_$get_basename(InternalName const *param0)",
                    "c_type": "char const *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_basename_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f626173656e616d652829292e635f73747228293b",
                    "cpp_ref": "inline std::string const &InternalName::get_basename(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_basename",
                    "extern": [
                        "char const *",
                        "InternalName$_$get_basename(InternalName const *param0)"
                    ],
                    "fn": "get_basename",
                    "indexed": "InternalName$7$get_basename",
                    "mangled": "_inCAAAAlDZ2",
                    "ot": "inline std::string const&",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "basename"
                    ],
                    "args": [
                        "std::string const &basename"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "InternalName const *",
                        "char const *"
                    ],
                    "c_ref": "InternalName$_$find_ancestor(InternalName const *param0, char const *param1)",
                    "c_type": "int",
                    "cn": "InternalName",
                    "cni": "InternalName_C_find_ancestor_i_ss",
                    "cni_args": "ss",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f616e636573746f72287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "int InternalName::find_ancestor(std::string const &basename) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$find_ancestor",
                    "extern": [
                        "int",
                        "InternalName$_$find_ancestor(InternalName const *param0, char const *param1)"
                    ],
                    "fn": "find_ancestor",
                    "indexed": "InternalName$8$find_ancestor",
                    "mangled": "_inCAAAAqA3D",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "InternalName const *",
                        "int"
                    ],
                    "c_ref": "InternalName$_$get_ancestor(InternalName const *param0, int param1)",
                    "c_type": "InternalName const *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_ancestor_s_si",
                    "cni_args": "si",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f616e636573746f7228706172616d31293b",
                    "cpp_ref": "InternalName const *InternalName::get_ancestor(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_ancestor",
                    "extern": [
                        "InternalName const *",
                        "InternalName$_$get_ancestor(InternalName const *param0, int param1)"
                    ],
                    "fn": "get_ancestor",
                    "indexed": "InternalName$9$get_ancestor",
                    "mangled": "_inCAAAAymmN",
                    "ot": "InternalName const*",
                    "rt": ""
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "InternalName const *"
                    ],
                    "c_ref": "InternalName$_$get_top(InternalName const *param0)",
                    "c_type": "InternalName const *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_top_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f746f7028293b",
                    "cpp_ref": "InternalName const *InternalName::get_top(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_top",
                    "extern": [
                        "InternalName const *",
                        "InternalName$_$get_top(InternalName const *param0)"
                    ],
                    "fn": "get_top",
                    "indexed": "InternalName$10$get_top",
                    "mangled": "_inCAAAADhts",
                    "ot": "InternalName const*",
                    "rt": ""
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "InternalName const *",
                        "int"
                    ],
                    "c_ref": "InternalName$_$get_net_basename(InternalName const *param0, int param1)",
                    "c_type": "char const *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_net_basename_s_si",
                    "cni_args": "si",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f6e65745f626173656e616d6528706172616d31293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string InternalName::get_net_basename(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_net_basename",
                    "extern": [
                        "char const *",
                        "InternalName$_$get_net_basename(InternalName const *param0, int param1)"
                    ],
                    "fn": "get_net_basename",
                    "indexed": "InternalName$11$get_net_basename",
                    "mangled": "_inCAAAAi8VP",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "InternalName const *",
                        "std::ostream *"
                    ],
                    "c_ref": "InternalName$_$output(InternalName const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "InternalName",
                    "cni": "InternalName_C_output_v_sp",
                    "cni_args": "sp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "void InternalName::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$output",
                    "extern": [
                        "void",
                        "InternalName$_$output(InternalName const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "InternalName$12$output",
                    "mangled": "_inCAAAAygU7",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_root()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_root_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f726f6f742829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_root(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_root",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_root()"
                    ],
                    "fn": "get_root",
                    "indexed": "InternalName$13$get_root",
                    "mangled": "_inCAAAAOVm7",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_error()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_error_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f6572726f722829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_error(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_error",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_error()"
                    ],
                    "fn": "get_error",
                    "indexed": "InternalName$14$get_error",
                    "mangled": "_inCAAAA6f4T",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_vertex()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_vertex_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f7665727465782829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_vertex(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_vertex",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_vertex()"
                    ],
                    "fn": "get_vertex",
                    "indexed": "InternalName$15$get_vertex",
                    "mangled": "_inCAAAAa072",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_normal()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_normal_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f6e6f726d616c2829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_normal(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_normal",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_normal()"
                    ],
                    "fn": "get_normal",
                    "indexed": "InternalName$16$get_normal",
                    "mangled": "_inCAAAA2d7w",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_tangent()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_tangent_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f74616e67656e742829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_tangent(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_tangent",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_tangent()"
                    ],
                    "fn": "get_tangent",
                    "indexed": "InternalName$17$get_tangent",
                    "mangled": "_inCAAAABCM_",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "InternalName$_$get_tangent_name(char const *param0)",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_tangent_name_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f74616e67656e745f6e616d65287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_tangent_name(std::string const &name)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_tangent_name",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_tangent_name(char const *param0)"
                    ],
                    "fn": "get_tangent_name",
                    "indexed": "InternalName$18$get_tangent_name",
                    "mangled": "_inCAAAAHp_A",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_binormal()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_binormal_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f62696e6f726d616c2829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_binormal(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_binormal",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_binormal()"
                    ],
                    "fn": "get_binormal",
                    "indexed": "InternalName$19$get_binormal",
                    "mangled": "_inCAAAAgGjH",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "InternalName$_$get_binormal_name(char const *param0)",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_binormal_name_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f62696e6f726d616c5f6e616d65287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_binormal_name(std::string const &name)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_binormal_name",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_binormal_name(char const *param0)"
                    ],
                    "fn": "get_binormal_name",
                    "indexed": "InternalName$20$get_binormal_name",
                    "mangled": "_inCAAAA8aPj",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_texcoord()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_texcoord_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f746578636f6f72642829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_texcoord(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_texcoord",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_texcoord()"
                    ],
                    "fn": "get_texcoord",
                    "indexed": "InternalName$21$get_texcoord",
                    "mangled": "_inCAAAAaaiB",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "InternalName$_$get_texcoord_name(char const *param0)",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_texcoord_name_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f746578636f6f72645f6e616d65287374643a3a737472696e6728706172616d302929293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_texcoord_name(std::string const &name)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_texcoord_name",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_texcoord_name(char const *param0)"
                    ],
                    "fn": "get_texcoord_name",
                    "indexed": "InternalName$22$get_texcoord_name",
                    "mangled": "_inCAAAAGWNd",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_color()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_color_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f636f6c6f722829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_color(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_color",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_color()"
                    ],
                    "fn": "get_color",
                    "indexed": "InternalName$23$get_color",
                    "mangled": "_inCAAAAkPBk",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_rotate()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_rotate_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f726f746174652829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_rotate(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_rotate",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_rotate()"
                    ],
                    "fn": "get_rotate",
                    "indexed": "InternalName$24$get_rotate",
                    "mangled": "_inCAAAAEmsm",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_size()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_size_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f73697a652829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_size(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_size",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_size()"
                    ],
                    "fn": "get_size",
                    "indexed": "InternalName$25$get_size",
                    "mangled": "_inCAAAA1bcz",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_aspect_ratio()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_aspect_ratio_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f6173706563745f726174696f2829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_aspect_ratio(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_aspect_ratio",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_aspect_ratio()"
                    ],
                    "fn": "get_aspect_ratio",
                    "indexed": "InternalName$26$get_aspect_ratio",
                    "mangled": "_inCAAAAoQxT",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_transform_blend()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_transform_blend_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f7472616e73666f726d5f626c656e642829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_transform_blend(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_transform_blend",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_transform_blend()"
                    ],
                    "fn": "get_transform_blend",
                    "indexed": "InternalName$27$get_transform_blend",
                    "mangled": "_inCAAAAOgr2",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_transform_weight()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_transform_weight_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f7472616e73666f726d5f7765696768742829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_transform_weight(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_transform_weight",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_transform_weight()"
                    ],
                    "fn": "get_transform_weight",
                    "indexed": "InternalName$28$get_transform_weight",
                    "mangled": "_inCAAAAZaFB",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_transform_index()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_transform_index_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f7472616e73666f726d5f696e6465782829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_transform_index(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_transform_index",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_transform_index()"
                    ],
                    "fn": "get_transform_index",
                    "indexed": "InternalName$29$get_transform_index",
                    "mangled": "_inCAAAAPrB9",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 2,
                    "argn": [
                        "column",
                        "slider"
                    ],
                    "args": [
                        "InternalName *column",
                        "std::string const &slider"
                    ],
                    "argt": [
                        "InternalName*",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "InternalName *",
                        "char const *"
                    ],
                    "c_ref": "InternalName$_$get_morph(InternalName *param0, char const *param1)",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_morph_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f6d6f72706828706172616d302c207374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_morph(InternalName *column, std::string const &slider)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_morph",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_morph(InternalName *param0, char const *param1)"
                    ],
                    "fn": "get_morph",
                    "indexed": "InternalName$30$get_morph",
                    "mangled": "_inCAAAAFeUd",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_index()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_index_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f696e6465782829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_index(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_index",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_index()"
                    ],
                    "fn": "get_index",
                    "indexed": "InternalName$31$get_index",
                    "mangled": "_inCAAAATtkc",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_world()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_world_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f776f726c642829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_world(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_world",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_world()"
                    ],
                    "fn": "get_world",
                    "indexed": "InternalName$32$get_world",
                    "mangled": "_inCAAAAr1c_",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_camera()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_camera_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f63616d6572612829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_camera(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_camera",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_camera()"
                    ],
                    "fn": "get_camera",
                    "indexed": "InternalName$33$get_camera",
                    "mangled": "_inCAAAAJLm5",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_model()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_model_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f6d6f64656c2829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_model(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_model",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_model()"
                    ],
                    "fn": "get_model",
                    "indexed": "InternalName$34$get_model",
                    "mangled": "_inCAAAASAUz",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_view()",
                    "c_type": "PointerTo< InternalName > *",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_view_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20496e7465726e616c4e616d65203e28496e7465726e616c4e616d653a3a6765745f766965772829293b",
                    "cpp_ref": "static inline PointerTo< InternalName > InternalName::get_view(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_view",
                    "extern": [
                        "PointerTo< InternalName > *",
                        "InternalName$_$get_view()"
                    ],
                    "fn": "get_view",
                    "indexed": "InternalName$35$get_view",
                    "mangled": "_inCAAAAokyx",
                    "ot": "inline PointerTo< InternalName >",
                    "rt": ">"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$register_with_read_factory()",
                    "c_type": "void",
                    "cn": "InternalName",
                    "cni": "InternalName_C_register_with_read_factory_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "20202020496e7465726e616c4e616d653a3a72656769737465725f776974685f726561645f666163746f727928293b",
                    "cpp_ref": "static void InternalName::register_with_read_factory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$register_with_read_factory",
                    "extern": [
                        "void",
                        "InternalName$_$register_with_read_factory()"
                    ],
                    "fn": "register_with_read_factory",
                    "indexed": "InternalName$36$register_with_read_factory",
                    "mangled": "_inCAAAAjlgd",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "me"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &me"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "InternalName *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "InternalName$_$write_datagram(InternalName *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "InternalName",
                    "cni": "InternalName_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void InternalName::write_datagram(BamWriter *manager, Datagram &me)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$write_datagram",
                    "extern": [
                        "void",
                        "InternalName$_$write_datagram(InternalName *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "InternalName$37$write_datagram",
                    "mangled": "_inCAAAAV26P",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "manager"
                    ],
                    "args": [
                        "BamReader *manager"
                    ],
                    "argt": [
                        "BamReader*"
                    ],
                    "c_argv": [
                        "InternalName *",
                        "BamReader *"
                    ],
                    "c_ref": "InternalName$_$finalize(InternalName *param0, BamReader *param1)",
                    "c_type": "void",
                    "cn": "InternalName",
                    "cni": "InternalName_C_finalize_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e66696e616c697a6528706172616d31293b",
                    "cpp_ref": "virtual void InternalName::finalize(BamReader *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$finalize",
                    "extern": [
                        "void",
                        "InternalName$_$finalize(InternalName *param0, BamReader *param1)"
                    ],
                    "fn": "finalize",
                    "indexed": "InternalName$38$finalize",
                    "mangled": "_inCAAAAmP2E",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$get_class_type()",
                    "c_type": "int",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028496e7465726e616c4e616d653a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle InternalName::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_class_type",
                    "extern": [
                        "int",
                        "InternalName$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "InternalName$39$get_class_type",
                    "mangled": "_inCAAAAAZei",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "InternalName$_$init_type()",
                    "c_type": "void",
                    "cn": "InternalName",
                    "cni": "InternalName_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "20202020496e7465726e616c4e616d653a3a696e69745f7479706528293b",
                    "cpp_ref": "static void InternalName::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "InternalName$_$init_type",
                    "extern": [
                        "void",
                        "InternalName$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "InternalName$40$init_type",
                    "mangled": "_inCAAAAlJaU",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "InternalName const *"
                    ],
                    "c_ref": "InternalName$_$get_type(InternalName const *param0)",
                    "c_type": "int",
                    "cn": "InternalName",
                    "cni": "InternalName_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle InternalName::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$get_type",
                    "extern": [
                        "int",
                        "InternalName$_$get_type(InternalName const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "InternalName$41$get_type",
                    "mangled": "_inCAAAAQn6E",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "InternalName *"
                    ],
                    "c_ref": "InternalName$_$force_init_type(InternalName *param0)",
                    "c_type": "int",
                    "cn": "InternalName",
                    "cni": "InternalName_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle InternalName::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "InternalName$_$force_init_type",
                    "extern": [
                        "int",
                        "InternalName$_$force_init_type(InternalName *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "InternalName$42$force_init_type",
                    "mangled": "_inCAAAAENPw",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "LVecBase3f": {
            "bases": [],
            "enums": {
                "": [
                    [
                        "is_int",
                        0
                    ],
                    [
                        "num_components",
                        3
                    ]
                ]
            },
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LVecBase3f$_$LVecBase3f()",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365336628293b",
                    "cpp_ref": "inline LVecBase3f::LVecBase3f(void) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "LVecBase3f$_$LVecBase3f",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$LVecBase3f()"
                    ],
                    "fn": "LVecBase3f",
                    "indexed": "LVecBase3f$1$LVecBase3f",
                    "mangled": "_inCAAAA9GM2",
                    "ot": "inline",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 2,
                    "argn": [
                        "copy",
                        "z"
                    ],
                    "args": [
                        "LVecBase2f const &copy",
                        "float z"
                    ],
                    "argt": [
                        "LVecBase2f const&",
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase2f const *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$LVecBase3f(LVecBase2f const *param0, float param1)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_ctor_p_pf",
                    "cni_args": "pf",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653366282a706172616d302c20706172616d31293b",
                    "cpp_ref": "inline LVecBase3f::LVecBase3f(LVecBase2f const &copy, float z)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "LVecBase3f$_$LVecBase3f",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$LVecBase3f(LVecBase2f const *param0, float param1)"
                    ],
                    "fn": "LVecBase3f",
                    "indexed": "LVecBase3f$2$LVecBase3f",
                    "mangled": "_inCAAAA5NlT",
                    "ot": "inline",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 1,
                    "argn": [
                        "arg0"
                    ],
                    "args": [
                        "LVecBase3f const &"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$LVecBase3f(LVecBase3f const *param0)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653366282a706172616d30293b",
                    "cpp_ref": "inline LVecBase3f::LVecBase3f(LVecBase3f const &) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "LVecBase3f$_$LVecBase3f",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$LVecBase3f(LVecBase3f const *param0)"
                    ],
                    "fn": "LVecBase3f",
                    "indexed": "LVecBase3f$3$LVecBase3f",
                    "mangled": "_inCAAAARRmU",
                    "ot": "inline",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 1,
                    "argn": [
                        "v"
                    ],
                    "args": [
                        "LVecBase3f::EVector3 const &v"
                    ],
                    "argt": [
                        "LVecBase3f::EVector3 const&"
                    ],
                    "c_argv": [
                        "LVecBase3f::EVector3 const *"
                    ],
                    "c_ref": "LVecBase3f$_$LVecBase3f(LVecBase3f::EVector3 const *param0)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_ctor_p_p_1_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653366282a706172616d30293b",
                    "cpp_ref": "inline LVecBase3f::LVecBase3f(LVecBase3f::EVector3 const &v)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "LVecBase3f$_$LVecBase3f",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$LVecBase3f(LVecBase3f::EVector3 const *param0)"
                    ],
                    "fn": "LVecBase3f",
                    "indexed": "LVecBase3f$4$LVecBase3f",
                    "mangled": "_inCAAAAEwwu",
                    "ot": "inline",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 1,
                    "argn": [
                        "fill_value"
                    ],
                    "args": [
                        "float fill_value"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$LVecBase3f(float param0)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_ctor_p_f",
                    "cni_args": "f",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365336628706172616d30293b",
                    "cpp_ref": "inline LVecBase3f::LVecBase3f(float fill_value)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "LVecBase3f$_$LVecBase3f",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$LVecBase3f(float param0)"
                    ],
                    "fn": "LVecBase3f",
                    "indexed": "LVecBase3f$5$LVecBase3f",
                    "mangled": "_inCAAAABPuZ",
                    "ot": "inline",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "float x",
                        "float y",
                        "float z"
                    ],
                    "argt": [
                        "float",
                        "float",
                        "float"
                    ],
                    "c_argv": [
                        "float",
                        "float",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$LVecBase3f(float param0, float param1, float param2)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_ctor_p_fff",
                    "cni_args": "fff",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365336628706172616d302c20706172616d312c20706172616d32293b",
                    "cpp_ref": "inline LVecBase3f::LVecBase3f(float x, float y, float z)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "LVecBase3f$_$LVecBase3f",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$LVecBase3f(float param0, float param1, float param2)"
                    ],
                    "fn": "LVecBase3f",
                    "indexed": "LVecBase3f$6$LVecBase3f",
                    "mangled": "_inCAAAAnj6v",
                    "ot": "inline",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LVecBase3f$_$zero()",
                    "c_type": "LVecBase3f const *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_zero_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2026284c5665634261736533663a3a7a65726f2829293b",
                    "cpp_ref": "static inline LVecBase3f const &LVecBase3f::zero(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$zero",
                    "extern": [
                        "LVecBase3f const *",
                        "LVecBase3f$_$zero()"
                    ],
                    "fn": "zero",
                    "indexed": "LVecBase3f$7$zero",
                    "mangled": "_inCAAAAKGfx",
                    "ot": "inline LVecBase3f const&",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LVecBase3f$_$unit_x()",
                    "c_type": "LVecBase3f const *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_unit_x_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2026284c5665634261736533663a3a756e69745f782829293b",
                    "cpp_ref": "static inline LVecBase3f const &LVecBase3f::unit_x(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$unit_x",
                    "extern": [
                        "LVecBase3f const *",
                        "LVecBase3f$_$unit_x()"
                    ],
                    "fn": "unit_x",
                    "indexed": "LVecBase3f$8$unit_x",
                    "mangled": "_inCAAAAmCVV",
                    "ot": "inline LVecBase3f const&",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LVecBase3f$_$unit_y()",
                    "c_type": "LVecBase3f const *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_unit_y_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2026284c5665634261736533663a3a756e69745f792829293b",
                    "cpp_ref": "static inline LVecBase3f const &LVecBase3f::unit_y(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$unit_y",
                    "extern": [
                        "LVecBase3f const *",
                        "LVecBase3f$_$unit_y()"
                    ],
                    "fn": "unit_y",
                    "indexed": "LVecBase3f$9$unit_y",
                    "mangled": "_inCAAAAgCjx",
                    "ot": "inline LVecBase3f const&",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LVecBase3f$_$unit_z()",
                    "c_type": "LVecBase3f const *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_unit_z_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2026284c5665634261736533663a3a756e69745f7a2829293b",
                    "cpp_ref": "static inline LVecBase3f const &LVecBase3f::unit_z(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$unit_z",
                    "extern": [
                        "LVecBase3f const *",
                        "LVecBase3f$_$unit_z()"
                    ],
                    "fn": "unit_z",
                    "indexed": "LVecBase3f$10$unit_z",
                    "mangled": "_inCAAAAjCxN",
                    "ot": "inline LVecBase3f const&",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LVecBase3f$_$size()",
                    "c_type": "int",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_size_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e204c5665634261736533663a3a73697a6528293b",
                    "cpp_ref": "static constexpr int LVecBase3f::size(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$size",
                    "extern": [
                        "int",
                        "LVecBase3f$_$size()"
                    ],
                    "fn": "size",
                    "indexed": "LVecBase3f$11$size",
                    "mangled": "_inCAAAAEZPb",
                    "ot": "constexpr int",
                    "rt": "expr int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$is_nan(LVecBase3f const *param0)",
                    "c_type": "bool",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_is_nan_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f6e616e28293b",
                    "cpp_ref": "inline bool LVecBase3f::is_nan(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$is_nan",
                    "extern": [
                        "bool",
                        "LVecBase3f$_$is_nan(LVecBase3f const *param0)"
                    ],
                    "fn": "is_nan",
                    "indexed": "LVecBase3f$12$is_nan",
                    "mangled": "_inCAAAAd5Gi",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "int i"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "int"
                    ],
                    "c_ref": "LVecBase3f$_$get_cell(LVecBase3f const *param0, int param1)",
                    "c_type": "float",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_cell_f_pi",
                    "cni_args": "pi",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f63656c6c28706172616d31293b",
                    "cpp_ref": "inline float LVecBase3f::get_cell(int i) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_cell",
                    "extern": [
                        "float",
                        "LVecBase3f$_$get_cell(LVecBase3f const *param0, int param1)"
                    ],
                    "fn": "get_cell",
                    "indexed": "LVecBase3f$13$get_cell",
                    "mangled": "_inCAAAAO_fH",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_x(LVecBase3f const *param0)",
                    "c_type": "float",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_x_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7828293b",
                    "cpp_ref": "inline float LVecBase3f::get_x(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_x",
                    "extern": [
                        "float",
                        "LVecBase3f$_$get_x(LVecBase3f const *param0)"
                    ],
                    "fn": "get_x",
                    "indexed": "LVecBase3f$14$get_x",
                    "mangled": "_inCAAAAdY_y",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_y(LVecBase3f const *param0)",
                    "c_type": "float",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_y_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7928293b",
                    "cpp_ref": "inline float LVecBase3f::get_y(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_y",
                    "extern": [
                        "float",
                        "LVecBase3f$_$get_y(LVecBase3f const *param0)"
                    ],
                    "fn": "get_y",
                    "indexed": "LVecBase3f$15$get_y",
                    "mangled": "_inCAAAAd843",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_z(LVecBase3f const *param0)",
                    "c_type": "float",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_z_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7a28293b",
                    "cpp_ref": "inline float LVecBase3f::get_z(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_z",
                    "extern": [
                        "float",
                        "LVecBase3f$_$get_z(LVecBase3f const *param0)"
                    ],
                    "fn": "get_z",
                    "indexed": "LVecBase3f$16$get_z",
                    "mangled": "_inCAAAAdQw8",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 2,
                    "argn": [
                        "i",
                        "value"
                    ],
                    "args": [
                        "int i",
                        "float value"
                    ],
                    "argt": [
                        "int",
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "int",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$set_cell(LVecBase3f *param0, int param1, float param2)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_set_cell_v_pif",
                    "cni_args": "pif",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f63656c6c28706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void LVecBase3f::set_cell(int i, float value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$set_cell",
                    "extern": [
                        "void",
                        "LVecBase3f$_$set_cell(LVecBase3f *param0, int param1, float param2)"
                    ],
                    "fn": "set_cell",
                    "indexed": "LVecBase3f$17$set_cell",
                    "mangled": "_inCAAAAUQX1",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "float value"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$set_x(LVecBase3f *param0, float param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_set_x_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7828706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::set_x(float value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$set_x",
                    "extern": [
                        "void",
                        "LVecBase3f$_$set_x(LVecBase3f *param0, float param1)"
                    ],
                    "fn": "set_x",
                    "indexed": "LVecBase3f$18$set_x",
                    "mangled": "_inCAAAAcuZH",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "float value"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$set_y(LVecBase3f *param0, float param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_set_y_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7928706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::set_y(float value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$set_y",
                    "extern": [
                        "void",
                        "LVecBase3f$_$set_y(LVecBase3f *param0, float param1)"
                    ],
                    "fn": "set_y",
                    "indexed": "LVecBase3f$19$set_y",
                    "mangled": "_inCAAAAcKSM",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "float value"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$set_z(LVecBase3f *param0, float param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_set_z_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7a28706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::set_z(float value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$set_z",
                    "extern": [
                        "void",
                        "LVecBase3f$_$set_z(LVecBase3f *param0, float param1)"
                    ],
                    "fn": "set_z",
                    "indexed": "LVecBase3f$20$set_z",
                    "mangled": "_inCAAAAcWKR",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_xy(LVecBase3f const *param0)",
                    "c_type": "LVecBase2f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_xy_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365326628282a706172616d30292e6765745f78792829293b",
                    "cpp_ref": "inline LVecBase2f LVecBase3f::get_xy(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_xy",
                    "extern": [
                        "LVecBase2f *",
                        "LVecBase3f$_$get_xy(LVecBase3f const *param0)"
                    ],
                    "fn": "get_xy",
                    "indexed": "LVecBase3f$21$get_xy",
                    "mangled": "_inCAAAAWJYp",
                    "ot": "inline LVecBase2f",
                    "rt": "LVecBase2f"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_xz(LVecBase3f const *param0)",
                    "c_type": "LVecBase2f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_xz_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365326628282a706172616d30292e6765745f787a2829293b",
                    "cpp_ref": "inline LVecBase2f LVecBase3f::get_xz(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_xz",
                    "extern": [
                        "LVecBase2f *",
                        "LVecBase3f$_$get_xz(LVecBase3f const *param0)"
                    ],
                    "fn": "get_xz",
                    "indexed": "LVecBase3f$22$get_xz",
                    "mangled": "_inCAAAAbJmF",
                    "ot": "inline LVecBase2f",
                    "rt": "LVecBase2f"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_yz(LVecBase3f const *param0)",
                    "c_type": "LVecBase2f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_yz_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365326628282a706172616d30292e6765745f797a2829293b",
                    "cpp_ref": "inline LVecBase2f LVecBase3f::get_yz(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_yz",
                    "extern": [
                        "LVecBase2f *",
                        "LVecBase3f$_$get_yz(LVecBase3f const *param0)"
                    ],
                    "fn": "get_yz",
                    "indexed": "LVecBase3f$23$get_yz",
                    "mangled": "_inCAAAAbleK",
                    "ot": "inline LVecBase2f",
                    "rt": "LVecBase2f"
                },
                {
                    "argc": 2,
                    "argn": [
                        "i",
                        "value"
                    ],
                    "args": [
                        "int i",
                        "float value"
                    ],
                    "argt": [
                        "int",
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "int",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$add_to_cell(LVecBase3f *param0, int param1, float param2)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_add_to_cell_v_pif",
                    "cni_args": "pif",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f746f5f63656c6c28706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void LVecBase3f::add_to_cell(int i, float value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$add_to_cell",
                    "extern": [
                        "void",
                        "LVecBase3f$_$add_to_cell(LVecBase3f *param0, int param1, float param2)"
                    ],
                    "fn": "add_to_cell",
                    "indexed": "LVecBase3f$24$add_to_cell",
                    "mangled": "_inCAAAAHyX0",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "float value"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$add_x(LVecBase3f *param0, float param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_add_x_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f7828706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::add_x(float value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$add_x",
                    "extern": [
                        "void",
                        "LVecBase3f$_$add_x(LVecBase3f *param0, float param1)"
                    ],
                    "fn": "add_x",
                    "indexed": "LVecBase3f$25$add_x",
                    "mangled": "_inCAAAA1m2F",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "float value"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$add_y(LVecBase3f *param0, float param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_add_y_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f7928706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::add_y(float value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$add_y",
                    "extern": [
                        "void",
                        "LVecBase3f$_$add_y(LVecBase3f *param0, float param1)"
                    ],
                    "fn": "add_y",
                    "indexed": "LVecBase3f$26$add_y",
                    "mangled": "_inCAAAA1CvK",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "value"
                    ],
                    "args": [
                        "float value"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$add_z(LVecBase3f *param0, float param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_add_z_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f7a28706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::add_z(float value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$add_z",
                    "extern": [
                        "void",
                        "LVecBase3f$_$add_z(LVecBase3f *param0, float param1)"
                    ],
                    "fn": "add_z",
                    "indexed": "LVecBase3f$27$add_z",
                    "mangled": "_inCAAAA1unP",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_data(LVecBase3f const *param0)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_data_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6765745f6461746128293b",
                    "cpp_ref": "inline float const *LVecBase3f::get_data(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_data",
                    "extern": [
                        "void",
                        "LVecBase3f$_$get_data(LVecBase3f const *param0)"
                    ],
                    "fn": "get_data",
                    "indexed": "LVecBase3f$28$get_data",
                    "mangled": "_inCAAAAjRCm",
                    "ot": "inline float const*",
                    "rt": "float"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LVecBase3f$_$get_num_components()",
                    "c_type": "int",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_num_components_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e204c5665634261736533663a3a6765745f6e756d5f636f6d706f6e656e747328293b",
                    "cpp_ref": "static constexpr int LVecBase3f::get_num_components(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_num_components",
                    "extern": [
                        "int",
                        "LVecBase3f$_$get_num_components()"
                    ],
                    "fn": "get_num_components",
                    "indexed": "LVecBase3f$29$get_num_components",
                    "mangled": "_inCAAAAx5U3",
                    "ot": "constexpr int",
                    "rt": "expr int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f *"
                    ],
                    "c_ref": "LVecBase3f$_$begin(LVecBase3f *param0)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_begin_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e626567696e28293b",
                    "cpp_ref": "inline LVecBase3f::iterator LVecBase3f::begin(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$begin",
                    "extern": [
                        "void",
                        "LVecBase3f$_$begin(LVecBase3f *param0)"
                    ],
                    "fn": "begin",
                    "indexed": "LVecBase3f$30$begin",
                    "mangled": "_inCAAAAuoam",
                    "ot": "inline LVecBase3f::iterator",
                    "rt": "LVecBase3f::iterator"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$begin(LVecBase3f const *param0)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_begin_v_p_1_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e626567696e28293b",
                    "cpp_ref": "inline LVecBase3f::const_iterator LVecBase3f::begin(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$begin",
                    "extern": [
                        "void",
                        "LVecBase3f$_$begin(LVecBase3f const *param0)"
                    ],
                    "fn": "begin",
                    "indexed": "LVecBase3f$31$begin",
                    "mangled": "_inCAAAApFFN",
                    "ot": "inline LVecBase3f::const_iterator",
                    "rt": "LVecBase3f::_iterator"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f *"
                    ],
                    "c_ref": "LVecBase3f$_$end(LVecBase3f *param0)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_end_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e656e6428293b",
                    "cpp_ref": "inline LVecBase3f::iterator LVecBase3f::end(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$end",
                    "extern": [
                        "void",
                        "LVecBase3f$_$end(LVecBase3f *param0)"
                    ],
                    "fn": "end",
                    "indexed": "LVecBase3f$32$end",
                    "mangled": "_inCAAAADXu9",
                    "ot": "inline LVecBase3f::iterator",
                    "rt": "LVecBase3f::iterator"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$end(LVecBase3f const *param0)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_end_v_p_1_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e656e6428293b",
                    "cpp_ref": "inline LVecBase3f::const_iterator LVecBase3f::end(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$end",
                    "extern": [
                        "void",
                        "LVecBase3f$_$end(LVecBase3f const *param0)"
                    ],
                    "fn": "end",
                    "indexed": "LVecBase3f$33$end",
                    "mangled": "_inCAAAAaC7x",
                    "ot": "inline LVecBase3f::const_iterator",
                    "rt": "LVecBase3f::_iterator"
                },
                {
                    "argc": 1,
                    "argn": [
                        "fill_value"
                    ],
                    "args": [
                        "float fill_value"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$fill(LVecBase3f *param0, float param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_fill_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e66696c6c28706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::fill(float fill_value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$fill",
                    "extern": [
                        "void",
                        "LVecBase3f$_$fill(LVecBase3f *param0, float param1)"
                    ],
                    "fn": "fill",
                    "indexed": "LVecBase3f$34$fill",
                    "mangled": "_inCAAAAq1Xn",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "float x",
                        "float y",
                        "float z"
                    ],
                    "argt": [
                        "float",
                        "float",
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "float",
                        "float",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$set(LVecBase3f *param0, float param1, float param2, float param3)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_set_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73657428706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void LVecBase3f::set(float x, float y, float z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$set",
                    "extern": [
                        "void",
                        "LVecBase3f$_$set(LVecBase3f *param0, float param1, float param2, float param3)"
                    ],
                    "fn": "set",
                    "indexed": "LVecBase3f$35$set",
                    "mangled": "_inCAAAAOavy",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "LVecBase3f const &other"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$dot(LVecBase3f const *param0, LVecBase3f const *param1)",
                    "c_type": "float",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_dot_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e646f74282a706172616d31293b",
                    "cpp_ref": "inline float LVecBase3f::dot(LVecBase3f const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$dot",
                    "extern": [
                        "float",
                        "LVecBase3f$_$dot(LVecBase3f const *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "dot",
                    "indexed": "LVecBase3f$36$dot",
                    "mangled": "_inCAAAAaDIV",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$length_squared(LVecBase3f const *param0)",
                    "c_type": "float",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_length_squared_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6c656e6774685f7371756172656428293b",
                    "cpp_ref": "inline float LVecBase3f::length_squared(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$length_squared",
                    "extern": [
                        "float",
                        "LVecBase3f$_$length_squared(LVecBase3f const *param0)"
                    ],
                    "fn": "length_squared",
                    "indexed": "LVecBase3f$37$length_squared",
                    "mangled": "_inCAAAAlUs9",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$length(LVecBase3f const *param0)",
                    "c_type": "float",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_length_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6c656e67746828293b",
                    "cpp_ref": "inline float LVecBase3f::length(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$length",
                    "extern": [
                        "float",
                        "LVecBase3f$_$length(LVecBase3f const *param0)"
                    ],
                    "fn": "length",
                    "indexed": "LVecBase3f$38$length",
                    "mangled": "_inCAAAAbb4d",
                    "ot": "inline float",
                    "rt": "float"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f *"
                    ],
                    "c_ref": "LVecBase3f$_$normalize(LVecBase3f *param0)",
                    "c_type": "bool",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_normalize_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6e6f726d616c697a6528293b",
                    "cpp_ref": "inline bool LVecBase3f::normalize(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$normalize",
                    "extern": [
                        "bool",
                        "LVecBase3f$_$normalize(LVecBase3f *param0)"
                    ],
                    "fn": "normalize",
                    "indexed": "LVecBase3f$39$normalize",
                    "mangled": "_inCAAAAOsSz",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$normalized(LVecBase3f const *param0)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_normalized_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365336628282a706172616d30292e6e6f726d616c697a65642829293b",
                    "cpp_ref": "inline LVecBase3f LVecBase3f::normalized(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$normalized",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$normalized(LVecBase3f const *param0)"
                    ],
                    "fn": "normalized",
                    "indexed": "LVecBase3f$40$normalized",
                    "mangled": "_inCAAAAYcDQ",
                    "ot": "inline LVecBase3f",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 1,
                    "argn": [
                        "onto"
                    ],
                    "args": [
                        "LVecBase3f const &onto"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$project(LVecBase3f const *param0, LVecBase3f const *param1)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_project_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365336628282a706172616d30292e70726f6a656374282a706172616d3129293b",
                    "cpp_ref": "inline LVecBase3f LVecBase3f::project(LVecBase3f const &onto) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$project",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$project(LVecBase3f const *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "project",
                    "indexed": "LVecBase3f$41$project",
                    "mangled": "_inCAAAAQhma",
                    "ot": "inline LVecBase3f",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "LVecBase3f const &other"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$cross(LVecBase3f const *param0, LVecBase3f const *param1)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_cross_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365336628282a706172616d30292e63726f7373282a706172616d3129293b",
                    "cpp_ref": "inline LVecBase3f LVecBase3f::cross(LVecBase3f const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$cross",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$cross(LVecBase3f const *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "cross",
                    "indexed": "LVecBase3f$42$cross",
                    "mangled": "_inCAAAAaJ6l",
                    "ot": "inline LVecBase3f",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_standardized_hpr(LVecBase3f const *param0)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_standardized_hpr_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365336628282a706172616d30292e6765745f7374616e64617264697a65645f6870722829293b",
                    "cpp_ref": "inline LVecBase3f LVecBase3f::get_standardized_hpr(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_standardized_hpr",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$get_standardized_hpr(LVecBase3f const *param0)"
                    ],
                    "fn": "get_standardized_hpr",
                    "indexed": "LVecBase3f$43$get_standardized_hpr",
                    "mangled": "_inCAAAAW_5p",
                    "ot": "inline LVecBase3f",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "LVecBase3f const &other"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$compare_to(LVecBase3f const *param0, LVecBase3f const *param1)",
                    "c_type": "int",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_compare_to_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f746f282a706172616d31293b",
                    "cpp_ref": "inline int LVecBase3f::compare_to(LVecBase3f const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$compare_to",
                    "extern": [
                        "int",
                        "LVecBase3f$_$compare_to(LVecBase3f const *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "compare_to",
                    "indexed": "LVecBase3f$44$compare_to",
                    "mangled": "_inCAAAA53zo",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "threshold"
                    ],
                    "args": [
                        "LVecBase3f const &other",
                        "float threshold"
                    ],
                    "argt": [
                        "LVecBase3f const&",
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "LVecBase3f const *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$compare_to(LVecBase3f const *param0, LVecBase3f const *param1, float param2)",
                    "c_type": "int",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_compare_to_i_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f746f282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline int LVecBase3f::compare_to(LVecBase3f const &other, float threshold) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$compare_to",
                    "extern": [
                        "int",
                        "LVecBase3f$_$compare_to(LVecBase3f const *param0, LVecBase3f const *param1, float param2)"
                    ],
                    "fn": "compare_to",
                    "indexed": "LVecBase3f$45$compare_to",
                    "mangled": "_inCAAAA8GlN",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_hash(LVecBase3f const *param0)",
                    "c_type": "std::size_t",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_hash_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6861736828293b",
                    "cpp_ref": "inline std::size_t LVecBase3f::get_hash(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_hash",
                    "extern": [
                        "std::size_t",
                        "LVecBase3f$_$get_hash(LVecBase3f const *param0)"
                    ],
                    "fn": "get_hash",
                    "indexed": "LVecBase3f$46$get_hash",
                    "mangled": "_inCAAAAOipS",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "threshold"
                    ],
                    "args": [
                        "float threshold"
                    ],
                    "argt": [
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$get_hash(LVecBase3f const *param0, float param1)",
                    "c_type": "std::size_t",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_hash_p_pf",
                    "cni_args": "pf",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6861736828706172616d31293b",
                    "cpp_ref": "inline std::size_t LVecBase3f::get_hash(float threshold) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_hash",
                    "extern": [
                        "std::size_t",
                        "LVecBase3f$_$get_hash(LVecBase3f const *param0, float param1)"
                    ],
                    "fn": "get_hash",
                    "indexed": "LVecBase3f$47$get_hash",
                    "mangled": "_inCAAAAgnPZ",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "hash"
                    ],
                    "args": [
                        "std::size_t hash"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "std::size_t"
                    ],
                    "c_ref": "LVecBase3f$_$add_hash(LVecBase3f const *param0, std::size_t param1)",
                    "c_type": "std::size_t",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_add_hash_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6164645f6861736828706172616d31293b",
                    "cpp_ref": "inline std::size_t LVecBase3f::add_hash(std::size_t hash) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$add_hash",
                    "extern": [
                        "std::size_t",
                        "LVecBase3f$_$add_hash(LVecBase3f const *param0, std::size_t param1)"
                    ],
                    "fn": "add_hash",
                    "indexed": "LVecBase3f$48$add_hash",
                    "mangled": "_inCAAAA8t_I",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 2,
                    "argn": [
                        "hash",
                        "threshold"
                    ],
                    "args": [
                        "std::size_t hash",
                        "float threshold"
                    ],
                    "argt": [
                        "std::size_t",
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "std::size_t",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$add_hash(LVecBase3f const *param0, std::size_t param1, float param2)",
                    "c_type": "std::size_t",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_add_hash_p_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6164645f6861736828706172616d312c20706172616d32293b",
                    "cpp_ref": "inline std::size_t LVecBase3f::add_hash(std::size_t hash, float threshold) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$add_hash",
                    "extern": [
                        "std::size_t",
                        "LVecBase3f$_$add_hash(LVecBase3f const *param0, std::size_t param1, float param2)"
                    ],
                    "fn": "add_hash",
                    "indexed": "LVecBase3f$49$add_hash",
                    "mangled": "_inCAAAAyrIc",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "hashgen"
                    ],
                    "args": [
                        "ChecksumHashGenerator &hashgen"
                    ],
                    "argt": [
                        "ChecksumHashGenerator&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "ChecksumHashGenerator *"
                    ],
                    "c_ref": "LVecBase3f$_$generate_hash(LVecBase3f const *param0, ChecksumHashGenerator *param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_generate_hash_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e67656e65726174655f68617368282a706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::generate_hash(ChecksumHashGenerator &hashgen) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$generate_hash",
                    "extern": [
                        "void",
                        "LVecBase3f$_$generate_hash(LVecBase3f const *param0, ChecksumHashGenerator *param1)"
                    ],
                    "fn": "generate_hash",
                    "indexed": "LVecBase3f$50$generate_hash",
                    "mangled": "_inCAAAAZWpj",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "hashgen",
                        "threshold"
                    ],
                    "args": [
                        "ChecksumHashGenerator &hashgen",
                        "float threshold"
                    ],
                    "argt": [
                        "ChecksumHashGenerator&",
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "ChecksumHashGenerator *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$generate_hash(LVecBase3f const *param0, ChecksumHashGenerator *param1, float param2)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_generate_hash_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e67656e65726174655f68617368282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void LVecBase3f::generate_hash(ChecksumHashGenerator &hashgen, float threshold) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$generate_hash",
                    "extern": [
                        "void",
                        "LVecBase3f$_$generate_hash(LVecBase3f const *param0, ChecksumHashGenerator *param1, float param2)"
                    ],
                    "fn": "generate_hash",
                    "indexed": "LVecBase3f$51$generate_hash",
                    "mangled": "_inCAAAARJlv",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "LVecBase3f const &other"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$componentwise_mult(LVecBase3f *param0, LVecBase3f const *param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_componentwise_mult_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f6e656e74776973655f6d756c74282a706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::componentwise_mult(LVecBase3f const &other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$componentwise_mult",
                    "extern": [
                        "void",
                        "LVecBase3f$_$componentwise_mult(LVecBase3f *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "componentwise_mult",
                    "indexed": "LVecBase3f$52$componentwise_mult",
                    "mangled": "_inCAAAAnVEp",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "LVecBase3f const &other"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$fmax(LVecBase3f const *param0, LVecBase3f const *param1)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_fmax_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365336628282a706172616d30292e666d6178282a706172616d3129293b",
                    "cpp_ref": "inline LVecBase3f LVecBase3f::fmax(LVecBase3f const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$fmax",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$fmax(LVecBase3f const *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "fmax",
                    "indexed": "LVecBase3f$53$fmax",
                    "mangled": "_inCAAAApn3D",
                    "ot": "inline LVecBase3f",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "LVecBase3f const &other"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$fmin(LVecBase3f const *param0, LVecBase3f const *param1)",
                    "c_type": "LVecBase3f *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_fmin_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c56656342617365336628282a706172616d30292e666d696e282a706172616d3129293b",
                    "cpp_ref": "inline LVecBase3f LVecBase3f::fmin(LVecBase3f const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$fmin",
                    "extern": [
                        "LVecBase3f *",
                        "LVecBase3f$_$fmin(LVecBase3f const *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "fmin",
                    "indexed": "LVecBase3f$54$fmin",
                    "mangled": "_inCAAAAHaYC",
                    "ot": "inline LVecBase3f",
                    "rt": "LVecBase3f"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "LVecBase3f const &other"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$cross_into(LVecBase3f *param0, LVecBase3f const *param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_cross_into_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e63726f73735f696e746f282a706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::cross_into(LVecBase3f const &other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$cross_into",
                    "extern": [
                        "void",
                        "LVecBase3f$_$cross_into(LVecBase3f *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "cross_into",
                    "indexed": "LVecBase3f$55$cross_into",
                    "mangled": "_inCAAAAvCKa",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "LVecBase3f const &other"
                    ],
                    "argt": [
                        "LVecBase3f const&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$almost_equal(LVecBase3f const *param0, LVecBase3f const *param1)",
                    "c_type": "bool",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_almost_equal_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e616c6d6f73745f657175616c282a706172616d31293b",
                    "cpp_ref": "inline bool LVecBase3f::almost_equal(LVecBase3f const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$almost_equal",
                    "extern": [
                        "bool",
                        "LVecBase3f$_$almost_equal(LVecBase3f const *param0, LVecBase3f const *param1)"
                    ],
                    "fn": "almost_equal",
                    "indexed": "LVecBase3f$56$almost_equal",
                    "mangled": "_inCAAAA2ADH",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "threshold"
                    ],
                    "args": [
                        "LVecBase3f const &other",
                        "float threshold"
                    ],
                    "argt": [
                        "LVecBase3f const&",
                        "float"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "LVecBase3f const *",
                        "float"
                    ],
                    "c_ref": "LVecBase3f$_$almost_equal(LVecBase3f const *param0, LVecBase3f const *param1, float param2)",
                    "c_type": "bool",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_almost_equal_B_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e616c6d6f73745f657175616c282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline bool LVecBase3f::almost_equal(LVecBase3f const &other, float threshold) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$almost_equal",
                    "extern": [
                        "bool",
                        "LVecBase3f$_$almost_equal(LVecBase3f const *param0, LVecBase3f const *param1, float param2)"
                    ],
                    "fn": "almost_equal",
                    "indexed": "LVecBase3f$57$almost_equal",
                    "mangled": "_inCAAAAjJ12",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "std::ostream *"
                    ],
                    "c_ref": "LVecBase3f$_$output(LVecBase3f const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$output",
                    "extern": [
                        "void",
                        "LVecBase3f$_$output(LVecBase3f const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "LVecBase3f$58$output",
                    "mangled": "_inCAAAAIm4Y",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "destination"
                    ],
                    "args": [
                        "Datagram &destination"
                    ],
                    "argt": [
                        "Datagram&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "Datagram *"
                    ],
                    "c_ref": "LVecBase3f$_$write_datagram_fixed(LVecBase3f const *param0, Datagram *param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_write_datagram_fixed_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d5f6669786564282a706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::write_datagram_fixed(Datagram &destination) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$write_datagram_fixed",
                    "extern": [
                        "void",
                        "LVecBase3f$_$write_datagram_fixed(LVecBase3f const *param0, Datagram *param1)"
                    ],
                    "fn": "write_datagram_fixed",
                    "indexed": "LVecBase3f$59$write_datagram_fixed",
                    "mangled": "_inCAAAAi_RW",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "source"
                    ],
                    "args": [
                        "DatagramIterator &source"
                    ],
                    "argt": [
                        "DatagramIterator&"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "DatagramIterator *"
                    ],
                    "c_ref": "LVecBase3f$_$read_datagram_fixed(LVecBase3f *param0, DatagramIterator *param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_read_datagram_fixed_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e726561645f646174616772616d5f6669786564282a706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::read_datagram_fixed(DatagramIterator &source)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$read_datagram_fixed",
                    "extern": [
                        "void",
                        "LVecBase3f$_$read_datagram_fixed(LVecBase3f *param0, DatagramIterator *param1)"
                    ],
                    "fn": "read_datagram_fixed",
                    "indexed": "LVecBase3f$60$read_datagram_fixed",
                    "mangled": "_inCAAAAaJyS",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "destination"
                    ],
                    "args": [
                        "Datagram &destination"
                    ],
                    "argt": [
                        "Datagram&"
                    ],
                    "c_argv": [
                        "LVecBase3f const *",
                        "Datagram *"
                    ],
                    "c_ref": "LVecBase3f$_$write_datagram(LVecBase3f const *param0, Datagram *param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_write_datagram_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d282a706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::write_datagram(Datagram &destination) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$write_datagram",
                    "extern": [
                        "void",
                        "LVecBase3f$_$write_datagram(LVecBase3f const *param0, Datagram *param1)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "LVecBase3f$61$write_datagram",
                    "mangled": "_inCAAAAqMLT",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "source"
                    ],
                    "args": [
                        "DatagramIterator &source"
                    ],
                    "argt": [
                        "DatagramIterator&"
                    ],
                    "c_argv": [
                        "LVecBase3f *",
                        "DatagramIterator *"
                    ],
                    "c_ref": "LVecBase3f$_$read_datagram(LVecBase3f *param0, DatagramIterator *param1)",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_read_datagram_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e726561645f646174616772616d282a706172616d31293b",
                    "cpp_ref": "inline void LVecBase3f::read_datagram(DatagramIterator &source)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$read_datagram",
                    "extern": [
                        "void",
                        "LVecBase3f$_$read_datagram(LVecBase3f *param0, DatagramIterator *param1)"
                    ],
                    "fn": "read_datagram",
                    "indexed": "LVecBase3f$62$read_datagram",
                    "mangled": "_inCAAAAKcMl",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LVecBase3f const *"
                    ],
                    "c_ref": "LVecBase3f$_$get_v(LVecBase3f const *param0)",
                    "c_type": "LVecBase3f::EVector3 *",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_v_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c5665634261736533663a3a45566563746f72332828706172616d30292d3e5f76293b",
                    "cpp_ref": "LVecBase3f::EVector3 LVecBase3f::get_v(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_v",
                    "extern": [
                        "LVecBase3f::EVector3 *",
                        "LVecBase3f$_$get_v(LVecBase3f const *param0)"
                    ],
                    "fn": "get_v",
                    "indexed": "LVecBase3f$63$get_v",
                    "mangled": "_inCAAAAdgPp",
                    "ot": "LVecBase3f::EVector3",
                    "rt": "LVecBase3f::EVector3"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LVecBase3f$_$get_class_type()",
                    "c_type": "int",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20284c5665634261736533663a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle LVecBase3f::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$get_class_type",
                    "extern": [
                        "int",
                        "LVecBase3f$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "LVecBase3f$64$get_class_type",
                    "mangled": "_inCAAAAdN_h",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LVecBase3f$_$init_type()",
                    "c_type": "void",
                    "cn": "LVecBase3f",
                    "cni": "LVecBase3f_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "202020204c5665634261736533663a3a696e69745f7479706528293b",
                    "cpp_ref": "static void LVecBase3f::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LVecBase3f$_$init_type",
                    "extern": [
                        "void",
                        "LVecBase3f$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "LVecBase3f$65$init_type",
                    "mangled": "_inCAAAAynKC",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "LensNode": {
            "bases": [
                "PandaNode"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 2,
                    "argn": [
                        "name",
                        "lens"
                    ],
                    "args": [
                        "std::string const &name",
                        "Lens *lens"
                    ],
                    "argt": [
                        "std::string const&",
                        "Lens*"
                    ],
                    "c_argv": [
                        "char const *",
                        "Lens *"
                    ],
                    "c_ref": "LensNode$_$LensNode(char const *param0, Lens *param1)",
                    "c_type": "LensNode *",
                    "cn": "LensNode",
                    "cni": "LensNode_C_ctor_p_sp",
                    "cni_args": "sp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c656e734e6f6465287374643a3a737472696e6728706172616d30292c20706172616d31293b",
                    "cpp_ref": "explicit LensNode::LensNode(std::string const &name, Lens *lens)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "LensNode$_$LensNode",
                    "extern": [
                        "LensNode *",
                        "LensNode$_$LensNode(char const *param0, Lens *param1)"
                    ],
                    "fn": "LensNode",
                    "indexed": "LensNode$1$LensNode",
                    "mangled": "_inCAAAAPTYI",
                    "ot": "explicit",
                    "rt": "LensNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "LensNode$_$LensNode(char const *param0)",
                    "c_type": "LensNode *",
                    "cn": "LensNode",
                    "cni": "LensNode_C_ctor_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c656e734e6f6465287374643a3a737472696e6728706172616d3029293b",
                    "cpp_ref": "explicit LensNode::LensNode(std::string const &name, Lens *lens)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "LensNode$_$LensNode",
                    "extern": [
                        "LensNode *",
                        "LensNode$_$LensNode(char const *param0)"
                    ],
                    "fn": "LensNode",
                    "indexed": "LensNode$2$LensNode",
                    "mangled": "_inCAAAAkd9d",
                    "ot": "explicit",
                    "rt": "LensNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4 const &mat"
                    ],
                    "argt": [
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "LensNode$_$xform(LensNode *param0, LMatrix4 const *param1)",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_xform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e78666f726d282a706172616d31293b",
                    "cpp_ref": "virtual void LensNode::xform(LMatrix4 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$xform",
                    "extern": [
                        "void",
                        "LensNode$_$xform(LensNode *param0, LMatrix4 const *param1)"
                    ],
                    "fn": "xform",
                    "indexed": "LensNode$3$xform",
                    "mangled": "_inCAAAASrXL",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "lens"
                    ],
                    "args": [
                        "Lens const &lens"
                    ],
                    "argt": [
                        "Lens const&"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "Lens const *"
                    ],
                    "c_ref": "LensNode$_$copy_lens(LensNode *param0, Lens const *param1)",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_copy_lens_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f70795f6c656e73282a706172616d31293b",
                    "cpp_ref": "inline void LensNode::copy_lens(Lens const &lens)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$copy_lens",
                    "extern": [
                        "void",
                        "LensNode$_$copy_lens(LensNode *param0, Lens const *param1)"
                    ],
                    "fn": "copy_lens",
                    "indexed": "LensNode$4$copy_lens",
                    "mangled": "_inCAAAA1vNW",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "index",
                        "lens"
                    ],
                    "args": [
                        "int index",
                        "Lens const &lens"
                    ],
                    "argt": [
                        "int",
                        "Lens const&"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "int",
                        "Lens const *"
                    ],
                    "c_ref": "LensNode$_$copy_lens(LensNode *param0, int param1, Lens const *param2)",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_copy_lens_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f70795f6c656e7328706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void LensNode::copy_lens(int index, Lens const &lens)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$copy_lens",
                    "extern": [
                        "void",
                        "LensNode$_$copy_lens(LensNode *param0, int param1, Lens const *param2)"
                    ],
                    "fn": "copy_lens",
                    "indexed": "LensNode$5$copy_lens",
                    "mangled": "_inCAAAAm46f",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "lens"
                    ],
                    "args": [
                        "Lens *lens"
                    ],
                    "argt": [
                        "Lens*"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "Lens *"
                    ],
                    "c_ref": "LensNode$_$set_lens(LensNode *param0, Lens *param1)",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_set_lens_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c656e7328706172616d31293b",
                    "cpp_ref": "inline void LensNode::set_lens(Lens *lens)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$set_lens",
                    "extern": [
                        "void",
                        "LensNode$_$set_lens(LensNode *param0, Lens *param1)"
                    ],
                    "fn": "set_lens",
                    "indexed": "LensNode$6$set_lens",
                    "mangled": "_inCAAAA_2fA",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "index",
                        "lens"
                    ],
                    "args": [
                        "int index",
                        "Lens *lens"
                    ],
                    "argt": [
                        "int",
                        "Lens*"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "int",
                        "Lens *"
                    ],
                    "c_ref": "LensNode$_$set_lens(LensNode *param0, int param1, Lens *param2)",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_set_lens_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c656e7328706172616d312c20706172616d32293b",
                    "cpp_ref": "void LensNode::set_lens(int index, Lens *lens)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$set_lens",
                    "extern": [
                        "void",
                        "LensNode$_$set_lens(LensNode *param0, int param1, Lens *param2)"
                    ],
                    "fn": "set_lens",
                    "indexed": "LensNode$7$set_lens",
                    "mangled": "_inCAAAAxtno",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index"
                    ],
                    "args": [
                        "int index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "LensNode const *",
                        "int"
                    ],
                    "c_ref": "LensNode$_$get_lens(LensNode const *param0, int param1)",
                    "c_type": "Lens *",
                    "cn": "LensNode",
                    "cni": "LensNode_C_get_lens_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6c656e7328706172616d31293b",
                    "cpp_ref": "inline Lens *LensNode::get_lens(int index) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$get_lens",
                    "extern": [
                        "Lens *",
                        "LensNode$_$get_lens(LensNode const *param0, int param1)"
                    ],
                    "fn": "get_lens",
                    "indexed": "LensNode$8$get_lens",
                    "mangled": "_inCAAAA9zXB",
                    "ot": "inline Lens*",
                    "rt": "Lens"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LensNode const *"
                    ],
                    "c_ref": "LensNode$_$get_lens(LensNode const *param0)",
                    "c_type": "Lens *",
                    "cn": "LensNode",
                    "cni": "LensNode_C_get_lens_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6c656e7328293b",
                    "cpp_ref": "inline Lens *LensNode::get_lens(int index) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$get_lens",
                    "extern": [
                        "Lens *",
                        "LensNode$_$get_lens(LensNode const *param0)"
                    ],
                    "fn": "get_lens",
                    "indexed": "LensNode$9$get_lens",
                    "mangled": "_inCAAAAd5Ow",
                    "ot": "inline Lens*",
                    "rt": "Lens"
                },
                {
                    "argc": 2,
                    "argn": [
                        "index",
                        "active"
                    ],
                    "args": [
                        "int index",
                        "bool active"
                    ],
                    "argt": [
                        "int",
                        "bool"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "int",
                        "bool"
                    ],
                    "c_ref": "LensNode$_$set_lens_active(LensNode *param0, int param1, bool param2)",
                    "c_type": "bool",
                    "cn": "LensNode",
                    "cni": "LensNode_C_set_lens_active_B_piB",
                    "cni_args": "piB",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7365745f6c656e735f61637469766528706172616d312c20706172616d32293b",
                    "cpp_ref": "bool LensNode::set_lens_active(int index, bool active)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$set_lens_active",
                    "extern": [
                        "bool",
                        "LensNode$_$set_lens_active(LensNode *param0, int param1, bool param2)"
                    ],
                    "fn": "set_lens_active",
                    "indexed": "LensNode$10$set_lens_active",
                    "mangled": "_inCAAAAPGgB",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index"
                    ],
                    "args": [
                        "int index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "LensNode const *",
                        "int"
                    ],
                    "c_ref": "LensNode$_$get_lens_active(LensNode const *param0, int param1)",
                    "c_type": "bool",
                    "cn": "LensNode",
                    "cni": "LensNode_C_get_lens_active_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6c656e735f61637469766528706172616d31293b",
                    "cpp_ref": "inline bool LensNode::get_lens_active(int index) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$get_lens_active",
                    "extern": [
                        "bool",
                        "LensNode$_$get_lens_active(LensNode const *param0, int param1)"
                    ],
                    "fn": "get_lens_active",
                    "indexed": "LensNode$11$get_lens_active",
                    "mangled": "_inCAAAALTIn",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index"
                    ],
                    "args": [
                        "int index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "int"
                    ],
                    "c_ref": "LensNode$_$activate_lens(LensNode *param0, int param1)",
                    "c_type": "bool",
                    "cn": "LensNode",
                    "cni": "LensNode_C_activate_lens_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e61637469766174655f6c656e7328706172616d31293b",
                    "cpp_ref": "inline bool LensNode::activate_lens(int index)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$activate_lens",
                    "extern": [
                        "bool",
                        "LensNode$_$activate_lens(LensNode *param0, int param1)"
                    ],
                    "fn": "activate_lens",
                    "indexed": "LensNode$12$activate_lens",
                    "mangled": "_inCAAAA1JkY",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index"
                    ],
                    "args": [
                        "int index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "int"
                    ],
                    "c_ref": "LensNode$_$deactivate_lens(LensNode *param0, int param1)",
                    "c_type": "bool",
                    "cn": "LensNode",
                    "cni": "LensNode_C_deactivate_lens_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e646561637469766174655f6c656e7328706172616d31293b",
                    "cpp_ref": "inline bool LensNode::deactivate_lens(int index)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$deactivate_lens",
                    "extern": [
                        "bool",
                        "LensNode$_$deactivate_lens(LensNode *param0, int param1)"
                    ],
                    "fn": "deactivate_lens",
                    "indexed": "LensNode$13$deactivate_lens",
                    "mangled": "_inCAAAASl8u",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pos"
                    ],
                    "args": [
                        "LPoint3 const &pos"
                    ],
                    "argt": [
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "LPoint3 const *"
                    ],
                    "c_ref": "LensNode$_$is_in_view(LensNode *param0, LPoint3 const *param1)",
                    "c_type": "bool",
                    "cn": "LensNode",
                    "cni": "LensNode_C_is_in_view_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f696e5f76696577282a706172616d31293b",
                    "cpp_ref": "inline bool LensNode::is_in_view(LPoint3 const &pos)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$is_in_view",
                    "extern": [
                        "bool",
                        "LensNode$_$is_in_view(LensNode *param0, LPoint3 const *param1)"
                    ],
                    "fn": "is_in_view",
                    "indexed": "LensNode$14$is_in_view",
                    "mangled": "_inCAAAAQ0RN",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "index",
                        "pos"
                    ],
                    "args": [
                        "int index",
                        "LPoint3 const &pos"
                    ],
                    "argt": [
                        "int",
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "int",
                        "LPoint3 const *"
                    ],
                    "c_ref": "LensNode$_$is_in_view(LensNode *param0, int param1, LPoint3 const *param2)",
                    "c_type": "bool",
                    "cn": "LensNode",
                    "cni": "LensNode_C_is_in_view_B_pip",
                    "cni_args": "pip",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f696e5f7669657728706172616d312c202a706172616d32293b",
                    "cpp_ref": "bool LensNode::is_in_view(int index, LPoint3 const &pos)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$is_in_view",
                    "extern": [
                        "bool",
                        "LensNode$_$is_in_view(LensNode *param0, int param1, LPoint3 const *param2)"
                    ],
                    "fn": "is_in_view",
                    "indexed": "LensNode$15$is_in_view",
                    "mangled": "_inCAAAAJyFt",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LensNode *"
                    ],
                    "c_ref": "LensNode$_$show_frustum(LensNode *param0)",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_show_frustum_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73686f775f6672757374756d28293b",
                    "cpp_ref": "void LensNode::show_frustum(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$show_frustum",
                    "extern": [
                        "void",
                        "LensNode$_$show_frustum(LensNode *param0)"
                    ],
                    "fn": "show_frustum",
                    "indexed": "LensNode$16$show_frustum",
                    "mangled": "_inCAAAACdMV",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LensNode *"
                    ],
                    "c_ref": "LensNode$_$hide_frustum(LensNode *param0)",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_hide_frustum_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e686964655f6672757374756d28293b",
                    "cpp_ref": "void LensNode::hide_frustum(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$hide_frustum",
                    "extern": [
                        "void",
                        "LensNode$_$hide_frustum(LensNode *param0)"
                    ],
                    "fn": "hide_frustum",
                    "indexed": "LensNode$17$hide_frustum",
                    "mangled": "_inCAAAAZDm8",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LensNode$_$register_with_read_factory()",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_register_with_read_factory_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "202020204c656e734e6f64653a3a72656769737465725f776974685f726561645f666163746f727928293b",
                    "cpp_ref": "static void LensNode::register_with_read_factory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LensNode$_$register_with_read_factory",
                    "extern": [
                        "void",
                        "LensNode$_$register_with_read_factory()"
                    ],
                    "fn": "register_with_read_factory",
                    "indexed": "LensNode$18$register_with_read_factory",
                    "mangled": "_inCAAAAXAL8",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "LensNode *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "LensNode$_$write_datagram(LensNode *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void LensNode::write_datagram(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$write_datagram",
                    "extern": [
                        "void",
                        "LensNode$_$write_datagram(LensNode *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "LensNode$19$write_datagram",
                    "mangled": "_inCAAAADaAj",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LensNode$_$get_class_type()",
                    "c_type": "int",
                    "cn": "LensNode",
                    "cni": "LensNode_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20284c656e734e6f64653a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle LensNode::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LensNode$_$get_class_type",
                    "extern": [
                        "int",
                        "LensNode$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "LensNode$20$get_class_type",
                    "mangled": "_inCAAAAF6_K",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "LensNode$_$init_type()",
                    "c_type": "void",
                    "cn": "LensNode",
                    "cni": "LensNode_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "202020204c656e734e6f64653a3a696e69745f7479706528293b",
                    "cpp_ref": "static void LensNode::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "LensNode$_$init_type",
                    "extern": [
                        "void",
                        "LensNode$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "LensNode$21$init_type",
                    "mangled": "_inCAAAAGCfp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LensNode const *"
                    ],
                    "c_ref": "LensNode$_$get_type(LensNode const *param0)",
                    "c_type": "int",
                    "cn": "LensNode",
                    "cni": "LensNode_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle LensNode::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$get_type",
                    "extern": [
                        "int",
                        "LensNode$_$get_type(LensNode const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "LensNode$22$get_type",
                    "mangled": "_inCAAAAtjBy",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LensNode *"
                    ],
                    "c_ref": "LensNode$_$force_init_type(LensNode *param0)",
                    "c_type": "int",
                    "cn": "LensNode",
                    "cni": "LensNode_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle LensNode::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LensNode$_$force_init_type",
                    "extern": [
                        "int",
                        "LensNode$_$force_init_type(LensNode *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "LensNode$23$force_init_type",
                    "mangled": "_inCAAAAfaNn",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "LinkedListNode": {
            "bases": [],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "LinkedListNode *"
                    ],
                    "c_ref": "LinkedListNode$_$downcast_to_PandaNode(LinkedListNode *param0)",
                    "c_type": "PandaNode *",
                    "cn": "LinkedListNode",
                    "cni": "LinkedListNode_C_downcast_to_PandaNode_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202850616e64614e6f6465202a29706172616d303b",
                    "cpp_ref": "PandaNode *LinkedListNode::downcast_to_PandaNode(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "LinkedListNode$_$downcast_to_PandaNode",
                    "extern": [
                        "PandaNode *",
                        "LinkedListNode$_$downcast_to_PandaNode(LinkedListNode *param0)"
                    ],
                    "fn": "downcast_to_PandaNode",
                    "indexed": "LinkedListNode$1$downcast_to_PandaNode",
                    "mangled": "_inCAAAAKjNt",
                    "ot": "PandaNode*",
                    "rt": "PandaNode"
                }
            ]
        },
        "MemoryBase": {
            "bases": [],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "MemoryBase$_$MemoryBase()",
                    "c_type": "MemoryBase *",
                    "cn": "MemoryBase",
                    "cni": "MemoryBase_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204d656d6f72794261736528293b",
                    "cpp_ref": "inline MemoryBase::MemoryBase(void) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "MemoryBase$_$MemoryBase",
                    "extern": [
                        "MemoryBase *",
                        "MemoryBase$_$MemoryBase()"
                    ],
                    "fn": "MemoryBase",
                    "indexed": "MemoryBase$1$MemoryBase",
                    "mangled": "_inCAAAAVh0N",
                    "ot": "inline",
                    "rt": "MemoryBase"
                },
                {
                    "argc": 1,
                    "argn": [
                        "arg0"
                    ],
                    "args": [
                        "MemoryBase const &"
                    ],
                    "argt": [
                        "MemoryBase const&"
                    ],
                    "c_argv": [
                        "MemoryBase const *"
                    ],
                    "c_ref": "MemoryBase$_$MemoryBase(MemoryBase const *param0)",
                    "c_type": "MemoryBase *",
                    "cn": "MemoryBase",
                    "cni": "MemoryBase_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204d656d6f727942617365282a706172616d30293b",
                    "cpp_ref": "inline MemoryBase::MemoryBase(MemoryBase const &) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "MemoryBase$_$MemoryBase",
                    "extern": [
                        "MemoryBase *",
                        "MemoryBase$_$MemoryBase(MemoryBase const *param0)"
                    ],
                    "fn": "MemoryBase",
                    "indexed": "MemoryBase$2$MemoryBase",
                    "mangled": "_inCAAAAIhuO",
                    "ot": "inline",
                    "rt": "MemoryBase"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "MemoryBase *"
                    ],
                    "c_ref": "MemoryBase$_$downcast_to_ReferenceCount(MemoryBase *param0)",
                    "c_type": "ReferenceCount *",
                    "cn": "MemoryBase",
                    "cni": "MemoryBase_C_downcast_to_ReferenceCount_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20285265666572656e6365436f756e74202a29706172616d303b",
                    "cpp_ref": "ReferenceCount *MemoryBase::downcast_to_ReferenceCount(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "MemoryBase$_$downcast_to_ReferenceCount",
                    "extern": [
                        "ReferenceCount *",
                        "MemoryBase$_$downcast_to_ReferenceCount(MemoryBase *param0)"
                    ],
                    "fn": "downcast_to_ReferenceCount",
                    "indexed": "MemoryBase$3$downcast_to_ReferenceCount",
                    "mangled": "_inCAAAAKg08",
                    "ot": "ReferenceCount*",
                    "rt": "ReferenceCount"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "MemoryBase *"
                    ],
                    "c_ref": "MemoryBase$_$downcast_to_TypedObject(MemoryBase *param0)",
                    "c_type": "TypedObject *",
                    "cn": "MemoryBase",
                    "cni": "MemoryBase_C_downcast_to_TypedObject_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202854797065644f626a656374202a29706172616d303b",
                    "cpp_ref": "TypedObject *MemoryBase::downcast_to_TypedObject(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "MemoryBase$_$downcast_to_TypedObject",
                    "extern": [
                        "TypedObject *",
                        "MemoryBase$_$downcast_to_TypedObject(MemoryBase *param0)"
                    ],
                    "fn": "downcast_to_TypedObject",
                    "indexed": "MemoryBase$4$downcast_to_TypedObject",
                    "mangled": "_inCAAAAfhug",
                    "ot": "TypedObject*",
                    "rt": "TypedObject"
                }
            ]
        },
        "Namable": {
            "bases": [
                "MemoryBase"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Namable *"
                    ],
                    "c_ref": "Namable$_$downcast_to_PandaNode(Namable *param0)",
                    "c_type": "PandaNode *",
                    "cn": "Namable",
                    "cni": "Namable_C_downcast_to_PandaNode_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202850616e64614e6f6465202a29706172616d303b",
                    "cpp_ref": "PandaNode *Namable::downcast_to_PandaNode(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Namable$_$downcast_to_PandaNode",
                    "extern": [
                        "PandaNode *",
                        "Namable$_$downcast_to_PandaNode(Namable *param0)"
                    ],
                    "fn": "downcast_to_PandaNode",
                    "indexed": "Namable$1$downcast_to_PandaNode",
                    "mangled": "_inCAAAAPzAU",
                    "ot": "PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Namable *"
                    ],
                    "c_ref": "Namable$_$downcast_to_Thread(Namable *param0)",
                    "c_type": "Thread *",
                    "cn": "Namable",
                    "cni": "Namable_C_downcast_to_Thread_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2028546872656164202a29706172616d303b",
                    "cpp_ref": "Thread *Namable::downcast_to_Thread(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Namable$_$downcast_to_Thread",
                    "extern": [
                        "Thread *",
                        "Namable$_$downcast_to_Thread(Namable *param0)"
                    ],
                    "fn": "downcast_to_Thread",
                    "indexed": "Namable$2$downcast_to_Thread",
                    "mangled": "_inCAAAAFtoz",
                    "ot": "Thread*",
                    "rt": "Thread"
                }
            ]
        },
        "NodePath": {
            "bases": [],
            "enums": {
                "ErrorType": [
                    [
                        "ET_fail",
                        3
                    ],
                    [
                        "ET_not_found",
                        1
                    ],
                    [
                        "ET_ok",
                        0
                    ],
                    [
                        "ET_removed",
                        2
                    ]
                ]
            },
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "NodePath$_$NodePath()",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828293b",
                    "cpp_ref": "inline NodePath::NodePath(void)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePath$_$NodePath",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$NodePath()"
                    ],
                    "fn": "NodePath",
                    "indexed": "NodePath$1$NodePath",
                    "mangled": "_inCAAAAdx9g",
                    "ot": "inline",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "from"
                    ],
                    "args": [
                        "NodePath &&from"
                    ],
                    "argt": [
                        "NodePath&&"
                    ],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$NodePath(NodePath *param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468282a706172616d30293b",
                    "cpp_ref": "inline NodePath::NodePath(NodePath &&from) noexcept",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePath$_$NodePath",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$NodePath(NodePath *param0)"
                    ],
                    "fn": "NodePath",
                    "indexed": "NodePath$2$NodePath",
                    "mangled": "_inCAAAAsbyG",
                    "ot": "inline",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "copy"
                    ],
                    "args": [
                        "NodePath const &copy"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$NodePath(NodePath const *param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ctor_p_p_1_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468282a706172616d30293b",
                    "cpp_ref": "inline NodePath::NodePath(NodePath const &copy)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePath$_$NodePath",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$NodePath(NodePath const *param0)"
                    ],
                    "fn": "NodePath",
                    "indexed": "NodePath$3$NodePath",
                    "mangled": "_inCAAAAJaJj",
                    "ot": "inline",
                    "rt": "NodePath"
                },
                {
                    "argc": 3,
                    "argn": [
                        "parent",
                        "child_node",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &parent",
                        "PandaNode *child_node",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$NodePath(NodePath const *param0, PandaNode *param1, Thread *param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ctor_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468282a706172616d302c20706172616d312c20706172616d32293b",
                    "cpp_ref": "explicit NodePath::NodePath(NodePath const &parent, PandaNode *child_node, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePath$_$NodePath",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$NodePath(NodePath const *param0, PandaNode *param1, Thread *param2)"
                    ],
                    "fn": "NodePath",
                    "indexed": "NodePath$4$NodePath",
                    "mangled": "_inCAAAAvecb",
                    "ot": "explicit",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "parent",
                        "child_node"
                    ],
                    "args": [
                        "NodePath const &parent",
                        "PandaNode *child_node"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "PandaNode *"
                    ],
                    "c_ref": "NodePath$_$NodePath(NodePath const *param0, PandaNode *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ctor_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468282a706172616d302c20706172616d31293b",
                    "cpp_ref": "explicit NodePath::NodePath(NodePath const &parent, PandaNode *child_node, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePath$_$NodePath",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$NodePath(NodePath const *param0, PandaNode *param1)"
                    ],
                    "fn": "NodePath",
                    "indexed": "NodePath$5$NodePath",
                    "mangled": "_inCAAAAnAhm",
                    "ot": "explicit",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "node",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *node",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$NodePath(PandaNode *param0, Thread *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ctor_p_pp_1_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828706172616d302c20706172616d31293b",
                    "cpp_ref": "inline explicit NodePath::NodePath(PandaNode *node, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePath$_$NodePath",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$NodePath(PandaNode *param0, Thread *param1)"
                    ],
                    "fn": "NodePath",
                    "indexed": "NodePath$6$NodePath",
                    "mangled": "_inCAAAAGF9J",
                    "ot": "inline explicit",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "PandaNode *node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "NodePath$_$NodePath(PandaNode *param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ctor_p_p_1_p_p_2_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828706172616d30293b",
                    "cpp_ref": "inline explicit NodePath::NodePath(PandaNode *node, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePath$_$NodePath",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$NodePath(PandaNode *param0)"
                    ],
                    "fn": "NodePath",
                    "indexed": "NodePath$7$NodePath",
                    "mangled": "_inCAAAAH4wM",
                    "ot": "inline explicit",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "top_node_name",
                        "current_thread"
                    ],
                    "args": [
                        "std::string const &top_node_name",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "std::string const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "char const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$NodePath(char const *param0, Thread *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ctor_p_sp",
                    "cni_args": "sp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468287374643a3a737472696e6728706172616d30292c20706172616d31293b",
                    "cpp_ref": "inline explicit NodePath::NodePath(std::string const &top_node_name, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePath$_$NodePath",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$NodePath(char const *param0, Thread *param1)"
                    ],
                    "fn": "NodePath",
                    "indexed": "NodePath$8$NodePath",
                    "mangled": "_inCAAAA_1FN",
                    "ot": "inline explicit",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "top_node_name"
                    ],
                    "args": [
                        "std::string const &top_node_name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$NodePath(char const *param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ctor_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468287374643a3a737472696e6728706172616d3029293b",
                    "cpp_ref": "inline explicit NodePath::NodePath(std::string const &top_node_name, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePath$_$NodePath",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$NodePath(char const *param0)"
                    ],
                    "fn": "NodePath",
                    "indexed": "NodePath$9$NodePath",
                    "mangled": "_inCAAAAvQ3P",
                    "ot": "inline explicit",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "node",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *node",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$any_path(PandaNode *param0, Thread *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_any_path_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468284e6f6465506174683a3a616e795f7061746828706172616d302c20706172616d3129293b",
                    "cpp_ref": "static inline NodePath NodePath::any_path(PandaNode *node, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$any_path",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$any_path(PandaNode *param0, Thread *param1)"
                    ],
                    "fn": "any_path",
                    "indexed": "NodePath$10$any_path",
                    "mangled": "_inCAAAAh5bc",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "PandaNode *node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "NodePath$_$any_path(PandaNode *param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_any_path_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468284e6f6465506174683a3a616e795f7061746828706172616d3029293b",
                    "cpp_ref": "static inline NodePath NodePath::any_path(PandaNode *node, Thread *current_thread)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$any_path",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$any_path(PandaNode *param0)"
                    ],
                    "fn": "any_path",
                    "indexed": "NodePath$11$any_path",
                    "mangled": "_inCAAAAoGNf",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c65617228293b",
                    "cpp_ref": "inline void NodePath::clear(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear",
                    "extern": [
                        "void",
                        "NodePath$_$clear(NodePath *param0)"
                    ],
                    "fn": "clear",
                    "indexed": "NodePath$12$clear",
                    "mangled": "_inCAAAApwgV",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "NodePath$_$not_found()",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_not_found_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468284e6f6465506174683a3a6e6f745f666f756e642829293b",
                    "cpp_ref": "static inline NodePath NodePath::not_found(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$not_found",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$not_found()"
                    ],
                    "fn": "not_found",
                    "indexed": "NodePath$13$not_found",
                    "mangled": "_inCAAAAH6GR",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "NodePath$_$removed()",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_removed_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468284e6f6465506174683a3a72656d6f7665642829293b",
                    "cpp_ref": "static inline NodePath NodePath::removed(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$removed",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$removed()"
                    ],
                    "fn": "removed",
                    "indexed": "NodePath$14$removed",
                    "mangled": "_inCAAAAcqkY",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "NodePath$_$fail()",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_fail_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468284e6f6465506174683a3a6661696c2829293b",
                    "cpp_ref": "static inline NodePath NodePath::fail(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$fail",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$fail()"
                    ],
                    "fn": "fail",
                    "indexed": "NodePath$15$fail",
                    "mangled": "_inCAAAAKvgx",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "max_search_depth"
                    ],
                    "args": [
                        "int max_search_depth"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_max_search_depth(int param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_max_search_depth_v_i",
                    "cni_args": "i",
                    "cni_rt": "v",
                    "code": "202020204e6f6465506174683a3a7365745f6d61785f7365617263685f646570746828706172616d30293b",
                    "cpp_ref": "static inline void NodePath::set_max_search_depth(int max_search_depth)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_max_search_depth",
                    "extern": [
                        "void",
                        "NodePath$_$set_max_search_depth(int param0)"
                    ],
                    "fn": "set_max_search_depth",
                    "indexed": "NodePath$16$set_max_search_depth",
                    "mangled": "_inCAAAAF4FI",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "NodePath$_$get_max_search_depth()",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_max_search_depth_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e204e6f6465506174683a3a6765745f6d61785f7365617263685f646570746828293b",
                    "cpp_ref": "static inline int NodePath::get_max_search_depth(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_max_search_depth",
                    "extern": [
                        "int",
                        "NodePath$_$get_max_search_depth()"
                    ],
                    "fn": "get_max_search_depth",
                    "indexed": "NodePath$17$get_max_search_depth",
                    "mangled": "_inCAAAAjBwf",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$is_empty(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_empty_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f656d70747928293b",
                    "cpp_ref": "inline bool NodePath::is_empty(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_empty",
                    "extern": [
                        "bool",
                        "NodePath$_$is_empty(NodePath const *param0)"
                    ],
                    "fn": "is_empty",
                    "indexed": "NodePath$18$is_empty",
                    "mangled": "_inCAAAA6BVO",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$is_singleton(NodePath const *param0, Thread *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_singleton_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f73696e676c65746f6e28706172616d31293b",
                    "cpp_ref": "inline bool NodePath::is_singleton(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_singleton",
                    "extern": [
                        "bool",
                        "NodePath$_$is_singleton(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "is_singleton",
                    "indexed": "NodePath$19$is_singleton",
                    "mangled": "_inCAAAAfPMM",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$is_singleton(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_singleton_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f73696e676c65746f6e28293b",
                    "cpp_ref": "inline bool NodePath::is_singleton(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_singleton",
                    "extern": [
                        "bool",
                        "NodePath$_$is_singleton(NodePath const *param0)"
                    ],
                    "fn": "is_singleton",
                    "indexed": "NodePath$20$is_singleton",
                    "mangled": "_inCAAAAnHP3",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_num_nodes(NodePath const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_num_nodes_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f6e6f64657328706172616d31293b",
                    "cpp_ref": "int NodePath::get_num_nodes(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_num_nodes",
                    "extern": [
                        "int",
                        "NodePath$_$get_num_nodes(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_num_nodes",
                    "indexed": "NodePath$21$get_num_nodes",
                    "mangled": "_inCAAAAdRIU",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_num_nodes(NodePath const *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_num_nodes_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f6e6f64657328293b",
                    "cpp_ref": "int NodePath::get_num_nodes(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_num_nodes",
                    "extern": [
                        "int",
                        "NodePath$_$get_num_nodes(NodePath const *param0)"
                    ],
                    "fn": "get_num_nodes",
                    "indexed": "NodePath$22$get_num_nodes",
                    "mangled": "_inCAAAAMbn0",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "index",
                        "current_thread"
                    ],
                    "args": [
                        "int index",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_node(NodePath const *param0, int param1, Thread *param2)",
                    "c_type": "PandaNode *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_node_p_pip",
                    "cni_args": "pip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e6f646528706172616d312c20706172616d32293b",
                    "cpp_ref": "PandaNode *NodePath::get_node(int index, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_node",
                    "extern": [
                        "PandaNode *",
                        "NodePath$_$get_node(NodePath const *param0, int param1, Thread *param2)"
                    ],
                    "fn": "get_node",
                    "indexed": "NodePath$23$get_node",
                    "mangled": "_inCAAAAOx_k",
                    "ot": "PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index"
                    ],
                    "args": [
                        "int index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$get_node(NodePath const *param0, int param1)",
                    "c_type": "PandaNode *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_node_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e6f646528706172616d31293b",
                    "cpp_ref": "PandaNode *NodePath::get_node(int index, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_node",
                    "extern": [
                        "PandaNode *",
                        "NodePath$_$get_node(NodePath const *param0, int param1)"
                    ],
                    "fn": "get_node",
                    "indexed": "NodePath$24$get_node",
                    "mangled": "_inCAAAA5Kz9",
                    "ot": "PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 2,
                    "argn": [
                        "index",
                        "current_thread"
                    ],
                    "args": [
                        "int index",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_ancestor(NodePath const *param0, int param1, Thread *param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_ancestor_p_pip",
                    "cni_args": "pip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f616e636573746f7228706172616d312c20706172616d3229293b",
                    "cpp_ref": "NodePath NodePath::get_ancestor(int index, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_ancestor",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_ancestor(NodePath const *param0, int param1, Thread *param2)"
                    ],
                    "fn": "get_ancestor",
                    "indexed": "NodePath$25$get_ancestor",
                    "mangled": "_inCAAAAH5pa",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index"
                    ],
                    "args": [
                        "int index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$get_ancestor(NodePath const *param0, int param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_ancestor_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f616e636573746f7228706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::get_ancestor(int index, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_ancestor",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_ancestor(NodePath const *param0, int param1)"
                    ],
                    "fn": "get_ancestor",
                    "indexed": "NodePath$26$get_ancestor",
                    "mangled": "_inCAAAA4QOU",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_error_type(NodePath const *param0)",
                    "c_type": "NodePath::ErrorType",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_error_type_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6572726f725f7479706528293b",
                    "cpp_ref": "inline NodePath::ErrorType NodePath::get_error_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_error_type",
                    "extern": [
                        "NodePath::ErrorType",
                        "NodePath$_$get_error_type(NodePath const *param0)"
                    ],
                    "fn": "get_error_type",
                    "indexed": "NodePath$27$get_error_type",
                    "mangled": "_inCAAAA17Vc",
                    "ot": "inline NodePath::ErrorType",
                    "rt": "NodePath::ErrorType"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_top_node(NodePath const *param0, Thread *param1)",
                    "c_type": "PandaNode *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_top_node_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f746f705f6e6f646528706172616d31293b",
                    "cpp_ref": "inline PandaNode *NodePath::get_top_node(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_top_node",
                    "extern": [
                        "PandaNode *",
                        "NodePath$_$get_top_node(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_top_node",
                    "indexed": "NodePath$28$get_top_node",
                    "mangled": "_inCAAAAbOLd",
                    "ot": "inline PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_top_node(NodePath const *param0)",
                    "c_type": "PandaNode *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_top_node_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f746f705f6e6f646528293b",
                    "cpp_ref": "inline PandaNode *NodePath::get_top_node(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_top_node",
                    "extern": [
                        "PandaNode *",
                        "NodePath$_$get_top_node(NodePath const *param0)"
                    ],
                    "fn": "get_top_node",
                    "indexed": "NodePath$29$get_top_node",
                    "mangled": "_inCAAAACGOI",
                    "ot": "inline PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_top(NodePath const *param0, Thread *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_top_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f746f7028706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::get_top(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_top",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_top(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_top",
                    "indexed": "NodePath$30$get_top",
                    "mangled": "_inCAAAAFyxv",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_top(NodePath const *param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_top_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f746f702829293b",
                    "cpp_ref": "NodePath NodePath::get_top(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_top",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_top(NodePath const *param0)"
                    ],
                    "fn": "get_top",
                    "indexed": "NodePath$31$get_top",
                    "mangled": "_inCAAAAHiQF",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$node(NodePath const *param0)",
                    "c_type": "PandaNode *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_node_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6e6f646528293b",
                    "cpp_ref": "inline PandaNode *NodePath::node(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$node",
                    "extern": [
                        "PandaNode *",
                        "NodePath$_$node(NodePath const *param0)"
                    ],
                    "fn": "node",
                    "indexed": "NodePath$32$node",
                    "mangled": "_inCAAAAC92U",
                    "ot": "inline PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_key(NodePath const *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_key_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6b657928293b",
                    "cpp_ref": "inline int NodePath::get_key(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_key",
                    "extern": [
                        "int",
                        "NodePath$_$get_key(NodePath const *param0)"
                    ],
                    "fn": "get_key",
                    "indexed": "NodePath$33$get_key",
                    "mangled": "_inCAAAAumo_",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "hash"
                    ],
                    "args": [
                        "std::size_t hash"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "std::size_t"
                    ],
                    "c_ref": "NodePath$_$add_hash(NodePath const *param0, std::size_t param1)",
                    "c_type": "std::size_t",
                    "cn": "NodePath",
                    "cni": "NodePath_C_add_hash_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6164645f6861736828706172616d31293b",
                    "cpp_ref": "inline std::size_t NodePath::add_hash(std::size_t hash) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$add_hash",
                    "extern": [
                        "std::size_t",
                        "NodePath$_$add_hash(NodePath const *param0, std::size_t param1)"
                    ],
                    "fn": "add_hash",
                    "indexed": "NodePath$34$add_hash",
                    "mangled": "_inCAAAAknMI",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$is_same_graph(NodePath const *param0, NodePath const *param1, Thread *param2)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_same_graph_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f73616d655f6772617068282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline bool NodePath::is_same_graph(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_same_graph",
                    "extern": [
                        "bool",
                        "NodePath$_$is_same_graph(NodePath const *param0, NodePath const *param1, Thread *param2)"
                    ],
                    "fn": "is_same_graph",
                    "indexed": "NodePath$35$is_same_graph",
                    "mangled": "_inCAAAAanz3",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$is_same_graph(NodePath const *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_same_graph_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f73616d655f6772617068282a706172616d31293b",
                    "cpp_ref": "inline bool NodePath::is_same_graph(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_same_graph",
                    "extern": [
                        "bool",
                        "NodePath$_$is_same_graph(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "is_same_graph",
                    "indexed": "NodePath$36$is_same_graph",
                    "mangled": "_inCAAAARlGb",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$is_ancestor_of(NodePath const *param0, NodePath const *param1, Thread *param2)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_ancestor_of_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f616e636573746f725f6f66282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline bool NodePath::is_ancestor_of(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_ancestor_of",
                    "extern": [
                        "bool",
                        "NodePath$_$is_ancestor_of(NodePath const *param0, NodePath const *param1, Thread *param2)"
                    ],
                    "fn": "is_ancestor_of",
                    "indexed": "NodePath$37$is_ancestor_of",
                    "mangled": "_inCAAAAY3g7",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$is_ancestor_of(NodePath const *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_ancestor_of_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f616e636573746f725f6f66282a706172616d31293b",
                    "cpp_ref": "inline bool NodePath::is_ancestor_of(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_ancestor_of",
                    "extern": [
                        "bool",
                        "NodePath$_$is_ancestor_of(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "is_ancestor_of",
                    "indexed": "NodePath$38$is_ancestor_of",
                    "mangled": "_inCAAAAFCVk",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_common_ancestor(NodePath const *param0, NodePath const *param1, Thread *param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_common_ancestor_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f636f6d6d6f6e5f616e636573746f72282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "inline NodePath NodePath::get_common_ancestor(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_common_ancestor",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_common_ancestor(NodePath const *param0, NodePath const *param1, Thread *param2)"
                    ],
                    "fn": "get_common_ancestor",
                    "indexed": "NodePath$39$get_common_ancestor",
                    "mangled": "_inCAAAAT79O",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_common_ancestor(NodePath const *param0, NodePath const *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_common_ancestor_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f636f6d6d6f6e5f616e636573746f72282a706172616d3129293b",
                    "cpp_ref": "inline NodePath NodePath::get_common_ancestor(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_common_ancestor",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_common_ancestor(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_common_ancestor",
                    "indexed": "NodePath$40$get_common_ancestor",
                    "mangled": "_inCAAAAiMjg",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_children(NodePath const *param0, Thread *param1)",
                    "c_type": "NodePathCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_children_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468436f6c6c656374696f6e28282a706172616d30292e6765745f6368696c6472656e28706172616d3129293b",
                    "cpp_ref": "NodePathCollection NodePath::get_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_children",
                    "extern": [
                        "NodePathCollection *",
                        "NodePath$_$get_children(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_children",
                    "indexed": "NodePath$41$get_children",
                    "mangled": "_inCAAAAbz5q",
                    "ot": "NodePathCollection",
                    "rt": "NodePathCollection"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_children(NodePath const *param0)",
                    "c_type": "NodePathCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_children_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468436f6c6c656374696f6e28282a706172616d30292e6765745f6368696c6472656e2829293b",
                    "cpp_ref": "NodePathCollection NodePath::get_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_children",
                    "extern": [
                        "NodePathCollection *",
                        "NodePath$_$get_children(NodePath const *param0)"
                    ],
                    "fn": "get_children",
                    "indexed": "NodePath$42$get_children",
                    "mangled": "_inCAAAAgb8V",
                    "ot": "NodePathCollection",
                    "rt": "NodePathCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_num_children(NodePath const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_num_children_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f6368696c6472656e28706172616d31293b",
                    "cpp_ref": "inline int NodePath::get_num_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_num_children",
                    "extern": [
                        "int",
                        "NodePath$_$get_num_children(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_num_children",
                    "indexed": "NodePath$43$get_num_children",
                    "mangled": "_inCAAAAjAV2",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_num_children(NodePath const *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_num_children_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f6368696c6472656e28293b",
                    "cpp_ref": "inline int NodePath::get_num_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_num_children",
                    "extern": [
                        "int",
                        "NodePath$_$get_num_children(NodePath const *param0)"
                    ],
                    "fn": "get_num_children",
                    "indexed": "NodePath$44$get_num_children",
                    "mangled": "_inCAAAASTCh",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "n",
                        "current_thread"
                    ],
                    "args": [
                        "int n",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_child(NodePath const *param0, int param1, Thread *param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_child_p_pip",
                    "cni_args": "pip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f6368696c6428706172616d312c20706172616d3229293b",
                    "cpp_ref": "inline NodePath NodePath::get_child(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_child",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_child(NodePath const *param0, int param1, Thread *param2)"
                    ],
                    "fn": "get_child",
                    "indexed": "NodePath$45$get_child",
                    "mangled": "_inCAAAAxKe9",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$get_child(NodePath const *param0, int param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_child_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f6368696c6428706172616d3129293b",
                    "cpp_ref": "inline NodePath NodePath::get_child(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_child",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_child(NodePath const *param0, int param1)"
                    ],
                    "fn": "get_child",
                    "indexed": "NodePath$46$get_child",
                    "mangled": "_inCAAAAaFtX",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_stashed_children(NodePath const *param0, Thread *param1)",
                    "c_type": "NodePathCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_stashed_children_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468436f6c6c656374696f6e28282a706172616d30292e6765745f737461736865645f6368696c6472656e28706172616d3129293b",
                    "cpp_ref": "NodePathCollection NodePath::get_stashed_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_stashed_children",
                    "extern": [
                        "NodePathCollection *",
                        "NodePath$_$get_stashed_children(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_stashed_children",
                    "indexed": "NodePath$47$get_stashed_children",
                    "mangled": "_inCAAAAOQxT",
                    "ot": "NodePathCollection",
                    "rt": "NodePathCollection"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_stashed_children(NodePath const *param0)",
                    "c_type": "NodePathCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_stashed_children_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468436f6c6c656374696f6e28282a706172616d30292e6765745f737461736865645f6368696c6472656e2829293b",
                    "cpp_ref": "NodePathCollection NodePath::get_stashed_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_stashed_children",
                    "extern": [
                        "NodePathCollection *",
                        "NodePath$_$get_stashed_children(NodePath const *param0)"
                    ],
                    "fn": "get_stashed_children",
                    "indexed": "NodePath$48$get_stashed_children",
                    "mangled": "_inCAAAAwedS",
                    "ot": "NodePathCollection",
                    "rt": "NodePathCollection"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$count_num_descendants(NodePath const *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_count_num_descendants_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f756e745f6e756d5f64657363656e64616e747328293b",
                    "cpp_ref": "inline int NodePath::count_num_descendants(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$count_num_descendants",
                    "extern": [
                        "int",
                        "NodePath$_$count_num_descendants(NodePath const *param0)"
                    ],
                    "fn": "count_num_descendants",
                    "indexed": "NodePath$49$count_num_descendants",
                    "mangled": "_inCAAAAGzBj",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$has_parent(NodePath const *param0, Thread *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_parent_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f706172656e7428706172616d31293b",
                    "cpp_ref": "inline bool NodePath::has_parent(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_parent",
                    "extern": [
                        "bool",
                        "NodePath$_$has_parent(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "has_parent",
                    "indexed": "NodePath$50$has_parent",
                    "mangled": "_inCAAAAkmIB",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_parent(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_parent_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f706172656e7428293b",
                    "cpp_ref": "inline bool NodePath::has_parent(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_parent",
                    "extern": [
                        "bool",
                        "NodePath$_$has_parent(NodePath const *param0)"
                    ],
                    "fn": "has_parent",
                    "indexed": "NodePath$51$has_parent",
                    "mangled": "_inCAAAAhc1w",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_parent(NodePath const *param0, Thread *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_parent_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f706172656e7428706172616d3129293b",
                    "cpp_ref": "inline NodePath NodePath::get_parent(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_parent",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_parent(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_parent",
                    "indexed": "NodePath$52$get_parent",
                    "mangled": "_inCAAAABn7Y",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_parent(NodePath const *param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_parent_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f706172656e742829293b",
                    "cpp_ref": "inline NodePath NodePath::get_parent(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_parent",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_parent(NodePath const *param0)"
                    ],
                    "fn": "get_parent",
                    "indexed": "NodePath$53$get_parent",
                    "mangled": "_inCAAAADcoI",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_sort(NodePath const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sort_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f736f727428706172616d31293b",
                    "cpp_ref": "int NodePath::get_sort(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sort",
                    "extern": [
                        "int",
                        "NodePath$_$get_sort(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_sort",
                    "indexed": "NodePath$54$get_sort",
                    "mangled": "_inCAAAAHJFY",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sort(NodePath const *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sort_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f736f727428293b",
                    "cpp_ref": "int NodePath::get_sort(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sort",
                    "extern": [
                        "int",
                        "NodePath$_$get_sort(NodePath const *param0)"
                    ],
                    "fn": "get_sort",
                    "indexed": "NodePath$55$get_sort",
                    "mangled": "_inCAAAAFeVI",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "path"
                    ],
                    "args": [
                        "std::string const &path"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find(NodePath const *param0, char const *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e66696e64287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "NodePath NodePath::find(std::string const &path) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$find(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find",
                    "indexed": "NodePath$56$find",
                    "mangled": "_inCAAAA1Apv",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "PandaNode *node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "PandaNode *"
                    ],
                    "c_ref": "NodePath$_$find_path_to(NodePath const *param0, PandaNode *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_path_to_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e66696e645f706174685f746f28706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::find_path_to(PandaNode *node) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_path_to",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$find_path_to(NodePath const *param0, PandaNode *param1)"
                    ],
                    "fn": "find_path_to",
                    "indexed": "NodePath$57$find_path_to",
                    "mangled": "_inCAAAAQFrr",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "path"
                    ],
                    "args": [
                        "std::string const &path"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_all_matches(NodePath const *param0, char const *param1)",
                    "c_type": "NodePathCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_matches_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f6d617463686573287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "NodePathCollection NodePath::find_all_matches(std::string const &path) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_matches",
                    "extern": [
                        "NodePathCollection *",
                        "NodePath$_$find_all_matches(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_all_matches",
                    "indexed": "NodePath$58$find_all_matches",
                    "mangled": "_inCAAAAdowK",
                    "ot": "NodePathCollection",
                    "rt": "NodePathCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "PandaNode *node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "PandaNode *"
                    ],
                    "c_ref": "NodePath$_$find_all_paths_to(NodePath const *param0, PandaNode *param1)",
                    "c_type": "NodePathCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_paths_to_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f70617468735f746f28706172616d3129293b",
                    "cpp_ref": "NodePathCollection NodePath::find_all_paths_to(PandaNode *node) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_paths_to",
                    "extern": [
                        "NodePathCollection *",
                        "NodePath$_$find_all_paths_to(NodePath const *param0, PandaNode *param1)"
                    ],
                    "fn": "find_all_paths_to",
                    "indexed": "NodePath$59$find_all_paths_to",
                    "mangled": "_inCAAAAO6Sn",
                    "ot": "NodePathCollection",
                    "rt": "NodePathCollection"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$reparent_to(NodePath *param0, NodePath const *param1, int param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_reparent_to_v_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7265706172656e745f746f282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::reparent_to(NodePath const &other, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$reparent_to",
                    "extern": [
                        "void",
                        "NodePath$_$reparent_to(NodePath *param0, NodePath const *param1, int param2, Thread *param3)"
                    ],
                    "fn": "reparent_to",
                    "indexed": "NodePath$60$reparent_to",
                    "mangled": "_inCAAAAdxiE",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "sort"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$reparent_to(NodePath *param0, NodePath const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_reparent_to_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7265706172656e745f746f282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::reparent_to(NodePath const &other, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$reparent_to",
                    "extern": [
                        "void",
                        "NodePath$_$reparent_to(NodePath *param0, NodePath const *param1, int param2)"
                    ],
                    "fn": "reparent_to",
                    "indexed": "NodePath$61$reparent_to",
                    "mangled": "_inCAAAA4WHK",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$reparent_to(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_reparent_to_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7265706172656e745f746f282a706172616d31293b",
                    "cpp_ref": "void NodePath::reparent_to(NodePath const &other, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$reparent_to",
                    "extern": [
                        "void",
                        "NodePath$_$reparent_to(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "reparent_to",
                    "indexed": "NodePath$62$reparent_to",
                    "mangled": "_inCAAAAzsyP",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$stash_to(NodePath *param0, NodePath const *param1, int param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_stash_to_v_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73746173685f746f282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::stash_to(NodePath const &other, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$stash_to",
                    "extern": [
                        "void",
                        "NodePath$_$stash_to(NodePath *param0, NodePath const *param1, int param2, Thread *param3)"
                    ],
                    "fn": "stash_to",
                    "indexed": "NodePath$63$stash_to",
                    "mangled": "_inCAAAAUB2k",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "sort"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$stash_to(NodePath *param0, NodePath const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_stash_to_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73746173685f746f282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::stash_to(NodePath const &other, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$stash_to",
                    "extern": [
                        "void",
                        "NodePath$_$stash_to(NodePath *param0, NodePath const *param1, int param2)"
                    ],
                    "fn": "stash_to",
                    "indexed": "NodePath$64$stash_to",
                    "mangled": "_inCAAAAn8L1",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$stash_to(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_stash_to_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73746173685f746f282a706172616d31293b",
                    "cpp_ref": "void NodePath::stash_to(NodePath const &other, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$stash_to",
                    "extern": [
                        "void",
                        "NodePath$_$stash_to(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "stash_to",
                    "indexed": "NodePath$65$stash_to",
                    "mangled": "_inCAAAAzzL_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$wrt_reparent_to(NodePath *param0, NodePath const *param1, int param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_wrt_reparent_to_v_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772745f7265706172656e745f746f282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::wrt_reparent_to(NodePath const &other, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$wrt_reparent_to",
                    "extern": [
                        "void",
                        "NodePath$_$wrt_reparent_to(NodePath *param0, NodePath const *param1, int param2, Thread *param3)"
                    ],
                    "fn": "wrt_reparent_to",
                    "indexed": "NodePath$66$wrt_reparent_to",
                    "mangled": "_inCAAAAVNjc",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "sort"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$wrt_reparent_to(NodePath *param0, NodePath const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_wrt_reparent_to_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772745f7265706172656e745f746f282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::wrt_reparent_to(NodePath const &other, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$wrt_reparent_to",
                    "extern": [
                        "void",
                        "NodePath$_$wrt_reparent_to(NodePath *param0, NodePath const *param1, int param2)"
                    ],
                    "fn": "wrt_reparent_to",
                    "indexed": "NodePath$67$wrt_reparent_to",
                    "mangled": "_inCAAAAln7s",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$wrt_reparent_to(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_wrt_reparent_to_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772745f7265706172656e745f746f282a706172616d31293b",
                    "cpp_ref": "void NodePath::wrt_reparent_to(NodePath const &other, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$wrt_reparent_to",
                    "extern": [
                        "void",
                        "NodePath$_$wrt_reparent_to(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "wrt_reparent_to",
                    "indexed": "NodePath$68$wrt_reparent_to",
                    "mangled": "_inCAAAAwFTN",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$instance_to(NodePath const *param0, NodePath const *param1, int param2, Thread *param3)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_instance_to_p_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e696e7374616e63655f746f282a706172616d312c20706172616d322c20706172616d3329293b",
                    "cpp_ref": "NodePath NodePath::instance_to(NodePath const &other, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$instance_to",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$instance_to(NodePath const *param0, NodePath const *param1, int param2, Thread *param3)"
                    ],
                    "fn": "instance_to",
                    "indexed": "NodePath$69$instance_to",
                    "mangled": "_inCAAAACtbj",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "sort"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$instance_to(NodePath const *param0, NodePath const *param1, int param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_instance_to_p_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e696e7374616e63655f746f282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "NodePath NodePath::instance_to(NodePath const &other, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$instance_to",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$instance_to(NodePath const *param0, NodePath const *param1, int param2)"
                    ],
                    "fn": "instance_to",
                    "indexed": "NodePath$70$instance_to",
                    "mangled": "_inCAAAA2Mo6",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$instance_to(NodePath const *param0, NodePath const *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_instance_to_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e696e7374616e63655f746f282a706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::instance_to(NodePath const &other, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$instance_to",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$instance_to(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "instance_to",
                    "indexed": "NodePath$71$instance_to",
                    "mangled": "_inCAAAATlPD",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "name",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "std::string const &name",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "std::string const&",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "char const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$instance_under_node(NodePath const *param0, NodePath const *param1, char const *param2, int param3, Thread *param4)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_instance_under_node_p_ppsip",
                    "cni_args": "ppsip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e696e7374616e63655f756e6465725f6e6f6465282a706172616d312c207374643a3a737472696e6728706172616d32292c20706172616d332c20706172616d3429293b",
                    "cpp_ref": "NodePath NodePath::instance_under_node(NodePath const &other, std::string const &name, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$instance_under_node",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$instance_under_node(NodePath const *param0, NodePath const *param1, char const *param2, int param3, Thread *param4)"
                    ],
                    "fn": "instance_under_node",
                    "indexed": "NodePath$72$instance_under_node",
                    "mangled": "_inCAAAARiLj",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "name",
                        "sort"
                    ],
                    "args": [
                        "NodePath const &other",
                        "std::string const &name",
                        "int sort"
                    ],
                    "argt": [
                        "NodePath const&",
                        "std::string const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "char const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$instance_under_node(NodePath const *param0, NodePath const *param1, char const *param2, int param3)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_instance_under_node_p_ppsi",
                    "cni_args": "ppsi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e696e7374616e63655f756e6465725f6e6f6465282a706172616d312c207374643a3a737472696e6728706172616d32292c20706172616d3329293b",
                    "cpp_ref": "NodePath NodePath::instance_under_node(NodePath const &other, std::string const &name, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$instance_under_node",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$instance_under_node(NodePath const *param0, NodePath const *param1, char const *param2, int param3)"
                    ],
                    "fn": "instance_under_node",
                    "indexed": "NodePath$73$instance_under_node",
                    "mangled": "_inCAAAAEkeG",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "name"
                    ],
                    "args": [
                        "NodePath const &other",
                        "std::string const &name"
                    ],
                    "argt": [
                        "NodePath const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$instance_under_node(NodePath const *param0, NodePath const *param1, char const *param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_instance_under_node_p_pps",
                    "cni_args": "pps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e696e7374616e63655f756e6465725f6e6f6465282a706172616d312c207374643a3a737472696e6728706172616d322929293b",
                    "cpp_ref": "NodePath NodePath::instance_under_node(NodePath const &other, std::string const &name, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$instance_under_node",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$instance_under_node(NodePath const *param0, NodePath const *param1, char const *param2)"
                    ],
                    "fn": "instance_under_node",
                    "indexed": "NodePath$74$instance_under_node",
                    "mangled": "_inCAAAAerny",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$copy_to(NodePath const *param0, NodePath const *param1, int param2, Thread *param3)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_copy_to_p_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e636f70795f746f282a706172616d312c20706172616d322c20706172616d3329293b",
                    "cpp_ref": "NodePath NodePath::copy_to(NodePath const &other, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$copy_to",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$copy_to(NodePath const *param0, NodePath const *param1, int param2, Thread *param3)"
                    ],
                    "fn": "copy_to",
                    "indexed": "NodePath$75$copy_to",
                    "mangled": "_inCAAAAtacp",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "sort"
                    ],
                    "args": [
                        "NodePath const &other",
                        "int sort"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$copy_to(NodePath const *param0, NodePath const *param1, int param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_copy_to_p_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e636f70795f746f282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "NodePath NodePath::copy_to(NodePath const &other, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$copy_to",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$copy_to(NodePath const *param0, NodePath const *param1, int param2)"
                    ],
                    "fn": "copy_to",
                    "indexed": "NodePath$76$copy_to",
                    "mangled": "_inCAAAAxTlc",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$copy_to(NodePath const *param0, NodePath const *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_copy_to_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e636f70795f746f282a706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::copy_to(NodePath const &other, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$copy_to",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$copy_to(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "copy_to",
                    "indexed": "NodePath$77$copy_to",
                    "mangled": "_inCAAAAtI_l",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 3,
                    "argn": [
                        "node",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *node",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "PandaNode *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$attach_new_node(NodePath const *param0, PandaNode *param1, int param2, Thread *param3)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_attach_new_node_p_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6174746163685f6e65775f6e6f646528706172616d312c20706172616d322c20706172616d3329293b",
                    "cpp_ref": "NodePath NodePath::attach_new_node(PandaNode *node, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$attach_new_node",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$attach_new_node(NodePath const *param0, PandaNode *param1, int param2, Thread *param3)"
                    ],
                    "fn": "attach_new_node",
                    "indexed": "NodePath$78$attach_new_node",
                    "mangled": "_inCAAAA6KoR",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "node",
                        "sort"
                    ],
                    "args": [
                        "PandaNode *node",
                        "int sort"
                    ],
                    "argt": [
                        "PandaNode*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$attach_new_node(NodePath const *param0, PandaNode *param1, int param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_attach_new_node_p_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6174746163685f6e65775f6e6f646528706172616d312c20706172616d3229293b",
                    "cpp_ref": "NodePath NodePath::attach_new_node(PandaNode *node, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$attach_new_node",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$attach_new_node(NodePath const *param0, PandaNode *param1, int param2)"
                    ],
                    "fn": "attach_new_node",
                    "indexed": "NodePath$79$attach_new_node",
                    "mangled": "_inCAAAAnUwe",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "PandaNode *node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "PandaNode *"
                    ],
                    "c_ref": "NodePath$_$attach_new_node(NodePath const *param0, PandaNode *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_attach_new_node_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6174746163685f6e65775f6e6f646528706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::attach_new_node(PandaNode *node, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$attach_new_node",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$attach_new_node(NodePath const *param0, PandaNode *param1)"
                    ],
                    "fn": "attach_new_node",
                    "indexed": "NodePath$80$attach_new_node",
                    "mangled": "_inCAAAA9EWP",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 3,
                    "argn": [
                        "name",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "std::string const &name",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "std::string const&",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$attach_new_node(NodePath const *param0, char const *param1, int param2, Thread *param3)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_attach_new_node_p_psip",
                    "cni_args": "psip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6174746163685f6e65775f6e6f6465287374643a3a737472696e6728706172616d31292c20706172616d322c20706172616d3329293b",
                    "cpp_ref": "inline NodePath NodePath::attach_new_node(std::string const &name, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$attach_new_node",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$attach_new_node(NodePath const *param0, char const *param1, int param2, Thread *param3)"
                    ],
                    "fn": "attach_new_node",
                    "indexed": "NodePath$81$attach_new_node",
                    "mangled": "_inCAAAAmasN",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "name",
                        "sort"
                    ],
                    "args": [
                        "std::string const &name",
                        "int sort"
                    ],
                    "argt": [
                        "std::string const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$attach_new_node(NodePath const *param0, char const *param1, int param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_attach_new_node_p_psi",
                    "cni_args": "psi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6174746163685f6e65775f6e6f6465287374643a3a737472696e6728706172616d31292c20706172616d3229293b",
                    "cpp_ref": "inline NodePath NodePath::attach_new_node(std::string const &name, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$attach_new_node",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$attach_new_node(NodePath const *param0, char const *param1, int param2)"
                    ],
                    "fn": "attach_new_node",
                    "indexed": "NodePath$82$attach_new_node",
                    "mangled": "_inCAAAAjl0a",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$attach_new_node(NodePath const *param0, char const *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_attach_new_node_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6174746163685f6e65775f6e6f6465287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "inline NodePath NodePath::attach_new_node(std::string const &name, int sort, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$attach_new_node",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$attach_new_node(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "attach_new_node",
                    "indexed": "NodePath$83$attach_new_node",
                    "mangled": "_inCAAAAk6aL",
                    "ot": "inline NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$remove_node(NodePath *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_remove_node_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f6e6f646528706172616d31293b",
                    "cpp_ref": "void NodePath::remove_node(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$remove_node",
                    "extern": [
                        "void",
                        "NodePath$_$remove_node(NodePath *param0, Thread *param1)"
                    ],
                    "fn": "remove_node",
                    "indexed": "NodePath$84$remove_node",
                    "mangled": "_inCAAAAMmwt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$remove_node(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_remove_node_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f6e6f646528293b",
                    "cpp_ref": "void NodePath::remove_node(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$remove_node",
                    "extern": [
                        "void",
                        "NodePath$_$remove_node(NodePath *param0)"
                    ],
                    "fn": "remove_node",
                    "indexed": "NodePath$85$remove_node",
                    "mangled": "_inCAAAAliuR",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$detach_node(NodePath *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_detach_node_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6465746163685f6e6f646528706172616d31293b",
                    "cpp_ref": "void NodePath::detach_node(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$detach_node",
                    "extern": [
                        "void",
                        "NodePath$_$detach_node(NodePath *param0, Thread *param1)"
                    ],
                    "fn": "detach_node",
                    "indexed": "NodePath$86$detach_node",
                    "mangled": "_inCAAAArQzO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$detach_node(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_detach_node_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6465746163685f6e6f646528293b",
                    "cpp_ref": "void NodePath::detach_node(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$detach_node",
                    "extern": [
                        "void",
                        "NodePath$_$detach_node(NodePath *param0)"
                    ],
                    "fn": "detach_node",
                    "indexed": "NodePath$87$detach_node",
                    "mangled": "_inCAAAAgfzy",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "std::ostream *"
                    ],
                    "c_ref": "NodePath$_$output(NodePath const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "void NodePath::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$output",
                    "extern": [
                        "void",
                        "NodePath$_$output(NodePath const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "NodePath$88$output",
                    "mangled": "_inCAAAAhwrv",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$ls(NodePath const *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ls_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c7328293b",
                    "cpp_ref": "inline void NodePath::ls(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$ls",
                    "extern": [
                        "void",
                        "NodePath$_$ls(NodePath const *param0)"
                    ],
                    "fn": "ls",
                    "indexed": "NodePath$89$ls",
                    "mangled": "_inCAAAAvoLL",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$ls(NodePath const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ls_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c73282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::ls(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$ls",
                    "extern": [
                        "void",
                        "NodePath$_$ls(NodePath const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "ls",
                    "indexed": "NodePath$90$ls",
                    "mangled": "_inCAAAAjFej",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "std::ostream *"
                    ],
                    "c_ref": "NodePath$_$ls(NodePath const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_ls_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c73282a706172616d31293b",
                    "cpp_ref": "inline void NodePath::ls(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$ls",
                    "extern": [
                        "void",
                        "NodePath$_$ls(NodePath const *param0, std::ostream *param1)"
                    ],
                    "fn": "ls",
                    "indexed": "NodePath$91$ls",
                    "mangled": "_inCAAAA_0nP",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$reverse_ls(NodePath const *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_reverse_ls_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e726576657273655f6c7328293b",
                    "cpp_ref": "inline void NodePath::reverse_ls(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$reverse_ls",
                    "extern": [
                        "void",
                        "NodePath$_$reverse_ls(NodePath const *param0)"
                    ],
                    "fn": "reverse_ls",
                    "indexed": "NodePath$92$reverse_ls",
                    "mangled": "_inCAAAAh7pG",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$reverse_ls(NodePath const *param0, std::ostream *param1, int param2)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_reverse_ls_i_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e726576657273655f6c73282a706172616d312c20706172616d32293b",
                    "cpp_ref": "int NodePath::reverse_ls(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$reverse_ls",
                    "extern": [
                        "int",
                        "NodePath$_$reverse_ls(NodePath const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "reverse_ls",
                    "indexed": "NodePath$93$reverse_ls",
                    "mangled": "_inCAAAAWQ62",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "std::ostream *"
                    ],
                    "c_ref": "NodePath$_$reverse_ls(NodePath const *param0, std::ostream *param1)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_reverse_ls_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e726576657273655f6c73282a706172616d31293b",
                    "cpp_ref": "int NodePath::reverse_ls(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$reverse_ls",
                    "extern": [
                        "int",
                        "NodePath$_$reverse_ls(NodePath const *param0, std::ostream *param1)"
                    ],
                    "fn": "reverse_ls",
                    "indexed": "NodePath$94$reverse_ls",
                    "mangled": "_inCAAAAGsGI",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_state(NodePath const *param0, NodePath const *param1, Thread *param2)",
                    "c_type": "ConstPointerTo< RenderState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_state_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e6465725374617465203e28282a706172616d30292e6765745f7374617465282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "ConstPointerTo< RenderState > NodePath::get_state(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_state",
                    "extern": [
                        "ConstPointerTo< RenderState > *",
                        "NodePath$_$get_state(NodePath const *param0, NodePath const *param1, Thread *param2)"
                    ],
                    "fn": "get_state",
                    "indexed": "NodePath$95$get_state",
                    "mangled": "_inCAAAA8qvj",
                    "ot": "ConstPointerTo< RenderState >",
                    "rt": "RenderState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_state(NodePath const *param0, NodePath const *param1)",
                    "c_type": "ConstPointerTo< RenderState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_state_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e6465725374617465203e28282a706172616d30292e6765745f7374617465282a706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< RenderState > NodePath::get_state(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_state",
                    "extern": [
                        "ConstPointerTo< RenderState > *",
                        "NodePath$_$get_state(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_state",
                    "indexed": "NodePath$96$get_state",
                    "mangled": "_inCAAAAu5LY",
                    "ot": "ConstPointerTo< RenderState >",
                    "rt": "RenderState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_state(NodePath const *param0, Thread *param1)",
                    "c_type": "RenderState const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_state_p_pp_1_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f737461746528706172616d31293b",
                    "cpp_ref": "RenderState const *NodePath::get_state(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_state",
                    "extern": [
                        "RenderState const *",
                        "NodePath$_$get_state(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_state",
                    "indexed": "NodePath$97$get_state",
                    "mangled": "_inCAAAANmZv",
                    "ot": "RenderState const*",
                    "rt": "RenderState"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_state(NodePath const *param0)",
                    "c_type": "RenderState const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_state_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f737461746528293b",
                    "cpp_ref": "RenderState const *NodePath::get_state(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_state",
                    "extern": [
                        "RenderState const *",
                        "NodePath$_$get_state(NodePath const *param0)"
                    ],
                    "fn": "get_state",
                    "indexed": "NodePath$98$get_state",
                    "mangled": "_inCAAAAMd52",
                    "ot": "RenderState const*",
                    "rt": "RenderState"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "state",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "RenderState const *state",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "RenderState const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "RenderState const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$set_state(NodePath *param0, NodePath const *param1, RenderState const *param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_state_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7374617465282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_state(NodePath const &other, RenderState const *state, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_state",
                    "extern": [
                        "void",
                        "NodePath$_$set_state(NodePath *param0, NodePath const *param1, RenderState const *param2, Thread *param3)"
                    ],
                    "fn": "set_state",
                    "indexed": "NodePath$99$set_state",
                    "mangled": "_inCAAAAIp0D",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "state"
                    ],
                    "args": [
                        "NodePath const &other",
                        "RenderState const *state"
                    ],
                    "argt": [
                        "NodePath const&",
                        "RenderState const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "RenderState const *"
                    ],
                    "c_ref": "NodePath$_$set_state(NodePath *param0, NodePath const *param1, RenderState const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_state_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7374617465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_state(NodePath const &other, RenderState const *state, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_state",
                    "extern": [
                        "void",
                        "NodePath$_$set_state(NodePath *param0, NodePath const *param1, RenderState const *param2)"
                    ],
                    "fn": "set_state",
                    "indexed": "NodePath$100$set_state",
                    "mangled": "_inCAAAAojNF",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "state",
                        "current_thread"
                    ],
                    "args": [
                        "RenderState const *state",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "RenderState const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "RenderState const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$set_state(NodePath *param0, RenderState const *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_state_v_ppp_1_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f737461746528706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_state(RenderState const *state, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_state",
                    "extern": [
                        "void",
                        "NodePath$_$set_state(NodePath *param0, RenderState const *param1, Thread *param2)"
                    ],
                    "fn": "set_state",
                    "indexed": "NodePath$101$set_state",
                    "mangled": "_inCAAAADhE4",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "state"
                    ],
                    "args": [
                        "RenderState const *state"
                    ],
                    "argt": [
                        "RenderState const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "RenderState const *"
                    ],
                    "c_ref": "NodePath$_$set_state(NodePath *param0, RenderState const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_state_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f737461746528706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_state(RenderState const *state, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_state",
                    "extern": [
                        "void",
                        "NodePath$_$set_state(NodePath *param0, RenderState const *param1)"
                    ],
                    "fn": "set_state",
                    "indexed": "NodePath$102$set_state",
                    "mangled": "_inCAAAAYTbI",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_net_state(NodePath const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< RenderState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_net_state_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e6465725374617465203e28282a706172616d30292e6765745f6e65745f737461746528706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< RenderState > NodePath::get_net_state(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_net_state",
                    "extern": [
                        "ConstPointerTo< RenderState > *",
                        "NodePath$_$get_net_state(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_net_state",
                    "indexed": "NodePath$103$get_net_state",
                    "mangled": "_inCAAAAT2Wy",
                    "ot": "inline ConstPointerTo< RenderState >",
                    "rt": "RenderState"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_net_state(NodePath const *param0)",
                    "c_type": "ConstPointerTo< RenderState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_net_state_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e6465725374617465203e28282a706172616d30292e6765745f6e65745f73746174652829293b",
                    "cpp_ref": "inline ConstPointerTo< RenderState > NodePath::get_net_state(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_net_state",
                    "extern": [
                        "ConstPointerTo< RenderState > *",
                        "NodePath$_$get_net_state(NodePath const *param0)"
                    ],
                    "fn": "get_net_state",
                    "indexed": "NodePath$104$get_net_state",
                    "mangled": "_inCAAAAxk0S",
                    "ot": "inline ConstPointerTo< RenderState >",
                    "rt": "RenderState"
                },
                {
                    "argc": 2,
                    "argn": [
                        "attrib",
                        "priority"
                    ],
                    "args": [
                        "RenderAttrib const *attrib",
                        "int priority"
                    ],
                    "argt": [
                        "RenderAttrib const*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "RenderAttrib const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_attrib(NodePath *param0, RenderAttrib const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_attrib_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f61747472696228706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_attrib(RenderAttrib const *attrib, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_attrib",
                    "extern": [
                        "void",
                        "NodePath$_$set_attrib(NodePath *param0, RenderAttrib const *param1, int param2)"
                    ],
                    "fn": "set_attrib",
                    "indexed": "NodePath$105$set_attrib",
                    "mangled": "_inCAAAA_hqK",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "attrib"
                    ],
                    "args": [
                        "RenderAttrib const *attrib"
                    ],
                    "argt": [
                        "RenderAttrib const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "RenderAttrib const *"
                    ],
                    "c_ref": "NodePath$_$set_attrib(NodePath *param0, RenderAttrib const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_attrib_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f61747472696228706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_attrib(RenderAttrib const *attrib, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_attrib",
                    "extern": [
                        "void",
                        "NodePath$_$set_attrib(NodePath *param0, RenderAttrib const *param1)"
                    ],
                    "fn": "set_attrib",
                    "indexed": "NodePath$106$set_attrib",
                    "mangled": "_inCAAAAsv7c",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$get_attrib(NodePath const *param0, int param1)",
                    "c_type": "RenderAttrib const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_attrib_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f617474726962285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline RenderAttrib const *NodePath::get_attrib(TypeHandle type) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_attrib",
                    "extern": [
                        "RenderAttrib const *",
                        "NodePath$_$get_attrib(NodePath const *param0, int param1)"
                    ],
                    "fn": "get_attrib",
                    "indexed": "NodePath$107$get_attrib",
                    "mangled": "_inCAAAAEHFA",
                    "ot": "inline RenderAttrib const*",
                    "rt": "RenderAttrib"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$has_attrib(NodePath const *param0, int param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_attrib_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f617474726962285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline bool NodePath::has_attrib(TypeHandle type) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_attrib",
                    "extern": [
                        "bool",
                        "NodePath$_$has_attrib(NodePath const *param0, int param1)"
                    ],
                    "fn": "has_attrib",
                    "indexed": "NodePath$108$has_attrib",
                    "mangled": "_inCAAAA_GQo",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$clear_attrib(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_attrib_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f617474726962285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline void NodePath::clear_attrib(TypeHandle type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_attrib",
                    "extern": [
                        "void",
                        "NodePath$_$clear_attrib(NodePath *param0, int param1)"
                    ],
                    "fn": "clear_attrib",
                    "indexed": "NodePath$109$clear_attrib",
                    "mangled": "_inCAAAA9ZOD",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "effect"
                    ],
                    "args": [
                        "RenderEffect const *effect"
                    ],
                    "argt": [
                        "RenderEffect const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "RenderEffect const *"
                    ],
                    "c_ref": "NodePath$_$set_effect(NodePath *param0, RenderEffect const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_effect_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f65666665637428706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_effect(RenderEffect const *effect)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_effect",
                    "extern": [
                        "void",
                        "NodePath$_$set_effect(NodePath *param0, RenderEffect const *param1)"
                    ],
                    "fn": "set_effect",
                    "indexed": "NodePath$110$set_effect",
                    "mangled": "_inCAAAADDCe",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$get_effect(NodePath const *param0, int param1)",
                    "c_type": "RenderEffect const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_effect_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f656666656374285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline RenderEffect const *NodePath::get_effect(TypeHandle type) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_effect",
                    "extern": [
                        "RenderEffect const *",
                        "NodePath$_$get_effect(NodePath const *param0, int param1)"
                    ],
                    "fn": "get_effect",
                    "indexed": "NodePath$111$get_effect",
                    "mangled": "_inCAAAAYm6g",
                    "ot": "inline RenderEffect const*",
                    "rt": "RenderEffect"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$has_effect(NodePath const *param0, int param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_effect_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f656666656374285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline bool NodePath::has_effect(TypeHandle type) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_effect",
                    "extern": [
                        "bool",
                        "NodePath$_$has_effect(NodePath const *param0, int param1)"
                    ],
                    "fn": "has_effect",
                    "indexed": "NodePath$112$has_effect",
                    "mangled": "_inCAAAA_pJJ",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$clear_effect(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_effect_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f656666656374285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline void NodePath::clear_effect(TypeHandle type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_effect",
                    "extern": [
                        "void",
                        "NodePath$_$clear_effect(NodePath *param0, int param1)"
                    ],
                    "fn": "clear_effect",
                    "indexed": "NodePath$113$clear_effect",
                    "mangled": "_inCAAAAEpe3",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "effects"
                    ],
                    "args": [
                        "RenderEffects const *effects"
                    ],
                    "argt": [
                        "RenderEffects const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "RenderEffects const *"
                    ],
                    "c_ref": "NodePath$_$set_effects(NodePath *param0, RenderEffects const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_effects_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6566666563747328706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_effects(RenderEffects const *effects)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_effects",
                    "extern": [
                        "void",
                        "NodePath$_$set_effects(NodePath *param0, RenderEffects const *param1)"
                    ],
                    "fn": "set_effects",
                    "indexed": "NodePath$114$set_effects",
                    "mangled": "_inCAAAAPD2Q",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_effects(NodePath const *param0)",
                    "c_type": "RenderEffects const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_effects_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6566666563747328293b",
                    "cpp_ref": "inline RenderEffects const *NodePath::get_effects(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_effects",
                    "extern": [
                        "RenderEffects const *",
                        "NodePath$_$get_effects(NodePath const *param0)"
                    ],
                    "fn": "get_effects",
                    "indexed": "NodePath$115$get_effects",
                    "mangled": "_inCAAAAuJzu",
                    "ot": "inline RenderEffects const*",
                    "rt": "RenderEffects"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_effects(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_effects_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6566666563747328293b",
                    "cpp_ref": "inline void NodePath::clear_effects(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_effects",
                    "extern": [
                        "void",
                        "NodePath$_$clear_effects(NodePath *param0)"
                    ],
                    "fn": "clear_effects",
                    "indexed": "NodePath$116$clear_effects",
                    "mangled": "_inCAAAAZ8BC",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_transform(NodePath const *param0, NodePath const *param1, Thread *param2)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_transform_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f7472616e73666f726d282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "ConstPointerTo< TransformState > NodePath::get_transform(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_transform(NodePath const *param0, NodePath const *param1, Thread *param2)"
                    ],
                    "fn": "get_transform",
                    "indexed": "NodePath$117$get_transform",
                    "mangled": "_inCAAAAu8Qi",
                    "ot": "ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_transform(NodePath const *param0, NodePath const *param1)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_transform_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f7472616e73666f726d282a706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< TransformState > NodePath::get_transform(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_transform(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_transform",
                    "indexed": "NodePath$118$get_transform",
                    "mangled": "_inCAAAA25iF",
                    "ot": "ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_transform(NodePath const *param0, Thread *param1)",
                    "c_type": "TransformState const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_transform_p_pp_1_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "TransformState const *NodePath::get_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_transform",
                    "extern": [
                        "TransformState const *",
                        "NodePath$_$get_transform(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_transform",
                    "indexed": "NodePath$119$get_transform",
                    "mangled": "_inCAAAA_qAT",
                    "ot": "TransformState const*",
                    "rt": "TransformState"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_transform(NodePath const *param0)",
                    "c_type": "TransformState const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_transform_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7472616e73666f726d28293b",
                    "cpp_ref": "TransformState const *NodePath::get_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_transform",
                    "extern": [
                        "TransformState const *",
                        "NodePath$_$get_transform(NodePath const *param0)"
                    ],
                    "fn": "get_transform",
                    "indexed": "NodePath$120$get_transform",
                    "mangled": "_inCAAAAbFez",
                    "ot": "TransformState const*",
                    "rt": "TransformState"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$clear_transform(NodePath *param0, NodePath const *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_transform_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7472616e73666f726d282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::clear_transform(NodePath const &other, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_transform",
                    "extern": [
                        "void",
                        "NodePath$_$clear_transform(NodePath *param0, NodePath const *param1, Thread *param2)"
                    ],
                    "fn": "clear_transform",
                    "indexed": "NodePath$121$clear_transform",
                    "mangled": "_inCAAAA4KfH",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$clear_transform(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_transform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7472616e73666f726d282a706172616d31293b",
                    "cpp_ref": "inline void NodePath::clear_transform(NodePath const &other, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_transform",
                    "extern": [
                        "void",
                        "NodePath$_$clear_transform(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "clear_transform",
                    "indexed": "NodePath$122$clear_transform",
                    "mangled": "_inCAAAAQssv",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$clear_transform(NodePath *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_transform_v_pp_1_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "inline void NodePath::clear_transform(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_transform",
                    "extern": [
                        "void",
                        "NodePath$_$clear_transform(NodePath *param0, Thread *param1)"
                    ],
                    "fn": "clear_transform",
                    "indexed": "NodePath$123$clear_transform",
                    "mangled": "_inCAAAAw8h9",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_transform(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_transform_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7472616e73666f726d28293b",
                    "cpp_ref": "inline void NodePath::clear_transform(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_transform",
                    "extern": [
                        "void",
                        "NodePath$_$clear_transform(NodePath *param0)"
                    ],
                    "fn": "clear_transform",
                    "indexed": "NodePath$124$clear_transform",
                    "mangled": "_inCAAAAH5x7",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "transform",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TransformState const *transform",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TransformState const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TransformState const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$set_transform(NodePath *param0, NodePath const *param1, TransformState const *param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_transform_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73666f726d282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_transform(NodePath const &other, TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_transform(NodePath *param0, NodePath const *param1, TransformState const *param2, Thread *param3)"
                    ],
                    "fn": "set_transform",
                    "indexed": "NodePath$125$set_transform",
                    "mangled": "_inCAAAAV_k2",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "transform"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TransformState const *transform"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TransformState const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TransformState const *"
                    ],
                    "c_ref": "NodePath$_$set_transform(NodePath *param0, NodePath const *param1, TransformState const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_transform_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73666f726d282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_transform(NodePath const &other, TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_transform(NodePath *param0, NodePath const *param1, TransformState const *param2)"
                    ],
                    "fn": "set_transform",
                    "indexed": "NodePath$126$set_transform",
                    "mangled": "_inCAAAAOC4G",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "transform",
                        "current_thread"
                    ],
                    "args": [
                        "TransformState const *transform",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "TransformState const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TransformState const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$set_transform(NodePath *param0, TransformState const *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_transform_v_ppp_1_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73666f726d28706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_transform(TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_transform(NodePath *param0, TransformState const *param1, Thread *param2)"
                    ],
                    "fn": "set_transform",
                    "indexed": "NodePath$127$set_transform",
                    "mangled": "_inCAAAACDwY",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "transform"
                    ],
                    "args": [
                        "TransformState const *transform"
                    ],
                    "argt": [
                        "TransformState const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TransformState const *"
                    ],
                    "c_ref": "NodePath$_$set_transform(NodePath *param0, TransformState const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_transform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_transform(TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_transform(NodePath *param0, TransformState const *param1)"
                    ],
                    "fn": "set_transform",
                    "indexed": "NodePath$128$set_transform",
                    "mangled": "_inCAAAAOl1c",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_net_transform(NodePath const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_net_transform_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f6e65745f7472616e73666f726d28706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< TransformState > NodePath::get_net_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_net_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_net_transform(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_net_transform",
                    "indexed": "NodePath$129$get_net_transform",
                    "mangled": "_inCAAAAkhio",
                    "ot": "inline ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_net_transform(NodePath const *param0)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_net_transform_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f6e65745f7472616e73666f726d2829293b",
                    "cpp_ref": "inline ConstPointerTo< TransformState > NodePath::get_net_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_net_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_net_transform(NodePath const *param0)"
                    ],
                    "fn": "get_net_transform",
                    "indexed": "NodePath$130$get_net_transform",
                    "mangled": "_inCAAAAdCm_",
                    "ot": "inline ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_prev_transform(NodePath const *param0, NodePath const *param1, Thread *param2)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_prev_transform_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f707265765f7472616e73666f726d282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "ConstPointerTo< TransformState > NodePath::get_prev_transform(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_prev_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_prev_transform(NodePath const *param0, NodePath const *param1, Thread *param2)"
                    ],
                    "fn": "get_prev_transform",
                    "indexed": "NodePath$131$get_prev_transform",
                    "mangled": "_inCAAAAPA07",
                    "ot": "ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_prev_transform(NodePath const *param0, NodePath const *param1)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_prev_transform_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f707265765f7472616e73666f726d282a706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< TransformState > NodePath::get_prev_transform(NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_prev_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_prev_transform(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_prev_transform",
                    "indexed": "NodePath$132$get_prev_transform",
                    "mangled": "_inCAAAAIeYC",
                    "ot": "ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_prev_transform(NodePath const *param0, Thread *param1)",
                    "c_type": "TransformState const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_prev_transform_p_pp_1_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f707265765f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "TransformState const *NodePath::get_prev_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_prev_transform",
                    "extern": [
                        "TransformState const *",
                        "NodePath$_$get_prev_transform(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_prev_transform",
                    "indexed": "NodePath$133$get_prev_transform",
                    "mangled": "_inCAAAAUJSd",
                    "ot": "TransformState const*",
                    "rt": "TransformState"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_prev_transform(NodePath const *param0)",
                    "c_type": "TransformState const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_prev_transform_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f707265765f7472616e73666f726d28293b",
                    "cpp_ref": "TransformState const *NodePath::get_prev_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_prev_transform",
                    "extern": [
                        "TransformState const *",
                        "NodePath$_$get_prev_transform(NodePath const *param0)"
                    ],
                    "fn": "get_prev_transform",
                    "indexed": "NodePath$134$get_prev_transform",
                    "mangled": "_inCAAAAaXOe",
                    "ot": "TransformState const*",
                    "rt": "TransformState"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "transform",
                        "current_thread"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TransformState const *transform",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TransformState const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TransformState const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$set_prev_transform(NodePath *param0, NodePath const *param1, TransformState const *param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_prev_transform_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f707265765f7472616e73666f726d282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_prev_transform(NodePath const &other, TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_prev_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_prev_transform(NodePath *param0, NodePath const *param1, TransformState const *param2, Thread *param3)"
                    ],
                    "fn": "set_prev_transform",
                    "indexed": "NodePath$135$set_prev_transform",
                    "mangled": "_inCAAAAbxkj",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "transform"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TransformState const *transform"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TransformState const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TransformState const *"
                    ],
                    "c_ref": "NodePath$_$set_prev_transform(NodePath *param0, NodePath const *param1, TransformState const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_prev_transform_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f707265765f7472616e73666f726d282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_prev_transform(NodePath const &other, TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_prev_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_prev_transform(NodePath *param0, NodePath const *param1, TransformState const *param2)"
                    ],
                    "fn": "set_prev_transform",
                    "indexed": "NodePath$136$set_prev_transform",
                    "mangled": "_inCAAAAKELE",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "transform",
                        "current_thread"
                    ],
                    "args": [
                        "TransformState const *transform",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "TransformState const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TransformState const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$set_prev_transform(NodePath *param0, TransformState const *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_prev_transform_v_ppp_1_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f707265765f7472616e73666f726d28706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_prev_transform(TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_prev_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_prev_transform(NodePath *param0, TransformState const *param1, Thread *param2)"
                    ],
                    "fn": "set_prev_transform",
                    "indexed": "NodePath$137$set_prev_transform",
                    "mangled": "_inCAAAATR3n",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "transform"
                    ],
                    "args": [
                        "TransformState const *transform"
                    ],
                    "argt": [
                        "TransformState const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TransformState const *"
                    ],
                    "c_ref": "NodePath$_$set_prev_transform(NodePath *param0, TransformState const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_prev_transform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f707265765f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_prev_transform(TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_prev_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_prev_transform(NodePath *param0, TransformState const *param1)"
                    ],
                    "fn": "set_prev_transform",
                    "indexed": "NodePath$138$set_prev_transform",
                    "mangled": "_inCAAAAgmBw",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_net_prev_transform(NodePath const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_net_prev_transform_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f6e65745f707265765f7472616e73666f726d28706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< TransformState > NodePath::get_net_prev_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_net_prev_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_net_prev_transform(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_net_prev_transform",
                    "indexed": "NodePath$139$get_net_prev_transform",
                    "mangled": "_inCAAAAU8Kx",
                    "ot": "inline ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_net_prev_transform(NodePath const *param0)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_net_prev_transform_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f6e65745f707265765f7472616e73666f726d2829293b",
                    "cpp_ref": "inline ConstPointerTo< TransformState > NodePath::get_net_prev_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_net_prev_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_net_prev_transform(NodePath const *param0)"
                    ],
                    "fn": "get_net_prev_transform",
                    "indexed": "NodePath$140$get_net_prev_transform",
                    "mangled": "_inCAAAAq_Pd",
                    "ot": "inline ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pos"
                    ],
                    "args": [
                        "LVecBase3 const &pos"
                    ],
                    "argt": [
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos(NodePath *param0, LVecBase3 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f73282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_pos(LVecBase3 const &pos)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos(NodePath *param0, LVecBase3 const *param1)"
                    ],
                    "fn": "set_pos",
                    "indexed": "NodePath$141$set_pos",
                    "mangled": "_inCAAAA3i6b",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "pos"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &pos"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f73282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_pos(NodePath const &other, LVecBase3 const &pos)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_pos",
                    "indexed": "NodePath$142$set_pos",
                    "mangled": "_inCAAAAXD9n",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_pos(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f73282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_pos(NodePath const &other, PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_pos",
                    "indexed": "NodePath$143$set_pos",
                    "mangled": "_inCAAAAH3iU",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_pos(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f7328706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_pos(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_pos",
                    "indexed": "NodePath$144$set_pos",
                    "mangled": "_inCAAAAoMAH",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "x"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat x"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_x(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_x_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f78282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_x(NodePath const &other, PN_stdfloat x)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_x",
                    "extern": [
                        "void",
                        "NodePath$_$set_x(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_x",
                    "indexed": "NodePath$145$set_x",
                    "mangled": "_inCAAAAUVBV",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "x"
                    ],
                    "args": [
                        "PN_stdfloat x"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_x(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_x_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7828706172616d31293b",
                    "cpp_ref": "void NodePath::set_x(PN_stdfloat x)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_x",
                    "extern": [
                        "void",
                        "NodePath$_$set_x(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_x",
                    "indexed": "NodePath$146$set_x",
                    "mangled": "_inCAAAAV_sG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "y"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat y"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_y(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_y_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f79282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_y(NodePath const &other, PN_stdfloat y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_y",
                    "extern": [
                        "void",
                        "NodePath$_$set_y(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_y",
                    "indexed": "NodePath$147$set_y",
                    "mangled": "_inCAAAA2pBF",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "y"
                    ],
                    "args": [
                        "PN_stdfloat y"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_y(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_y_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7928706172616d31293b",
                    "cpp_ref": "void NodePath::set_y(PN_stdfloat y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_y",
                    "extern": [
                        "void",
                        "NodePath$_$set_y(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_y",
                    "indexed": "NodePath$148$set_y",
                    "mangled": "_inCAAAAyss2",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "z"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_z(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_z_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7a282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_z(NodePath const &other, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_z",
                    "extern": [
                        "void",
                        "NodePath$_$set_z(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_z",
                    "indexed": "NodePath$149$set_z",
                    "mangled": "_inCAAAAX8B1",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "z"
                    ],
                    "args": [
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_z(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_z_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7a28706172616d31293b",
                    "cpp_ref": "void NodePath::set_z(PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_z",
                    "extern": [
                        "void",
                        "NodePath$_$set_z(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_z",
                    "indexed": "NodePath$150$set_z",
                    "mangled": "_inCAAAAQQsm",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pos"
                    ],
                    "args": [
                        "LVecBase3 const &pos"
                    ],
                    "argt": [
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_fluid_pos(NodePath *param0, LVecBase3 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_pos_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f706f73282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_fluid_pos(LVecBase3 const &pos)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_pos(NodePath *param0, LVecBase3 const *param1)"
                    ],
                    "fn": "set_fluid_pos",
                    "indexed": "NodePath$151$set_fluid_pos",
                    "mangled": "_inCAAAAlMna",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "pos"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &pos"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_fluid_pos(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_pos_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f706f73282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_fluid_pos(NodePath const &other, LVecBase3 const &pos)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_pos(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_fluid_pos",
                    "indexed": "NodePath$152$set_fluid_pos",
                    "mangled": "_inCAAAAXcgd",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_fluid_pos(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_pos_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f706f73282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_fluid_pos(NodePath const &other, PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_pos(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_fluid_pos",
                    "indexed": "NodePath$153$set_fluid_pos",
                    "mangled": "_inCAAAAIRoJ",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_fluid_pos(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_pos_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f706f7328706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_fluid_pos(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_pos(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_fluid_pos",
                    "indexed": "NodePath$154$set_fluid_pos",
                    "mangled": "_inCAAAAR0jl",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "x"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat x"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_fluid_x(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_x_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f78282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_fluid_x(NodePath const &other, PN_stdfloat x)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_x",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_x(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_fluid_x",
                    "indexed": "NodePath$155$set_fluid_x",
                    "mangled": "_inCAAAAhjSk",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "x"
                    ],
                    "args": [
                        "PN_stdfloat x"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_fluid_x(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_x_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f7828706172616d31293b",
                    "cpp_ref": "void NodePath::set_fluid_x(PN_stdfloat x)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_x",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_x(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_fluid_x",
                    "indexed": "NodePath$156$set_fluid_x",
                    "mangled": "_inCAAAAiqfN",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "y"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat y"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_fluid_y(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_y_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f79282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_fluid_y(NodePath const &other, PN_stdfloat y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_y",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_y(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_fluid_y",
                    "indexed": "NodePath$157$set_fluid_y",
                    "mangled": "_inCAAAARBlk",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "y"
                    ],
                    "args": [
                        "PN_stdfloat y"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_fluid_y(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_y_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f7928706172616d31293b",
                    "cpp_ref": "void NodePath::set_fluid_y(PN_stdfloat y)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_y",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_y(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_fluid_y",
                    "indexed": "NodePath$158$set_fluid_y",
                    "mangled": "_inCAAAAyIyN",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "z"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_fluid_z(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_z_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f7a282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_fluid_z(NodePath const &other, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_z",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_z(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_fluid_z",
                    "indexed": "NodePath$159$set_fluid_z",
                    "mangled": "_inCAAAABf5k",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "z"
                    ],
                    "args": [
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_fluid_z(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fluid_z_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666c7569645f7a28706172616d31293b",
                    "cpp_ref": "void NodePath::set_fluid_z(PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fluid_z",
                    "extern": [
                        "void",
                        "NodePath$_$set_fluid_z(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_fluid_z",
                    "indexed": "NodePath$160$set_fluid_z",
                    "mangled": "_inCAAAACvGO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_pos(NodePath const *param0)",
                    "c_type": "LPoint3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_pos_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c506f696e743328282a706172616d30292e6765745f706f732829293b",
                    "cpp_ref": "LPoint3 NodePath::get_pos(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_pos",
                    "extern": [
                        "LPoint3 *",
                        "NodePath$_$get_pos(NodePath const *param0)"
                    ],
                    "fn": "get_pos",
                    "indexed": "NodePath$161$get_pos",
                    "mangled": "_inCAAAAOo4T",
                    "ot": "LPoint3",
                    "rt": "LPoint3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_pos(NodePath const *param0, NodePath const *param1)",
                    "c_type": "LPoint3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_pos_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c506f696e743328282a706172616d30292e6765745f706f73282a706172616d3129293b",
                    "cpp_ref": "LPoint3 NodePath::get_pos(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_pos",
                    "extern": [
                        "LPoint3 *",
                        "NodePath$_$get_pos(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_pos",
                    "indexed": "NodePath$162$get_pos",
                    "mangled": "_inCAAAACfLu",
                    "ot": "LPoint3",
                    "rt": "LPoint3"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_x(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_x_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7828293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_x(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_x",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_x(NodePath const *param0)"
                    ],
                    "fn": "get_x",
                    "indexed": "NodePath$163$get_x",
                    "mangled": "_inCAAAA0lol",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_x(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_x_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f78282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_x(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_x",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_x(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_x",
                    "indexed": "NodePath$164$get_x",
                    "mangled": "_inCAAAAsQU6",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_y(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_y_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7928293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_y(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_y",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_y(NodePath const *param0)"
                    ],
                    "fn": "get_y",
                    "indexed": "NodePath$165$get_y",
                    "mangled": "_inCAAAAaSpV",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_y(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_y_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f79282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_y(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_y",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_y(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_y",
                    "indexed": "NodePath$166$get_y",
                    "mangled": "_inCAAAAKEUq",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_z(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_z_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7a28293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_z(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_z",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_z(NodePath const *param0)"
                    ],
                    "fn": "get_z",
                    "indexed": "NodePath$167$get_z",
                    "mangled": "_inCAAAAxcoF",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_z(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_z_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7a282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_z(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_z",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_z(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_z",
                    "indexed": "NodePath$168$get_z",
                    "mangled": "_inCAAAAo5Ua",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_pos_delta(NodePath const *param0)",
                    "c_type": "LVector3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_pos_delta_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563746f723328282a706172616d30292e6765745f706f735f64656c74612829293b",
                    "cpp_ref": "LVector3 NodePath::get_pos_delta(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_pos_delta",
                    "extern": [
                        "LVector3 *",
                        "NodePath$_$get_pos_delta(NodePath const *param0)"
                    ],
                    "fn": "get_pos_delta",
                    "indexed": "NodePath$169$get_pos_delta",
                    "mangled": "_inCAAAAdM8H",
                    "ot": "LVector3",
                    "rt": "LVector3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_pos_delta(NodePath const *param0, NodePath const *param1)",
                    "c_type": "LVector3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_pos_delta_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563746f723328282a706172616d30292e6765745f706f735f64656c7461282a706172616d3129293b",
                    "cpp_ref": "LVector3 NodePath::get_pos_delta(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_pos_delta",
                    "extern": [
                        "LVector3 *",
                        "NodePath$_$get_pos_delta(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_pos_delta",
                    "indexed": "NodePath$170$get_pos_delta",
                    "mangled": "_inCAAAAjYBa",
                    "ot": "LVector3",
                    "rt": "LVector3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "hpr"
                    ],
                    "args": [
                        "LVecBase3 const &hpr"
                    ],
                    "argt": [
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_hpr(NodePath *param0, LVecBase3 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_hpr_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f687072282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_hpr(LVecBase3 const &hpr)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_hpr(NodePath *param0, LVecBase3 const *param1)"
                    ],
                    "fn": "set_hpr",
                    "indexed": "NodePath$171$set_hpr",
                    "mangled": "_inCAAAAZaLX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "hpr"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &hpr"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_hpr(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_hpr_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f687072282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_hpr(NodePath const &other, LVecBase3 const &hpr)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_hpr(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_hpr",
                    "indexed": "NodePath$172$set_hpr",
                    "mangled": "_inCAAAA97Lj",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "h",
                        "p",
                        "r"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_hpr(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_hpr_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f687072282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_hpr(NodePath const &other, PN_stdfloat h, PN_stdfloat p, PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_hpr(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_hpr",
                    "indexed": "NodePath$173$set_hpr",
                    "mangled": "_inCAAAAd_xP",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "h",
                        "p",
                        "r"
                    ],
                    "args": [
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_hpr(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_hpr_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f68707228706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_hpr(PN_stdfloat h, PN_stdfloat p, PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_hpr(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_hpr",
                    "indexed": "NodePath$174$set_hpr",
                    "mangled": "_inCAAAAGFPC",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "h"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat h"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_h(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_h_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f68282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_h(NodePath const &other, PN_stdfloat h)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_h",
                    "extern": [
                        "void",
                        "NodePath$_$set_h(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_h",
                    "indexed": "NodePath$175$set_h",
                    "mangled": "_inCAAAA4d8U",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "h"
                    ],
                    "args": [
                        "PN_stdfloat h"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_h(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_h_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6828706172616d31293b",
                    "cpp_ref": "void NodePath::set_h(PN_stdfloat h)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_h",
                    "extern": [
                        "void",
                        "NodePath$_$set_h(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_h",
                    "indexed": "NodePath$176$set_h",
                    "mangled": "_inCAAAAJHoG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "p"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat p"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_p(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_p_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f70282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_p(NodePath const &other, PN_stdfloat p)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_p",
                    "extern": [
                        "void",
                        "NodePath$_$set_p(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_p",
                    "indexed": "NodePath$177$set_p",
                    "mangled": "_inCAAAAmx_U",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "p"
                    ],
                    "args": [
                        "PN_stdfloat p"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_p(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_p_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7028706172616d31293b",
                    "cpp_ref": "void NodePath::set_p(PN_stdfloat p)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_p",
                    "extern": [
                        "void",
                        "NodePath$_$set_p(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_p",
                    "indexed": "NodePath$178$set_p",
                    "mangled": "_inCAAAAbbqG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "r"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_r(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_r_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_r(NodePath const &other, PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_r",
                    "extern": [
                        "void",
                        "NodePath$_$set_r(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_r",
                    "indexed": "NodePath$179$set_r",
                    "mangled": "_inCAAAAlY_0",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "r"
                    ],
                    "args": [
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_r(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_r_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7228706172616d31293b",
                    "cpp_ref": "void NodePath::set_r(PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_r",
                    "extern": [
                        "void",
                        "NodePath$_$set_r(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_r",
                    "indexed": "NodePath$180$set_r",
                    "mangled": "_inCAAAAe0qm",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_hpr(NodePath const *param0)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_hpr_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f6870722829293b",
                    "cpp_ref": "LVecBase3 NodePath::get_hpr(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_hpr",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_hpr(NodePath const *param0)"
                    ],
                    "fn": "get_hpr",
                    "indexed": "NodePath$181$get_hpr",
                    "mangled": "_inCAAAAkhJP",
                    "ot": "LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_hpr(NodePath const *param0, NodePath const *param1)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_hpr_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f687072282a706172616d3129293b",
                    "cpp_ref": "LVecBase3 NodePath::get_hpr(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_hpr",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_hpr(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_hpr",
                    "indexed": "NodePath$182$get_hpr",
                    "mangled": "_inCAAAAYUap",
                    "ot": "LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_h(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_h_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6828293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_h(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_h",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_h(NodePath const *param0)"
                    ],
                    "fn": "get_h",
                    "indexed": "NodePath$183$get_h",
                    "mangled": "_inCAAAAQtjl",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_h(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_h_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f68282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_h(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_h",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_h(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_h",
                    "indexed": "NodePath$184$get_h",
                    "mangled": "_inCAAAAAZP6",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_p(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_p_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7028293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_p(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_p",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_p(NodePath const *param0)"
                    ],
                    "fn": "get_p",
                    "indexed": "NodePath$185$get_p",
                    "mangled": "_inCAAAACJll",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_p(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_p_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f70282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_p(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_p",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_p(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_p",
                    "indexed": "NodePath$186$get_p",
                    "mangled": "_inCAAAAS1R6",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_r(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_r_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7228293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_r(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_r",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_r(NodePath const *param0)"
                    ],
                    "fn": "get_r",
                    "indexed": "NodePath$187$get_r",
                    "mangled": "_inCAAAAHwlF",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_r(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_r_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f72282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_r(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_r",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_r(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_r",
                    "indexed": "NodePath$188$get_r",
                    "mangled": "_inCAAAAWcRa",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "quat"
                    ],
                    "args": [
                        "LQuaternion const &quat"
                    ],
                    "argt": [
                        "LQuaternion const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LQuaternion const *"
                    ],
                    "c_ref": "NodePath$_$set_quat(NodePath *param0, LQuaternion const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_quat_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f71756174282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_quat(LQuaternion const &quat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_quat",
                    "extern": [
                        "void",
                        "NodePath$_$set_quat(NodePath *param0, LQuaternion const *param1)"
                    ],
                    "fn": "set_quat",
                    "indexed": "NodePath$189$set_quat",
                    "mangled": "_inCAAAAdE08",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "quat"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LQuaternion const &quat"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LQuaternion const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LQuaternion const *"
                    ],
                    "c_ref": "NodePath$_$set_quat(NodePath *param0, NodePath const *param1, LQuaternion const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_quat_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f71756174282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_quat(NodePath const &other, LQuaternion const &quat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_quat",
                    "extern": [
                        "void",
                        "NodePath$_$set_quat(NodePath *param0, NodePath const *param1, LQuaternion const *param2)"
                    ],
                    "fn": "set_quat",
                    "indexed": "NodePath$190$set_quat",
                    "mangled": "_inCAAAAyWJG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_quat(NodePath const *param0)",
                    "c_type": "LQuaternion *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_quat_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c5175617465726e696f6e28282a706172616d30292e6765745f717561742829293b",
                    "cpp_ref": "LQuaternion NodePath::get_quat(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_quat",
                    "extern": [
                        "LQuaternion *",
                        "NodePath$_$get_quat(NodePath const *param0)"
                    ],
                    "fn": "get_quat",
                    "indexed": "NodePath$191$get_quat",
                    "mangled": "_inCAAAAwDPW",
                    "ot": "LQuaternion",
                    "rt": "LQuaternion"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_quat(NodePath const *param0, NodePath const *param1)",
                    "c_type": "LQuaternion *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_quat_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c5175617465726e696f6e28282a706172616d30292e6765745f71756174282a706172616d3129293b",
                    "cpp_ref": "LQuaternion NodePath::get_quat(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_quat",
                    "extern": [
                        "LQuaternion *",
                        "NodePath$_$get_quat(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_quat",
                    "indexed": "NodePath$192$get_quat",
                    "mangled": "_inCAAAACURf",
                    "ot": "LQuaternion",
                    "rt": "LQuaternion"
                },
                {
                    "argc": 1,
                    "argn": [
                        "scale"
                    ],
                    "args": [
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_scale(NodePath *param0, LVecBase3 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scale_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7363616c65282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_scale(LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_scale(NodePath *param0, LVecBase3 const *param1)"
                    ],
                    "fn": "set_scale",
                    "indexed": "NodePath$193$set_scale",
                    "mangled": "_inCAAAA0C60",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "scale"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_scale(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scale_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7363616c65282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_scale(NodePath const &other, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_scale(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_scale",
                    "indexed": "NodePath$194$set_scale",
                    "mangled": "_inCAAAAy9Ck",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "scale"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat scale"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_scale(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scale_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7363616c65282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_scale(NodePath const &other, PN_stdfloat scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_scale(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_scale",
                    "indexed": "NodePath$195$set_scale",
                    "mangled": "_inCAAAAUeUW",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "sx",
                        "sy",
                        "sz"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_scale(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scale_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7363616c65282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_scale(NodePath const &other, PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_scale(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_scale",
                    "indexed": "NodePath$196$set_scale",
                    "mangled": "_inCAAAAYR8m",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "scale"
                    ],
                    "args": [
                        "PN_stdfloat scale"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_scale(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scale_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7363616c6528706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_scale(PN_stdfloat scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_scale(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_scale",
                    "indexed": "NodePath$197$set_scale",
                    "mangled": "_inCAAAAoedx",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "sx",
                        "sy",
                        "sz"
                    ],
                    "args": [
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scale_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7363616c6528706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_scale(PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_scale",
                    "indexed": "NodePath$198$set_scale",
                    "mangled": "_inCAAAAWJll",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "sx"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat sx"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sx(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sx_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7378282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_sx(NodePath const &other, PN_stdfloat sx)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sx",
                    "extern": [
                        "void",
                        "NodePath$_$set_sx(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_sx",
                    "indexed": "NodePath$199$set_sx",
                    "mangled": "_inCAAAA6fYm",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sx"
                    ],
                    "args": [
                        "PN_stdfloat sx"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sx(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sx_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f737828706172616d31293b",
                    "cpp_ref": "void NodePath::set_sx(PN_stdfloat sx)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sx",
                    "extern": [
                        "void",
                        "NodePath$_$set_sx(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_sx",
                    "indexed": "NodePath$200$set_sx",
                    "mangled": "_inCAAAAOtAb",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "sy"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat sy"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sy(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sy_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7379282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_sy(NodePath const &other, PN_stdfloat sy)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sy",
                    "extern": [
                        "void",
                        "NodePath$_$set_sy(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_sy",
                    "indexed": "NodePath$201$set_sy",
                    "mangled": "_inCAAAAiMim",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sy"
                    ],
                    "args": [
                        "PN_stdfloat sy"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sy(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sy_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f737928706172616d31293b",
                    "cpp_ref": "void NodePath::set_sy(PN_stdfloat sy)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sy",
                    "extern": [
                        "void",
                        "NodePath$_$set_sy(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_sy",
                    "indexed": "NodePath$202$set_sy",
                    "mangled": "_inCAAAAWeKb",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "sz"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat sz"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sz(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sz_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f737a282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_sz(NodePath const &other, PN_stdfloat sz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sz",
                    "extern": [
                        "void",
                        "NodePath$_$set_sz(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_sz",
                    "indexed": "NodePath$203$set_sz",
                    "mangled": "_inCAAAAq9rm",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sz"
                    ],
                    "args": [
                        "PN_stdfloat sz"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sz(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sz_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f737a28706172616d31293b",
                    "cpp_ref": "void NodePath::set_sz(PN_stdfloat sz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sz",
                    "extern": [
                        "void",
                        "NodePath$_$set_sz(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_sz",
                    "indexed": "NodePath$204$set_sz",
                    "mangled": "_inCAAAAePUb",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_scale(NodePath const *param0)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_scale_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f7363616c652829293b",
                    "cpp_ref": "LVecBase3 NodePath::get_scale(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_scale",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_scale(NodePath const *param0)"
                    ],
                    "fn": "get_scale",
                    "indexed": "NodePath$205$get_scale",
                    "mangled": "_inCAAAA5djS",
                    "ot": "LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_scale(NodePath const *param0, NodePath const *param1)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_scale_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f7363616c65282a706172616d3129293b",
                    "cpp_ref": "LVecBase3 NodePath::get_scale(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_scale",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_scale(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_scale",
                    "indexed": "NodePath$206$get_scale",
                    "mangled": "_inCAAAAam1z",
                    "ot": "LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sx(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sx_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f737828293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sx(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sx",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sx(NodePath const *param0)"
                    ],
                    "fn": "get_sx",
                    "indexed": "NodePath$207$get_sx",
                    "mangled": "_inCAAAAn63U",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sx(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sx_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7378282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sx(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sx",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sx(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_sx",
                    "indexed": "NodePath$208$get_sx",
                    "mangled": "_inCAAAACXrr",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sy(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sy_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f737928293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sy(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sy",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sy(NodePath const *param0)"
                    ],
                    "fn": "get_sy",
                    "indexed": "NodePath$209$get_sy",
                    "mangled": "_inCAAAAvrBV",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sy(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sy_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7379282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sy(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sy",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sy(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_sy",
                    "indexed": "NodePath$210$get_sy",
                    "mangled": "_inCAAAAKE1r",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sz(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sz_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f737a28293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sz(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sz",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sz(NodePath const *param0)"
                    ],
                    "fn": "get_sz",
                    "indexed": "NodePath$211$get_sz",
                    "mangled": "_inCAAAAXULV",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sz(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sz_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f737a282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sz(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sz",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sz(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_sz",
                    "indexed": "NodePath$212$get_sz",
                    "mangled": "_inCAAAAS18r",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "shear"
                    ],
                    "args": [
                        "LVecBase3 const &shear"
                    ],
                    "argt": [
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_shear(NodePath *param0, LVecBase3 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shear_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368656172282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_shear(LVecBase3 const &shear)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shear",
                    "extern": [
                        "void",
                        "NodePath$_$set_shear(NodePath *param0, LVecBase3 const *param1)"
                    ],
                    "fn": "set_shear",
                    "indexed": "NodePath$213$set_shear",
                    "mangled": "_inCAAAAz2zt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "shear"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &shear"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_shear(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shear_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368656172282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_shear(NodePath const &other, LVecBase3 const &shear)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shear",
                    "extern": [
                        "void",
                        "NodePath$_$set_shear(NodePath *param0, NodePath const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_shear",
                    "indexed": "NodePath$214$set_shear",
                    "mangled": "_inCAAAAXu7c",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "shxy",
                        "shxz",
                        "shyz"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat shxy",
                        "PN_stdfloat shxz",
                        "PN_stdfloat shyz"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shear(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shear_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368656172282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_shear(NodePath const &other, PN_stdfloat shxy, PN_stdfloat shxz, PN_stdfloat shyz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shear",
                    "extern": [
                        "void",
                        "NodePath$_$set_shear(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_shear",
                    "indexed": "NodePath$215$set_shear",
                    "mangled": "_inCAAAAvF0f",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "shxy",
                        "shxz",
                        "shyz"
                    ],
                    "args": [
                        "PN_stdfloat shxy",
                        "PN_stdfloat shxz",
                        "PN_stdfloat shyz"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shear(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shear_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f736865617228706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shear(PN_stdfloat shxy, PN_stdfloat shxz, PN_stdfloat shyz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shear",
                    "extern": [
                        "void",
                        "NodePath$_$set_shear(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_shear",
                    "indexed": "NodePath$216$set_shear",
                    "mangled": "_inCAAAAz8de",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "shxy"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat shxy"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shxy(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shxy_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73687879282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_shxy(NodePath const &other, PN_stdfloat shxy)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shxy",
                    "extern": [
                        "void",
                        "NodePath$_$set_shxy(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_shxy",
                    "indexed": "NodePath$217$set_shxy",
                    "mangled": "_inCAAAAqMme",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "shxy"
                    ],
                    "args": [
                        "PN_stdfloat shxy"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shxy(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shxy_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368787928706172616d31293b",
                    "cpp_ref": "void NodePath::set_shxy(PN_stdfloat shxy)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shxy",
                    "extern": [
                        "void",
                        "NodePath$_$set_shxy(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_shxy",
                    "indexed": "NodePath$218$set_shxy",
                    "mangled": "_inCAAAAdaen",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "shxz"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat shxz"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shxz(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shxz_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368787a282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_shxz(NodePath const &other, PN_stdfloat shxz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shxz",
                    "extern": [
                        "void",
                        "NodePath$_$set_shxz(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_shxz",
                    "indexed": "NodePath$219$set_shxz",
                    "mangled": "_inCAAAAoM06",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "shxz"
                    ],
                    "args": [
                        "PN_stdfloat shxz"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shxz(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shxz_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368787a28706172616d31293b",
                    "cpp_ref": "void NodePath::set_shxz(PN_stdfloat shxz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shxz",
                    "extern": [
                        "void",
                        "NodePath$_$set_shxz(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_shxz",
                    "indexed": "NodePath$220$set_shxz",
                    "mangled": "_inCAAAAaasD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "shyz"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat shyz"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shyz(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shyz_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368797a282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_shyz(NodePath const &other, PN_stdfloat shyz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shyz",
                    "extern": [
                        "void",
                        "NodePath$_$set_shyz(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_shyz",
                    "indexed": "NodePath$221$set_shyz",
                    "mangled": "_inCAAAAogt_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "shyz"
                    ],
                    "args": [
                        "PN_stdfloat shyz"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shyz(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shyz_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368797a28706172616d31293b",
                    "cpp_ref": "void NodePath::set_shyz(PN_stdfloat shyz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shyz",
                    "extern": [
                        "void",
                        "NodePath$_$set_shyz(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_shyz",
                    "indexed": "NodePath$222$set_shyz",
                    "mangled": "_inCAAAAamkI",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_shear(NodePath const *param0)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shear_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f73686561722829293b",
                    "cpp_ref": "LVecBase3 NodePath::get_shear(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shear",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_shear(NodePath const *param0)"
                    ],
                    "fn": "get_shear",
                    "indexed": "NodePath$223$get_shear",
                    "mangled": "_inCAAAAyRcL",
                    "ot": "LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_shear(NodePath const *param0, NodePath const *param1)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shear_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f7368656172282a706172616d3129293b",
                    "cpp_ref": "LVecBase3 NodePath::get_shear(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shear",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_shear(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_shear",
                    "indexed": "NodePath$224$get_shear",
                    "mangled": "_inCAAAAXxss",
                    "ot": "LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_shxy(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shxy_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7368787928293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_shxy(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shxy",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_shxy(NodePath const *param0)"
                    ],
                    "fn": "get_shxy",
                    "indexed": "NodePath$225$get_shxy",
                    "mangled": "_inCAAAA5jpx",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_shxy(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shxy_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f73687879282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_shxy(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shxy",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_shxy(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_shxy",
                    "indexed": "NodePath$226$get_shxy",
                    "mangled": "_inCAAAAbLq6",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_shxz(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shxz_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7368787a28293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_shxz(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shxz",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_shxz(NodePath const *param0)"
                    ],
                    "fn": "get_shxz",
                    "indexed": "NodePath$227$get_shxz",
                    "mangled": "_inCAAAA8j3N",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_shxz(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shxz_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7368787a282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_shxz(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shxz",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_shxz(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_shxz",
                    "indexed": "NodePath$228$get_shxz",
                    "mangled": "_inCAAAAWL4W",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_shyz(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shyz_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7368797a28293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_shyz(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shyz",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_shyz(NodePath const *param0)"
                    ],
                    "fn": "get_shyz",
                    "indexed": "NodePath$229$get_shyz",
                    "mangled": "_inCAAAA8PuS",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_shyz(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shyz_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7368797a282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_shyz(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shyz",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_shyz(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_shyz",
                    "indexed": "NodePath$230$get_shyz",
                    "mangled": "_inCAAAAWXwb",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 2,
                    "argn": [
                        "pos",
                        "hpr"
                    ],
                    "args": [
                        "LVecBase3 const &pos",
                        "LVecBase3 const &hpr"
                    ],
                    "argt": [
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr(NodePath *param0, LVecBase3 const *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f687072282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_pos_hpr(LVecBase3 const &pos, LVecBase3 const &hpr)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr(NodePath *param0, LVecBase3 const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_pos_hpr",
                    "indexed": "NodePath$231$set_pos_hpr",
                    "mangled": "_inCAAAApP2N",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "pos",
                        "hpr"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &pos",
                        "LVecBase3 const &hpr"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LVecBase3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f687072282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_pos_hpr(NodePath const &other, LVecBase3 const &pos, LVecBase3 const &hpr)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LVecBase3 const *param3)"
                    ],
                    "fn": "set_pos_hpr",
                    "indexed": "NodePath$232$set_pos_hpr",
                    "mangled": "_inCAAAAfJIB",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 7,
                    "argn": [
                        "other",
                        "x",
                        "y",
                        "z",
                        "h",
                        "p",
                        "r"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z",
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6, PN_stdfloat param7)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_v_ppffffff",
                    "cni_args": "ppffffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f687072282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d362c20706172616d37293b",
                    "cpp_ref": "inline void NodePath::set_pos_hpr(NodePath const &other, PN_stdfloat x, PN_stdfloat y, PN_stdfloat z, PN_stdfloat h, PN_stdfloat p, PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6, PN_stdfloat param7)"
                    ],
                    "fn": "set_pos_hpr",
                    "indexed": "NodePath$233$set_pos_hpr",
                    "mangled": "_inCAAAAFQ5Y",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 6,
                    "argn": [
                        "x",
                        "y",
                        "z",
                        "h",
                        "p",
                        "r"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z",
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_v_pffffff",
                    "cni_args": "pffffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f68707228706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d36293b",
                    "cpp_ref": "inline void NodePath::set_pos_hpr(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z, PN_stdfloat h, PN_stdfloat p, PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6)"
                    ],
                    "fn": "set_pos_hpr",
                    "indexed": "NodePath$234$set_pos_hpr",
                    "mangled": "_inCAAAAEAqj",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "pos",
                        "quat"
                    ],
                    "args": [
                        "LVecBase3 const &pos",
                        "LQuaternion const &quat"
                    ],
                    "argt": [
                        "LVecBase3 const&",
                        "LQuaternion const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *",
                        "LQuaternion const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_quat(NodePath *param0, LVecBase3 const *param1, LQuaternion const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_quat_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f71756174282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_pos_quat(LVecBase3 const &pos, LQuaternion const &quat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_quat",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_quat(NodePath *param0, LVecBase3 const *param1, LQuaternion const *param2)"
                    ],
                    "fn": "set_pos_quat",
                    "indexed": "NodePath$235$set_pos_quat",
                    "mangled": "_inCAAAAbZLS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "pos",
                        "quat"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &pos",
                        "LQuaternion const &quat"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&",
                        "LQuaternion const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *",
                        "LQuaternion const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_quat(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LQuaternion const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_quat_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f71756174282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_pos_quat(NodePath const &other, LVecBase3 const &pos, LQuaternion const &quat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_quat",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_quat(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LQuaternion const *param3)"
                    ],
                    "fn": "set_pos_quat",
                    "indexed": "NodePath$236$set_pos_quat",
                    "mangled": "_inCAAAAOLQ7",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "hpr",
                        "scale"
                    ],
                    "args": [
                        "LVecBase3 const &hpr",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_hpr_scale(NodePath *param0, LVecBase3 const *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_hpr_scale_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6870725f7363616c65282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_hpr_scale(LVecBase3 const &hpr, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_hpr_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_hpr_scale(NodePath *param0, LVecBase3 const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_hpr_scale",
                    "indexed": "NodePath$237$set_hpr_scale",
                    "mangled": "_inCAAAAbUjX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "hpr",
                        "scale"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &hpr",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_hpr_scale(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LVecBase3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_hpr_scale_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6870725f7363616c65282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_hpr_scale(NodePath const &other, LVecBase3 const &hpr, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_hpr_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_hpr_scale(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LVecBase3 const *param3)"
                    ],
                    "fn": "set_hpr_scale",
                    "indexed": "NodePath$238$set_hpr_scale",
                    "mangled": "_inCAAAAML6W",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 7,
                    "argn": [
                        "other",
                        "h",
                        "p",
                        "r",
                        "sx",
                        "sy",
                        "sz"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r",
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_hpr_scale(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6, PN_stdfloat param7)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_hpr_scale_v_ppffffff",
                    "cni_args": "ppffffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6870725f7363616c65282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d362c20706172616d37293b",
                    "cpp_ref": "inline void NodePath::set_hpr_scale(NodePath const &other, PN_stdfloat h, PN_stdfloat p, PN_stdfloat r, PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_hpr_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_hpr_scale(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6, PN_stdfloat param7)"
                    ],
                    "fn": "set_hpr_scale",
                    "indexed": "NodePath$239$set_hpr_scale",
                    "mangled": "_inCAAAA1c4Y",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 6,
                    "argn": [
                        "h",
                        "p",
                        "r",
                        "sx",
                        "sy",
                        "sz"
                    ],
                    "args": [
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r",
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_hpr_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_hpr_scale_v_pffffff",
                    "cni_args": "pffffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6870725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d36293b",
                    "cpp_ref": "inline void NodePath::set_hpr_scale(PN_stdfloat h, PN_stdfloat p, PN_stdfloat r, PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_hpr_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_hpr_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6)"
                    ],
                    "fn": "set_hpr_scale",
                    "indexed": "NodePath$240$set_hpr_scale",
                    "mangled": "_inCAAAA7L8H",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "quat",
                        "scale"
                    ],
                    "args": [
                        "LQuaternion const &quat",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "LQuaternion const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LQuaternion const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_quat_scale(NodePath *param0, LQuaternion const *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_quat_scale_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f717561745f7363616c65282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_quat_scale(LQuaternion const &quat, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_quat_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_quat_scale(NodePath *param0, LQuaternion const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_quat_scale",
                    "indexed": "NodePath$241$set_quat_scale",
                    "mangled": "_inCAAAArl_T",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "quat",
                        "scale"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LQuaternion const &quat",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LQuaternion const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LQuaternion const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_quat_scale(NodePath *param0, NodePath const *param1, LQuaternion const *param2, LVecBase3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_quat_scale_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f717561745f7363616c65282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_quat_scale(NodePath const &other, LQuaternion const &quat, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_quat_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_quat_scale(NodePath *param0, NodePath const *param1, LQuaternion const *param2, LVecBase3 const *param3)"
                    ],
                    "fn": "set_quat_scale",
                    "indexed": "NodePath$242$set_quat_scale",
                    "mangled": "_inCAAAA_ZUg",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "pos",
                        "hpr",
                        "scale"
                    ],
                    "args": [
                        "LVecBase3 const &pos",
                        "LVecBase3 const &hpr",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "LVecBase3 const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr_scale(NodePath *param0, LVecBase3 const *param1, LVecBase3 const *param2, LVecBase3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_scale_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f6870725f7363616c65282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_pos_hpr_scale(LVecBase3 const &pos, LVecBase3 const &hpr, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr_scale(NodePath *param0, LVecBase3 const *param1, LVecBase3 const *param2, LVecBase3 const *param3)"
                    ],
                    "fn": "set_pos_hpr_scale",
                    "indexed": "NodePath$243$set_pos_hpr_scale",
                    "mangled": "_inCAAAAOMdP",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "pos",
                        "hpr",
                        "scale"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &pos",
                        "LVecBase3 const &hpr",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr_scale(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LVecBase3 const *param3, LVecBase3 const *param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_scale_v_ppppp",
                    "cni_args": "ppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f6870725f7363616c65282a706172616d312c202a706172616d322c202a706172616d332c202a706172616d34293b",
                    "cpp_ref": "void NodePath::set_pos_hpr_scale(NodePath const &other, LVecBase3 const &pos, LVecBase3 const &hpr, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr_scale(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LVecBase3 const *param3, LVecBase3 const *param4)"
                    ],
                    "fn": "set_pos_hpr_scale",
                    "indexed": "NodePath$244$set_pos_hpr_scale",
                    "mangled": "_inCAAAAblzG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 10,
                    "argn": [
                        "other",
                        "x",
                        "y",
                        "z",
                        "h",
                        "p",
                        "r",
                        "sx",
                        "sy",
                        "sz"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z",
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r",
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr_scale(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6, PN_stdfloat param7, PN_stdfloat param8, PN_stdfloat param9, PN_stdfloat param10)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_scale_v_ppfffffffff",
                    "cni_args": "ppfffffffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f6870725f7363616c65282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d362c20706172616d372c20706172616d382c20706172616d392c20706172616d3130293b",
                    "cpp_ref": "inline void NodePath::set_pos_hpr_scale(NodePath const &other, PN_stdfloat x, PN_stdfloat y, PN_stdfloat z, PN_stdfloat h, PN_stdfloat p, PN_stdfloat r, PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr_scale(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6, PN_stdfloat param7, PN_stdfloat param8, PN_stdfloat param9, PN_stdfloat param10)"
                    ],
                    "fn": "set_pos_hpr_scale",
                    "indexed": "NodePath$245$set_pos_hpr_scale",
                    "mangled": "_inCAAAAIfbx",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 9,
                    "argn": [
                        "x",
                        "y",
                        "z",
                        "h",
                        "p",
                        "r",
                        "sx",
                        "sy",
                        "sz"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z",
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r",
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6, PN_stdfloat param7, PN_stdfloat param8, PN_stdfloat param9)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_scale_v_pfffffffff",
                    "cni_args": "pfffffffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f6870725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d362c20706172616d372c20706172616d382c20706172616d39293b",
                    "cpp_ref": "inline void NodePath::set_pos_hpr_scale(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z, PN_stdfloat h, PN_stdfloat p, PN_stdfloat r, PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, PN_stdfloat param6, PN_stdfloat param7, PN_stdfloat param8, PN_stdfloat param9)"
                    ],
                    "fn": "set_pos_hpr_scale",
                    "indexed": "NodePath$246$set_pos_hpr_scale",
                    "mangled": "_inCAAAAG24J",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "pos",
                        "quat",
                        "scale"
                    ],
                    "args": [
                        "LVecBase3 const &pos",
                        "LQuaternion const &quat",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "LVecBase3 const&",
                        "LQuaternion const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *",
                        "LQuaternion const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_quat_scale(NodePath *param0, LVecBase3 const *param1, LQuaternion const *param2, LVecBase3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_quat_scale_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f717561745f7363616c65282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_pos_quat_scale(LVecBase3 const &pos, LQuaternion const &quat, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_quat_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_quat_scale(NodePath *param0, LVecBase3 const *param1, LQuaternion const *param2, LVecBase3 const *param3)"
                    ],
                    "fn": "set_pos_quat_scale",
                    "indexed": "NodePath$247$set_pos_quat_scale",
                    "mangled": "_inCAAAAu9HI",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "pos",
                        "quat",
                        "scale"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &pos",
                        "LQuaternion const &quat",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&",
                        "LQuaternion const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *",
                        "LQuaternion const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_quat_scale(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LQuaternion const *param3, LVecBase3 const *param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_quat_scale_v_ppppp",
                    "cni_args": "ppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f717561745f7363616c65282a706172616d312c202a706172616d322c202a706172616d332c202a706172616d34293b",
                    "cpp_ref": "void NodePath::set_pos_quat_scale(NodePath const &other, LVecBase3 const &pos, LQuaternion const &quat, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_quat_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_quat_scale(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LQuaternion const *param3, LVecBase3 const *param4)"
                    ],
                    "fn": "set_pos_quat_scale",
                    "indexed": "NodePath$248$set_pos_quat_scale",
                    "mangled": "_inCAAAAch_2",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "pos",
                        "hpr",
                        "scale",
                        "shear"
                    ],
                    "args": [
                        "LVecBase3 const &pos",
                        "LVecBase3 const &hpr",
                        "LVecBase3 const &scale",
                        "LVecBase3 const &shear"
                    ],
                    "argt": [
                        "LVecBase3 const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr_scale_shear(NodePath *param0, LVecBase3 const *param1, LVecBase3 const *param2, LVecBase3 const *param3, LVecBase3 const *param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_scale_shear_v_ppppp",
                    "cni_args": "ppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f6870725f7363616c655f7368656172282a706172616d312c202a706172616d322c202a706172616d332c202a706172616d34293b",
                    "cpp_ref": "void NodePath::set_pos_hpr_scale_shear(LVecBase3 const &pos, LVecBase3 const &hpr, LVecBase3 const &scale, LVecBase3 const &shear)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr_scale_shear",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr_scale_shear(NodePath *param0, LVecBase3 const *param1, LVecBase3 const *param2, LVecBase3 const *param3, LVecBase3 const *param4)"
                    ],
                    "fn": "set_pos_hpr_scale_shear",
                    "indexed": "NodePath$249$set_pos_hpr_scale_shear",
                    "mangled": "_inCAAAAfHzz",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "other",
                        "pos",
                        "hpr",
                        "scale",
                        "shear"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &pos",
                        "LVecBase3 const &hpr",
                        "LVecBase3 const &scale",
                        "LVecBase3 const &shear"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_hpr_scale_shear(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LVecBase3 const *param3, LVecBase3 const *param4, LVecBase3 const *param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_hpr_scale_shear_v_pppppp",
                    "cni_args": "pppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f6870725f7363616c655f7368656172282a706172616d312c202a706172616d322c202a706172616d332c202a706172616d342c202a706172616d35293b",
                    "cpp_ref": "void NodePath::set_pos_hpr_scale_shear(NodePath const &other, LVecBase3 const &pos, LVecBase3 const &hpr, LVecBase3 const &scale, LVecBase3 const &shear)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_hpr_scale_shear",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_hpr_scale_shear(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LVecBase3 const *param3, LVecBase3 const *param4, LVecBase3 const *param5)"
                    ],
                    "fn": "set_pos_hpr_scale_shear",
                    "indexed": "NodePath$250$set_pos_hpr_scale_shear",
                    "mangled": "_inCAAAApHY1",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "pos",
                        "quat",
                        "scale",
                        "shear"
                    ],
                    "args": [
                        "LVecBase3 const &pos",
                        "LQuaternion const &quat",
                        "LVecBase3 const &scale",
                        "LVecBase3 const &shear"
                    ],
                    "argt": [
                        "LVecBase3 const&",
                        "LQuaternion const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase3 const *",
                        "LQuaternion const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_quat_scale_shear(NodePath *param0, LVecBase3 const *param1, LQuaternion const *param2, LVecBase3 const *param3, LVecBase3 const *param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_quat_scale_shear_v_ppppp",
                    "cni_args": "ppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f717561745f7363616c655f7368656172282a706172616d312c202a706172616d322c202a706172616d332c202a706172616d34293b",
                    "cpp_ref": "void NodePath::set_pos_quat_scale_shear(LVecBase3 const &pos, LQuaternion const &quat, LVecBase3 const &scale, LVecBase3 const &shear)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_quat_scale_shear",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_quat_scale_shear(NodePath *param0, LVecBase3 const *param1, LQuaternion const *param2, LVecBase3 const *param3, LVecBase3 const *param4)"
                    ],
                    "fn": "set_pos_quat_scale_shear",
                    "indexed": "NodePath$251$set_pos_quat_scale_shear",
                    "mangled": "_inCAAAABeHo",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "other",
                        "pos",
                        "quat",
                        "scale",
                        "shear"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &pos",
                        "LQuaternion const &quat",
                        "LVecBase3 const &scale",
                        "LVecBase3 const &shear"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&",
                        "LQuaternion const&",
                        "LVecBase3 const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LVecBase3 const *",
                        "LQuaternion const *",
                        "LVecBase3 const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_pos_quat_scale_shear(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LQuaternion const *param3, LVecBase3 const *param4, LVecBase3 const *param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_pos_quat_scale_shear_v_pppppp",
                    "cni_args": "pppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706f735f717561745f7363616c655f7368656172282a706172616d312c202a706172616d322c202a706172616d332c202a706172616d342c202a706172616d35293b",
                    "cpp_ref": "void NodePath::set_pos_quat_scale_shear(NodePath const &other, LVecBase3 const &pos, LQuaternion const &quat, LVecBase3 const &scale, LVecBase3 const &shear)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_pos_quat_scale_shear",
                    "extern": [
                        "void",
                        "NodePath$_$set_pos_quat_scale_shear(NodePath *param0, NodePath const *param1, LVecBase3 const *param2, LQuaternion const *param3, LVecBase3 const *param4, LVecBase3 const *param5)"
                    ],
                    "fn": "set_pos_quat_scale_shear",
                    "indexed": "NodePath$252$set_pos_quat_scale_shear",
                    "mangled": "_inCAAAAhGyX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4 const &mat"
                    ],
                    "argt": [
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "NodePath$_$set_mat(NodePath *param0, LMatrix4 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_mat_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d6174282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_mat(LMatrix4 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_mat",
                    "extern": [
                        "void",
                        "NodePath$_$set_mat(NodePath *param0, LMatrix4 const *param1)"
                    ],
                    "fn": "set_mat",
                    "indexed": "NodePath$253$set_mat",
                    "mangled": "_inCAAAAFnWj",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "mat"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LMatrix4 const &mat"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "NodePath$_$set_mat(NodePath *param0, NodePath const *param1, LMatrix4 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_mat_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d6174282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_mat(NodePath const &other, LMatrix4 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_mat",
                    "extern": [
                        "void",
                        "NodePath$_$set_mat(NodePath *param0, NodePath const *param1, LMatrix4 const *param2)"
                    ],
                    "fn": "set_mat",
                    "indexed": "NodePath$254$set_mat",
                    "mangled": "_inCAAAAbult",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_mat(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_mat_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6d617428293b",
                    "cpp_ref": "inline void NodePath::clear_mat(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_mat",
                    "extern": [
                        "void",
                        "NodePath$_$clear_mat(NodePath *param0)"
                    ],
                    "fn": "clear_mat",
                    "indexed": "NodePath$255$clear_mat",
                    "mangled": "_inCAAAAZ8BU",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_mat(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_mat_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f6d617428293b",
                    "cpp_ref": "inline bool NodePath::has_mat(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_mat",
                    "extern": [
                        "bool",
                        "NodePath$_$has_mat(NodePath const *param0)"
                    ],
                    "fn": "has_mat",
                    "indexed": "NodePath$256$has_mat",
                    "mangled": "_inCAAAAuM1u",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_mat(NodePath const *param0)",
                    "c_type": "LMatrix4 const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_mat_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f6d61742829293b",
                    "cpp_ref": "inline LMatrix4 const &NodePath::get_mat(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_mat",
                    "extern": [
                        "LMatrix4 const *",
                        "NodePath$_$get_mat(NodePath const *param0)"
                    ],
                    "fn": "get_mat",
                    "indexed": "NodePath$257$get_mat",
                    "mangled": "_inCAAAAIMoG",
                    "ot": "inline LMatrix4 const&",
                    "rt": "LMatrix4"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_mat(NodePath const *param0, NodePath const *param1)",
                    "c_type": "LMatrix4 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_mat_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c4d61747269783428282a706172616d30292e6765745f6d6174282a706172616d3129293b",
                    "cpp_ref": "LMatrix4 NodePath::get_mat(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_mat",
                    "extern": [
                        "LMatrix4 *",
                        "NodePath$_$get_mat(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_mat",
                    "indexed": "NodePath$258$get_mat",
                    "mangled": "_inCAAAA_p5g",
                    "ot": "LMatrix4",
                    "rt": "LMatrix4"
                },
                {
                    "argc": 2,
                    "argn": [
                        "point",
                        "up"
                    ],
                    "args": [
                        "LPoint3 const &point",
                        "LVector3 const &up"
                    ],
                    "argt": [
                        "LPoint3 const&",
                        "LVector3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LPoint3 const *",
                        "LVector3 const *"
                    ],
                    "c_ref": "NodePath$_$look_at(NodePath *param0, LPoint3 const *param1, LVector3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_look_at_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f6f6b5f6174282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::look_at(LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$look_at",
                    "extern": [
                        "void",
                        "NodePath$_$look_at(NodePath *param0, LPoint3 const *param1, LVector3 const *param2)"
                    ],
                    "fn": "look_at",
                    "indexed": "NodePath$259$look_at",
                    "mangled": "_inCAAAAfn8N",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "point"
                    ],
                    "args": [
                        "LPoint3 const &point"
                    ],
                    "argt": [
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LPoint3 const *"
                    ],
                    "c_ref": "NodePath$_$look_at(NodePath *param0, LPoint3 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_look_at_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f6f6b5f6174282a706172616d31293b",
                    "cpp_ref": "void NodePath::look_at(LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$look_at",
                    "extern": [
                        "void",
                        "NodePath$_$look_at(NodePath *param0, LPoint3 const *param1)"
                    ],
                    "fn": "look_at",
                    "indexed": "NodePath$260$look_at",
                    "mangled": "_inCAAAA9LIH",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "point",
                        "up"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LPoint3 const &point",
                        "LVector3 const &up"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LPoint3 const&",
                        "LVector3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LPoint3 const *",
                        "LVector3 const *"
                    ],
                    "c_ref": "NodePath$_$look_at(NodePath *param0, NodePath const *param1, LPoint3 const *param2, LVector3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_look_at_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f6f6b5f6174282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::look_at(NodePath const &other, LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$look_at",
                    "extern": [
                        "void",
                        "NodePath$_$look_at(NodePath *param0, NodePath const *param1, LPoint3 const *param2, LVector3 const *param3)"
                    ],
                    "fn": "look_at",
                    "indexed": "NodePath$261$look_at",
                    "mangled": "_inCAAAA8uIG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "point"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LPoint3 const &point"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LPoint3 const *"
                    ],
                    "c_ref": "NodePath$_$look_at(NodePath *param0, NodePath const *param1, LPoint3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_look_at_v_ppp_1_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f6f6b5f6174282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::look_at(NodePath const &other, LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$look_at",
                    "extern": [
                        "void",
                        "NodePath$_$look_at(NodePath *param0, NodePath const *param1, LPoint3 const *param2)"
                    ],
                    "fn": "look_at",
                    "indexed": "NodePath$262$look_at",
                    "mangled": "_inCAAAAn40q",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$look_at(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_look_at_v_pp_1_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f6f6b5f6174282a706172616d31293b",
                    "cpp_ref": "void NodePath::look_at(NodePath const &other, LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$look_at",
                    "extern": [
                        "void",
                        "NodePath$_$look_at(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "look_at",
                    "indexed": "NodePath$263$look_at",
                    "mangled": "_inCAAAA62Ls",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$look_at(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_look_at_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f6f6b5f6174282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::look_at(NodePath const &other, PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$look_at",
                    "extern": [
                        "void",
                        "NodePath$_$look_at(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "look_at",
                    "indexed": "NodePath$264$look_at",
                    "mangled": "_inCAAAApYhi",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$look_at(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_look_at_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f6f6b5f617428706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::look_at(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$look_at",
                    "extern": [
                        "void",
                        "NodePath$_$look_at(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "look_at",
                    "indexed": "NodePath$265$look_at",
                    "mangled": "_inCAAAAz8_U",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "point",
                        "up"
                    ],
                    "args": [
                        "LPoint3 const &point",
                        "LVector3 const &up"
                    ],
                    "argt": [
                        "LPoint3 const&",
                        "LVector3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LPoint3 const *",
                        "LVector3 const *"
                    ],
                    "c_ref": "NodePath$_$heads_up(NodePath *param0, LPoint3 const *param1, LVector3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_heads_up_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e68656164735f7570282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::heads_up(LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$heads_up",
                    "extern": [
                        "void",
                        "NodePath$_$heads_up(NodePath *param0, LPoint3 const *param1, LVector3 const *param2)"
                    ],
                    "fn": "heads_up",
                    "indexed": "NodePath$266$heads_up",
                    "mangled": "_inCAAAAfeLO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "point"
                    ],
                    "args": [
                        "LPoint3 const &point"
                    ],
                    "argt": [
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LPoint3 const *"
                    ],
                    "c_ref": "NodePath$_$heads_up(NodePath *param0, LPoint3 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_heads_up_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e68656164735f7570282a706172616d31293b",
                    "cpp_ref": "void NodePath::heads_up(LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$heads_up",
                    "extern": [
                        "void",
                        "NodePath$_$heads_up(NodePath *param0, LPoint3 const *param1)"
                    ],
                    "fn": "heads_up",
                    "indexed": "NodePath$267$heads_up",
                    "mangled": "_inCAAAA1Hpz",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "point",
                        "up"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LPoint3 const &point",
                        "LVector3 const &up"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LPoint3 const&",
                        "LVector3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LPoint3 const *",
                        "LVector3 const *"
                    ],
                    "c_ref": "NodePath$_$heads_up(NodePath *param0, NodePath const *param1, LPoint3 const *param2, LVector3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_heads_up_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e68656164735f7570282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::heads_up(NodePath const &other, LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$heads_up",
                    "extern": [
                        "void",
                        "NodePath$_$heads_up(NodePath *param0, NodePath const *param1, LPoint3 const *param2, LVector3 const *param3)"
                    ],
                    "fn": "heads_up",
                    "indexed": "NodePath$268$heads_up",
                    "mangled": "_inCAAAA0GtV",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "point"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LPoint3 const &point"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LPoint3 const *"
                    ],
                    "c_ref": "NodePath$_$heads_up(NodePath *param0, NodePath const *param1, LPoint3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_heads_up_v_ppp_1_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e68656164735f7570282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::heads_up(NodePath const &other, LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$heads_up",
                    "extern": [
                        "void",
                        "NodePath$_$heads_up(NodePath *param0, NodePath const *param1, LPoint3 const *param2)"
                    ],
                    "fn": "heads_up",
                    "indexed": "NodePath$269$heads_up",
                    "mangled": "_inCAAAAqmcr",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$heads_up(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_heads_up_v_pp_1_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e68656164735f7570282a706172616d31293b",
                    "cpp_ref": "void NodePath::heads_up(NodePath const &other, LPoint3 const &point, LVector3 const &up)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$heads_up",
                    "extern": [
                        "void",
                        "NodePath$_$heads_up(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "heads_up",
                    "indexed": "NodePath$270$heads_up",
                    "mangled": "_inCAAAAwIWV",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "NodePath const &other",
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$heads_up(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_heads_up_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e68656164735f7570282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::heads_up(NodePath const &other, PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$heads_up",
                    "extern": [
                        "void",
                        "NodePath$_$heads_up(NodePath *param0, NodePath const *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "heads_up",
                    "indexed": "NodePath$271$heads_up",
                    "mangled": "_inCAAAANhpj",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "x",
                        "y",
                        "z"
                    ],
                    "args": [
                        "PN_stdfloat x",
                        "PN_stdfloat y",
                        "PN_stdfloat z"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$heads_up(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_heads_up_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e68656164735f757028706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::heads_up(PN_stdfloat x, PN_stdfloat y, PN_stdfloat z)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$heads_up",
                    "extern": [
                        "void",
                        "NodePath$_$heads_up(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "heads_up",
                    "indexed": "NodePath$272$heads_up",
                    "mangled": "_inCAAAAUUnx",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "point"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &point"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$get_relative_point(NodePath const *param0, NodePath const *param1, LVecBase3 const *param2)",
                    "c_type": "LPoint3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_relative_point_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c506f696e743328282a706172616d30292e6765745f72656c61746976655f706f696e74282a706172616d312c202a706172616d3229293b",
                    "cpp_ref": "LPoint3 NodePath::get_relative_point(NodePath const &other, LVecBase3 const &point) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_relative_point",
                    "extern": [
                        "LPoint3 *",
                        "NodePath$_$get_relative_point(NodePath const *param0, NodePath const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "get_relative_point",
                    "indexed": "NodePath$273$get_relative_point",
                    "mangled": "_inCAAAADR9y",
                    "ot": "LPoint3",
                    "rt": "LPoint3"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "vec"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LVecBase3 const &vec"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$get_relative_vector(NodePath const *param0, NodePath const *param1, LVecBase3 const *param2)",
                    "c_type": "LVector3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_relative_vector_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563746f723328282a706172616d30292e6765745f72656c61746976655f766563746f72282a706172616d312c202a706172616d3229293b",
                    "cpp_ref": "LVector3 NodePath::get_relative_vector(NodePath const &other, LVecBase3 const &vec) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_relative_vector",
                    "extern": [
                        "LVector3 *",
                        "NodePath$_$get_relative_vector(NodePath const *param0, NodePath const *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "get_relative_vector",
                    "indexed": "NodePath$274$get_relative_vector",
                    "mangled": "_inCAAAAqeF2",
                    "ot": "LVector3",
                    "rt": "LVector3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_distance(NodePath const *param0, NodePath const *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_distance_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f64697374616e6365282a706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_distance(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_distance",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_distance(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "get_distance",
                    "indexed": "NodePath$275$get_distance",
                    "mangled": "_inCAAAAgctf",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 2,
                    "argn": [
                        "color",
                        "priority"
                    ],
                    "args": [
                        "LColor const &color",
                        "int priority"
                    ],
                    "argt": [
                        "LColor const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LColor const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_color(NodePath *param0, LColor const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f72282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_color(LColor const &color, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color",
                    "extern": [
                        "void",
                        "NodePath$_$set_color(NodePath *param0, LColor const *param1, int param2)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePath$276$set_color",
                    "mangled": "_inCAAAAS0zC",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "color"
                    ],
                    "args": [
                        "LColor const &color"
                    ],
                    "argt": [
                        "LColor const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LColor const *"
                    ],
                    "c_ref": "NodePath$_$set_color(NodePath *param0, LColor const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f72282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_color(LColor const &color, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color",
                    "extern": [
                        "void",
                        "NodePath$_$set_color(NodePath *param0, LColor const *param1)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePath$277$set_color",
                    "mangled": "_inCAAAASCGd",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "r",
                        "g",
                        "b",
                        "a",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b",
                        "PN_stdfloat a",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_color(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_v_pffffi",
                    "cni_args": "pffffi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f7228706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "void NodePath::set_color(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color",
                    "extern": [
                        "void",
                        "NodePath$_$set_color(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePath$278$set_color",
                    "mangled": "_inCAAAAOQ2g",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "r",
                        "g",
                        "b",
                        "a"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b",
                        "PN_stdfloat a"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_color(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f7228706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "void NodePath::set_color(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color",
                    "extern": [
                        "void",
                        "NodePath$_$set_color(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePath$279$set_color",
                    "mangled": "_inCAAAA5CWF",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "r",
                        "g",
                        "b"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_color(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f7228706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_color(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color",
                    "extern": [
                        "void",
                        "NodePath$_$set_color(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePath$280$set_color",
                    "mangled": "_inCAAAAafsM",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_color_off(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_color_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_color_off(NodePath *param0, int param1)"
                    ],
                    "fn": "set_color_off",
                    "indexed": "NodePath$281$set_color_off",
                    "mangled": "_inCAAAAw27z",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_color_off(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f6f666628293b",
                    "cpp_ref": "void NodePath::set_color_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_color_off(NodePath *param0)"
                    ],
                    "fn": "set_color_off",
                    "indexed": "NodePath$282$set_color_off",
                    "mangled": "_inCAAAAE1gC",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_color(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_color_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f636f6c6f7228293b",
                    "cpp_ref": "void NodePath::clear_color(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_color",
                    "extern": [
                        "void",
                        "NodePath$_$clear_color(NodePath *param0)"
                    ],
                    "fn": "clear_color",
                    "indexed": "NodePath$283$clear_color",
                    "mangled": "_inCAAAA1mr9",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_color(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_color_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f636f6c6f7228293b",
                    "cpp_ref": "bool NodePath::has_color(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_color",
                    "extern": [
                        "bool",
                        "NodePath$_$has_color(NodePath const *param0)"
                    ],
                    "fn": "has_color",
                    "indexed": "NodePath$284$has_color",
                    "mangled": "_inCAAAAbz4h",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_color(NodePath const *param0)",
                    "c_type": "LColor *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_color_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c436f6c6f7228282a706172616d30292e6765745f636f6c6f722829293b",
                    "cpp_ref": "LColor NodePath::get_color(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_color",
                    "extern": [
                        "LColor *",
                        "NodePath$_$get_color(NodePath const *param0)"
                    ],
                    "fn": "get_color",
                    "indexed": "NodePath$285$get_color",
                    "mangled": "_inCAAAAkzr5",
                    "ot": "LColor",
                    "rt": "LColor"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_color_scale(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_color_scale_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f636f6c6f725f7363616c6528293b",
                    "cpp_ref": "bool NodePath::has_color_scale(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_color_scale",
                    "extern": [
                        "bool",
                        "NodePath$_$has_color_scale(NodePath const *param0)"
                    ],
                    "fn": "has_color_scale",
                    "indexed": "NodePath$286$has_color_scale",
                    "mangled": "_inCAAAAh9q2",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_color_scale(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_color_scale_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f636f6c6f725f7363616c6528293b",
                    "cpp_ref": "void NodePath::clear_color_scale(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$clear_color_scale(NodePath *param0)"
                    ],
                    "fn": "clear_color_scale",
                    "indexed": "NodePath$287$clear_color_scale",
                    "mangled": "_inCAAAANGLo",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "scale",
                        "priority"
                    ],
                    "args": [
                        "LVecBase4 const &scale",
                        "int priority"
                    ],
                    "argt": [
                        "LVecBase4 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase4 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_color_scale(NodePath *param0, LVecBase4 const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_scale_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c65282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_color_scale(LVecBase4 const &scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_color_scale(NodePath *param0, LVecBase4 const *param1, int param2)"
                    ],
                    "fn": "set_color_scale",
                    "indexed": "NodePath$288$set_color_scale",
                    "mangled": "_inCAAAAEUIg",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "scale"
                    ],
                    "args": [
                        "LVecBase4 const &scale"
                    ],
                    "argt": [
                        "LVecBase4 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase4 const *"
                    ],
                    "c_ref": "NodePath$_$set_color_scale(NodePath *param0, LVecBase4 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_scale_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c65282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_color_scale(LVecBase4 const &scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_color_scale(NodePath *param0, LVecBase4 const *param1)"
                    ],
                    "fn": "set_color_scale",
                    "indexed": "NodePath$289$set_color_scale",
                    "mangled": "_inCAAAAd9dr",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "sx",
                        "sy",
                        "sz",
                        "sa",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz",
                        "PN_stdfloat sa",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_color_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_scale_v_pffffi",
                    "cni_args": "pffffi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePath::set_color_scale(PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz, PN_stdfloat sa, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_color_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)"
                    ],
                    "fn": "set_color_scale",
                    "indexed": "NodePath$290$set_color_scale",
                    "mangled": "_inCAAAAV6Aq",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "sx",
                        "sy",
                        "sz",
                        "sa"
                    ],
                    "args": [
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz",
                        "PN_stdfloat sa"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_color_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_scale_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_color_scale(PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz, PN_stdfloat sa, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_color_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_color_scale",
                    "indexed": "NodePath$291$set_color_scale",
                    "mangled": "_inCAAAA9niJ",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "scale",
                        "priority"
                    ],
                    "args": [
                        "LVecBase4 const &scale",
                        "int priority"
                    ],
                    "argt": [
                        "LVecBase4 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase4 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$compose_color_scale(NodePath *param0, LVecBase4 const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_compose_color_scale_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f73655f636f6c6f725f7363616c65282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::compose_color_scale(LVecBase4 const &scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$compose_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$compose_color_scale(NodePath *param0, LVecBase4 const *param1, int param2)"
                    ],
                    "fn": "compose_color_scale",
                    "indexed": "NodePath$292$compose_color_scale",
                    "mangled": "_inCAAAAmPCX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "scale"
                    ],
                    "args": [
                        "LVecBase4 const &scale"
                    ],
                    "argt": [
                        "LVecBase4 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LVecBase4 const *"
                    ],
                    "c_ref": "NodePath$_$compose_color_scale(NodePath *param0, LVecBase4 const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_compose_color_scale_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f73655f636f6c6f725f7363616c65282a706172616d31293b",
                    "cpp_ref": "void NodePath::compose_color_scale(LVecBase4 const &scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$compose_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$compose_color_scale(NodePath *param0, LVecBase4 const *param1)"
                    ],
                    "fn": "compose_color_scale",
                    "indexed": "NodePath$293$compose_color_scale",
                    "mangled": "_inCAAAAKBwX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "sx",
                        "sy",
                        "sz",
                        "sa",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz",
                        "PN_stdfloat sa",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePath$_$compose_color_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_compose_color_scale_v_pffffi",
                    "cni_args": "pffffi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f73655f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePath::compose_color_scale(PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz, PN_stdfloat sa, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$compose_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$compose_color_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)"
                    ],
                    "fn": "compose_color_scale",
                    "indexed": "NodePath$294$compose_color_scale",
                    "mangled": "_inCAAAA6Th7",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "sx",
                        "sy",
                        "sz",
                        "sa"
                    ],
                    "args": [
                        "PN_stdfloat sx",
                        "PN_stdfloat sy",
                        "PN_stdfloat sz",
                        "PN_stdfloat sa"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$compose_color_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_compose_color_scale_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f73655f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::compose_color_scale(PN_stdfloat sx, PN_stdfloat sy, PN_stdfloat sz, PN_stdfloat sa, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$compose_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$compose_color_scale(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "compose_color_scale",
                    "indexed": "NodePath$295$compose_color_scale",
                    "mangled": "_inCAAAARYgN",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_color_scale_off(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_scale_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c655f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_color_scale_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color_scale_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_color_scale_off(NodePath *param0, int param1)"
                    ],
                    "fn": "set_color_scale_off",
                    "indexed": "NodePath$296$set_color_scale_off",
                    "mangled": "_inCAAAAhzGl",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_color_scale_off(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_color_scale_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c655f6f666628293b",
                    "cpp_ref": "void NodePath::set_color_scale_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_color_scale_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_color_scale_off(NodePath *param0)"
                    ],
                    "fn": "set_color_scale_off",
                    "indexed": "NodePath$297$set_color_scale_off",
                    "mangled": "_inCAAAAPZ4L",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "scale",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat scale",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_alpha_scale(NodePath *param0, PN_stdfloat param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_alpha_scale_v_pfi",
                    "cni_args": "pfi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f616c7068615f7363616c6528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_alpha_scale(PN_stdfloat scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_alpha_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_alpha_scale(NodePath *param0, PN_stdfloat param1, int param2)"
                    ],
                    "fn": "set_alpha_scale",
                    "indexed": "NodePath$298$set_alpha_scale",
                    "mangled": "_inCAAAAWTli",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "scale"
                    ],
                    "args": [
                        "PN_stdfloat scale"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_alpha_scale(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_alpha_scale_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f616c7068615f7363616c6528706172616d31293b",
                    "cpp_ref": "void NodePath::set_alpha_scale(PN_stdfloat scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_alpha_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_alpha_scale(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_alpha_scale",
                    "indexed": "NodePath$299$set_alpha_scale",
                    "mangled": "_inCAAAAKriG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "scale",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat scale",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_all_color_scale(NodePath *param0, PN_stdfloat param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_all_color_scale_v_pfi",
                    "cni_args": "pfi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f616c6c5f636f6c6f725f7363616c6528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_all_color_scale(PN_stdfloat scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_all_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_all_color_scale(NodePath *param0, PN_stdfloat param1, int param2)"
                    ],
                    "fn": "set_all_color_scale",
                    "indexed": "NodePath$300$set_all_color_scale",
                    "mangled": "_inCAAAAs85Y",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "scale"
                    ],
                    "args": [
                        "PN_stdfloat scale"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_all_color_scale(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_all_color_scale_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f616c6c5f636f6c6f725f7363616c6528706172616d31293b",
                    "cpp_ref": "void NodePath::set_all_color_scale(PN_stdfloat scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_all_color_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_all_color_scale(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_all_color_scale",
                    "indexed": "NodePath$301$set_all_color_scale",
                    "mangled": "_inCAAAA_ALr",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sr"
                    ],
                    "args": [
                        "PN_stdfloat sr"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sr(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sr_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f737228706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_sr(PN_stdfloat sr)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sr",
                    "extern": [
                        "void",
                        "NodePath$_$set_sr(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_sr",
                    "indexed": "NodePath$302$set_sr",
                    "mangled": "_inCAAAAeAGa",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sg"
                    ],
                    "args": [
                        "PN_stdfloat sg"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sg(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sg_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f736728706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_sg(PN_stdfloat sg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sg",
                    "extern": [
                        "void",
                        "NodePath$_$set_sg(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_sg",
                    "indexed": "NodePath$303$set_sg",
                    "mangled": "_inCAAAAGuaY",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sb"
                    ],
                    "args": [
                        "PN_stdfloat sb"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sb(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sb_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f736228706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_sb(PN_stdfloat sb)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sb",
                    "extern": [
                        "void",
                        "NodePath$_$set_sb(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_sb",
                    "indexed": "NodePath$304$set_sb",
                    "mangled": "_inCAAAAeypX",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sa"
                    ],
                    "args": [
                        "PN_stdfloat sa"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_sa(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_sa_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f736128706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_sa(PN_stdfloat sa)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_sa",
                    "extern": [
                        "void",
                        "NodePath$_$set_sa(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_sa",
                    "indexed": "NodePath$305$set_sa",
                    "mangled": "_inCAAAAWBgX",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_color_scale(NodePath const *param0)",
                    "c_type": "LVecBase4 const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_color_scale_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f636f6c6f725f7363616c652829293b",
                    "cpp_ref": "LVecBase4 const &NodePath::get_color_scale(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_color_scale",
                    "extern": [
                        "LVecBase4 const *",
                        "NodePath$_$get_color_scale(NodePath const *param0)"
                    ],
                    "fn": "get_color_scale",
                    "indexed": "NodePath$306$get_color_scale",
                    "mangled": "_inCAAAAH9dO",
                    "ot": "LVecBase4 const&",
                    "rt": "LVecBase4"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sr(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sr_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f737228293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sr(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sr",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sr(NodePath const *param0)"
                    ],
                    "fn": "get_sr",
                    "indexed": "NodePath$307$get_sr",
                    "mangled": "_inCAAAAXd9T",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sg(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sg_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f736728293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sg(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sg",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sg(NodePath const *param0)"
                    ],
                    "fn": "get_sg",
                    "indexed": "NodePath$308$get_sg",
                    "mangled": "_inCAAAA_7RS",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sb(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sb_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f736228293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sb(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sb",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sb(NodePath const *param0)"
                    ],
                    "fn": "get_sb",
                    "indexed": "NodePath$309$get_sb",
                    "mangled": "_inCAAAAXPhR",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_sa(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_sa_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f736128293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_sa(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_sa",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_sa(NodePath const *param0)"
                    ],
                    "fn": "get_sa",
                    "indexed": "NodePath$310$get_sa",
                    "mangled": "_inCAAAAveXR",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 2,
                    "argn": [
                        "light",
                        "priority"
                    ],
                    "args": [
                        "NodePath const &light",
                        "int priority"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_light(NodePath *param0, NodePath const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_light_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c69676874282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_light(NodePath const &light, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_light",
                    "extern": [
                        "void",
                        "NodePath$_$set_light(NodePath *param0, NodePath const *param1, int param2)"
                    ],
                    "fn": "set_light",
                    "indexed": "NodePath$311$set_light",
                    "mangled": "_inCAAAAOmzA",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "light"
                    ],
                    "args": [
                        "NodePath const &light"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$set_light(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_light_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c69676874282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_light(NodePath const &light, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_light",
                    "extern": [
                        "void",
                        "NodePath$_$set_light(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "set_light",
                    "indexed": "NodePath$312$set_light",
                    "mangled": "_inCAAAAVcVg",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "light",
                        "priority"
                    ],
                    "args": [
                        "NodePath const &light",
                        "int priority"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_light_off(NodePath *param0, NodePath const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_light_off_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c696768745f6f6666282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_light_off(NodePath const &light, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_light_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_light_off(NodePath *param0, NodePath const *param1, int param2)"
                    ],
                    "fn": "set_light_off",
                    "indexed": "NodePath$313$set_light_off",
                    "mangled": "_inCAAAAmGGU",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "light"
                    ],
                    "args": [
                        "NodePath const &light"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$set_light_off(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_light_off_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c696768745f6f6666282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_light_off(NodePath const &light, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_light_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_light_off(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "set_light_off",
                    "indexed": "NodePath$314$set_light_off",
                    "mangled": "_inCAAAAs0Fm",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_light_off(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_light_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c696768745f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_light_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_light_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_light_off(NodePath *param0, int param1)"
                    ],
                    "fn": "set_light_off",
                    "indexed": "NodePath$315$set_light_off",
                    "mangled": "_inCAAAA3hHT",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_light_off(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_light_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c696768745f6f666628293b",
                    "cpp_ref": "void NodePath::set_light_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_light_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_light_off(NodePath *param0)"
                    ],
                    "fn": "set_light_off",
                    "indexed": "NodePath$316$set_light_off",
                    "mangled": "_inCAAAA8iuh",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_light(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_light_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6c6967687428293b",
                    "cpp_ref": "void NodePath::clear_light(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_light",
                    "extern": [
                        "void",
                        "NodePath$_$clear_light(NodePath *param0)"
                    ],
                    "fn": "clear_light",
                    "indexed": "NodePath$317$clear_light",
                    "mangled": "_inCAAAA_y39",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "light"
                    ],
                    "args": [
                        "NodePath const &light"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$clear_light(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_light_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6c69676874282a706172616d31293b",
                    "cpp_ref": "void NodePath::clear_light(NodePath const &light)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_light",
                    "extern": [
                        "void",
                        "NodePath$_$clear_light(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "clear_light",
                    "indexed": "NodePath$318$clear_light",
                    "mangled": "_inCAAAAF_28",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "light"
                    ],
                    "args": [
                        "NodePath const &light"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_light(NodePath const *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_light_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f6c69676874282a706172616d31293b",
                    "cpp_ref": "bool NodePath::has_light(NodePath const &light) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_light",
                    "extern": [
                        "bool",
                        "NodePath$_$has_light(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "has_light",
                    "indexed": "NodePath$319$has_light",
                    "mangled": "_inCAAAALCWi",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_light_off(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_light_off_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f6c696768745f6f666628293b",
                    "cpp_ref": "bool NodePath::has_light_off(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_light_off",
                    "extern": [
                        "bool",
                        "NodePath$_$has_light_off(NodePath const *param0)"
                    ],
                    "fn": "has_light_off",
                    "indexed": "NodePath$320$has_light_off",
                    "mangled": "_inCAAAAKg80",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "light"
                    ],
                    "args": [
                        "NodePath const &light"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_light_off(NodePath const *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_light_off_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f6c696768745f6f6666282a706172616d31293b",
                    "cpp_ref": "bool NodePath::has_light_off(NodePath const &light) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_light_off",
                    "extern": [
                        "bool",
                        "NodePath$_$has_light_off(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "has_light_off",
                    "indexed": "NodePath$321$has_light_off",
                    "mangled": "_inCAAAA3UBH",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "clip_plane",
                        "priority"
                    ],
                    "args": [
                        "NodePath const &clip_plane",
                        "int priority"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_clip_plane(NodePath *param0, NodePath const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_clip_plane_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636c69705f706c616e65282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_clip_plane(NodePath const &clip_plane, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_clip_plane",
                    "extern": [
                        "void",
                        "NodePath$_$set_clip_plane(NodePath *param0, NodePath const *param1, int param2)"
                    ],
                    "fn": "set_clip_plane",
                    "indexed": "NodePath$322$set_clip_plane",
                    "mangled": "_inCAAAApYL4",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "clip_plane"
                    ],
                    "args": [
                        "NodePath const &clip_plane"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$set_clip_plane(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_clip_plane_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636c69705f706c616e65282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_clip_plane(NodePath const &clip_plane, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_clip_plane",
                    "extern": [
                        "void",
                        "NodePath$_$set_clip_plane(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "set_clip_plane",
                    "indexed": "NodePath$323$set_clip_plane",
                    "mangled": "_inCAAAA1XO3",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "clip_plane",
                        "priority"
                    ],
                    "args": [
                        "NodePath const &clip_plane",
                        "int priority"
                    ],
                    "argt": [
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_clip_plane_off(NodePath *param0, NodePath const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_clip_plane_off_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636c69705f706c616e655f6f6666282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_clip_plane_off(NodePath const &clip_plane, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_clip_plane_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_clip_plane_off(NodePath *param0, NodePath const *param1, int param2)"
                    ],
                    "fn": "set_clip_plane_off",
                    "indexed": "NodePath$324$set_clip_plane_off",
                    "mangled": "_inCAAAA6bye",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "clip_plane"
                    ],
                    "args": [
                        "NodePath const &clip_plane"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$set_clip_plane_off(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_clip_plane_off_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636c69705f706c616e655f6f6666282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_clip_plane_off(NodePath const &clip_plane, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_clip_plane_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_clip_plane_off(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "set_clip_plane_off",
                    "indexed": "NodePath$325$set_clip_plane_off",
                    "mangled": "_inCAAAA2qvC",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_clip_plane_off(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_clip_plane_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636c69705f706c616e655f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_clip_plane_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_clip_plane_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_clip_plane_off(NodePath *param0, int param1)"
                    ],
                    "fn": "set_clip_plane_off",
                    "indexed": "NodePath$326$set_clip_plane_off",
                    "mangled": "_inCAAAA28yc",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_clip_plane_off(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_clip_plane_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636c69705f706c616e655f6f666628293b",
                    "cpp_ref": "void NodePath::set_clip_plane_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_clip_plane_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_clip_plane_off(NodePath *param0)"
                    ],
                    "fn": "set_clip_plane_off",
                    "indexed": "NodePath$327$set_clip_plane_off",
                    "mangled": "_inCAAAAcSB6",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_clip_plane(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_clip_plane_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f636c69705f706c616e6528293b",
                    "cpp_ref": "void NodePath::clear_clip_plane(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_clip_plane",
                    "extern": [
                        "void",
                        "NodePath$_$clear_clip_plane(NodePath *param0)"
                    ],
                    "fn": "clear_clip_plane",
                    "indexed": "NodePath$328$clear_clip_plane",
                    "mangled": "_inCAAAAteSh",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "clip_plane"
                    ],
                    "args": [
                        "NodePath const &clip_plane"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$clear_clip_plane(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_clip_plane_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f636c69705f706c616e65282a706172616d31293b",
                    "cpp_ref": "void NodePath::clear_clip_plane(NodePath const &clip_plane)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_clip_plane",
                    "extern": [
                        "void",
                        "NodePath$_$clear_clip_plane(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "clear_clip_plane",
                    "indexed": "NodePath$329$clear_clip_plane",
                    "mangled": "_inCAAAABURf",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "clip_plane"
                    ],
                    "args": [
                        "NodePath const &clip_plane"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_clip_plane(NodePath const *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_clip_plane_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f636c69705f706c616e65282a706172616d31293b",
                    "cpp_ref": "bool NodePath::has_clip_plane(NodePath const &clip_plane) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_clip_plane",
                    "extern": [
                        "bool",
                        "NodePath$_$has_clip_plane(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "has_clip_plane",
                    "indexed": "NodePath$330$has_clip_plane",
                    "mangled": "_inCAAAAUt_T",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_clip_plane_off(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_clip_plane_off_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f636c69705f706c616e655f6f666628293b",
                    "cpp_ref": "bool NodePath::has_clip_plane_off(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_clip_plane_off",
                    "extern": [
                        "bool",
                        "NodePath$_$has_clip_plane_off(NodePath const *param0)"
                    ],
                    "fn": "has_clip_plane_off",
                    "indexed": "NodePath$331$has_clip_plane_off",
                    "mangled": "_inCAAAAvnN5",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "clip_plane"
                    ],
                    "args": [
                        "NodePath const &clip_plane"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_clip_plane_off(NodePath const *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_clip_plane_off_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f636c69705f706c616e655f6f6666282a706172616d31293b",
                    "cpp_ref": "bool NodePath::has_clip_plane_off(NodePath const &clip_plane) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_clip_plane_off",
                    "extern": [
                        "bool",
                        "NodePath$_$has_clip_plane_off(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "has_clip_plane_off",
                    "indexed": "NodePath$332$has_clip_plane_off",
                    "mangled": "_inCAAAAZ8Wd",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "a",
                        "b"
                    ],
                    "args": [
                        "LPoint3 const &a",
                        "LPoint3 const &b"
                    ],
                    "argt": [
                        "LPoint3 const&",
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LPoint3 const *",
                        "LPoint3 const *"
                    ],
                    "c_ref": "NodePath$_$set_scissor(NodePath *param0, LPoint3 const *param1, LPoint3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scissor_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73636973736f72282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_scissor(LPoint3 const &a, LPoint3 const &b)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scissor",
                    "extern": [
                        "void",
                        "NodePath$_$set_scissor(NodePath *param0, LPoint3 const *param1, LPoint3 const *param2)"
                    ],
                    "fn": "set_scissor",
                    "indexed": "NodePath$333$set_scissor",
                    "mangled": "_inCAAAAE9XS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "a",
                        "b",
                        "c",
                        "d"
                    ],
                    "args": [
                        "LPoint3 const &a",
                        "LPoint3 const &b",
                        "LPoint3 const &c",
                        "LPoint3 const &d"
                    ],
                    "argt": [
                        "LPoint3 const&",
                        "LPoint3 const&",
                        "LPoint3 const&",
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LPoint3 const *",
                        "LPoint3 const *",
                        "LPoint3 const *",
                        "LPoint3 const *"
                    ],
                    "c_ref": "NodePath$_$set_scissor(NodePath *param0, LPoint3 const *param1, LPoint3 const *param2, LPoint3 const *param3, LPoint3 const *param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scissor_v_ppppp",
                    "cni_args": "ppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73636973736f72282a706172616d312c202a706172616d322c202a706172616d332c202a706172616d34293b",
                    "cpp_ref": "void NodePath::set_scissor(LPoint3 const &a, LPoint3 const &b, LPoint3 const &c, LPoint3 const &d)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scissor",
                    "extern": [
                        "void",
                        "NodePath$_$set_scissor(NodePath *param0, LPoint3 const *param1, LPoint3 const *param2, LPoint3 const *param3, LPoint3 const *param4)"
                    ],
                    "fn": "set_scissor",
                    "indexed": "NodePath$334$set_scissor",
                    "mangled": "_inCAAAAyDBC",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "a",
                        "b"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LPoint3 const &a",
                        "LPoint3 const &b"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LPoint3 const&",
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LPoint3 const *",
                        "LPoint3 const *"
                    ],
                    "c_ref": "NodePath$_$set_scissor(NodePath *param0, NodePath const *param1, LPoint3 const *param2, LPoint3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scissor_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73636973736f72282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_scissor(NodePath const &other, LPoint3 const &a, LPoint3 const &b)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scissor",
                    "extern": [
                        "void",
                        "NodePath$_$set_scissor(NodePath *param0, NodePath const *param1, LPoint3 const *param2, LPoint3 const *param3)"
                    ],
                    "fn": "set_scissor",
                    "indexed": "NodePath$335$set_scissor",
                    "mangled": "_inCAAAANCEX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "other",
                        "a",
                        "b",
                        "c",
                        "d"
                    ],
                    "args": [
                        "NodePath const &other",
                        "LPoint3 const &a",
                        "LPoint3 const &b",
                        "LPoint3 const &c",
                        "LPoint3 const &d"
                    ],
                    "argt": [
                        "NodePath const&",
                        "LPoint3 const&",
                        "LPoint3 const&",
                        "LPoint3 const&",
                        "LPoint3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "LPoint3 const *",
                        "LPoint3 const *",
                        "LPoint3 const *",
                        "LPoint3 const *"
                    ],
                    "c_ref": "NodePath$_$set_scissor(NodePath *param0, NodePath const *param1, LPoint3 const *param2, LPoint3 const *param3, LPoint3 const *param4, LPoint3 const *param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scissor_v_pppppp",
                    "cni_args": "pppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73636973736f72282a706172616d312c202a706172616d322c202a706172616d332c202a706172616d342c202a706172616d35293b",
                    "cpp_ref": "void NodePath::set_scissor(NodePath const &other, LPoint3 const &a, LPoint3 const &b, LPoint3 const &c, LPoint3 const &d)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scissor",
                    "extern": [
                        "void",
                        "NodePath$_$set_scissor(NodePath *param0, NodePath const *param1, LPoint3 const *param2, LPoint3 const *param3, LPoint3 const *param4, LPoint3 const *param5)"
                    ],
                    "fn": "set_scissor",
                    "indexed": "NodePath$336$set_scissor",
                    "mangled": "_inCAAAAjStV",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "left",
                        "right",
                        "bottom",
                        "top"
                    ],
                    "args": [
                        "PN_stdfloat left",
                        "PN_stdfloat right",
                        "PN_stdfloat bottom",
                        "PN_stdfloat top"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_scissor(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_scissor_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73636973736f7228706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "void NodePath::set_scissor(PN_stdfloat left, PN_stdfloat right, PN_stdfloat bottom, PN_stdfloat top)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_scissor",
                    "extern": [
                        "void",
                        "NodePath$_$set_scissor(NodePath *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_scissor",
                    "indexed": "NodePath$337$set_scissor",
                    "mangled": "_inCAAAAbjJd",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_scissor(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_scissor_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f73636973736f7228293b",
                    "cpp_ref": "void NodePath::clear_scissor(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_scissor",
                    "extern": [
                        "void",
                        "NodePath$_$clear_scissor(NodePath *param0)"
                    ],
                    "fn": "clear_scissor",
                    "indexed": "NodePath$338$clear_scissor",
                    "mangled": "_inCAAAA0gei",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_scissor(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_scissor_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f73636973736f7228293b",
                    "cpp_ref": "bool NodePath::has_scissor(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_scissor",
                    "extern": [
                        "bool",
                        "NodePath$_$has_scissor(NodePath const *param0)"
                    ],
                    "fn": "has_scissor",
                    "indexed": "NodePath$339$has_scissor",
                    "mangled": "_inCAAAAuv7f",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "occluder"
                    ],
                    "args": [
                        "NodePath const &occluder"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$set_occluder(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_occluder_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6f63636c75646572282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_occluder(NodePath const &occluder)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_occluder",
                    "extern": [
                        "void",
                        "NodePath$_$set_occluder(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "set_occluder",
                    "indexed": "NodePath$340$set_occluder",
                    "mangled": "_inCAAAAOhjp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_occluder(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_occluder_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6f63636c7564657228293b",
                    "cpp_ref": "void NodePath::clear_occluder(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_occluder",
                    "extern": [
                        "void",
                        "NodePath$_$clear_occluder(NodePath *param0)"
                    ],
                    "fn": "clear_occluder",
                    "indexed": "NodePath$341$clear_occluder",
                    "mangled": "_inCAAAAn6ch",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "occluder"
                    ],
                    "args": [
                        "NodePath const &occluder"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$clear_occluder(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_occluder_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6f63636c75646572282a706172616d31293b",
                    "cpp_ref": "void NodePath::clear_occluder(NodePath const &occluder)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_occluder",
                    "extern": [
                        "void",
                        "NodePath$_$clear_occluder(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "clear_occluder",
                    "indexed": "NodePath$342$clear_occluder",
                    "mangled": "_inCAAAAcaDt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "occluder"
                    ],
                    "args": [
                        "NodePath const &occluder"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_occluder(NodePath const *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_occluder_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f6f63636c75646572282a706172616d31293b",
                    "cpp_ref": "bool NodePath::has_occluder(NodePath const &occluder) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_occluder",
                    "extern": [
                        "bool",
                        "NodePath$_$has_occluder(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "has_occluder",
                    "indexed": "NodePath$343$has_occluder",
                    "mangled": "_inCAAAAzNny",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 3,
                    "argn": [
                        "bin_name",
                        "draw_order",
                        "priority"
                    ],
                    "args": [
                        "std::string const &bin_name",
                        "int draw_order",
                        "int priority"
                    ],
                    "argt": [
                        "std::string const&",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "char const *",
                        "int",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_bin(NodePath *param0, char const *param1, int param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_bin_v_psii",
                    "cni_args": "psii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696e287374643a3a737472696e6728706172616d31292c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_bin(std::string const &bin_name, int draw_order, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_bin",
                    "extern": [
                        "void",
                        "NodePath$_$set_bin(NodePath *param0, char const *param1, int param2, int param3)"
                    ],
                    "fn": "set_bin",
                    "indexed": "NodePath$344$set_bin",
                    "mangled": "_inCAAAA9Xmj",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "bin_name",
                        "draw_order"
                    ],
                    "args": [
                        "std::string const &bin_name",
                        "int draw_order"
                    ],
                    "argt": [
                        "std::string const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "char const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_bin(NodePath *param0, char const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_bin_v_psi",
                    "cni_args": "psi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696e287374643a3a737472696e6728706172616d31292c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_bin(std::string const &bin_name, int draw_order, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_bin",
                    "extern": [
                        "void",
                        "NodePath$_$set_bin(NodePath *param0, char const *param1, int param2)"
                    ],
                    "fn": "set_bin",
                    "indexed": "NodePath$345$set_bin",
                    "mangled": "_inCAAAARL_D",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_bin(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_bin_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f62696e28293b",
                    "cpp_ref": "void NodePath::clear_bin(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_bin",
                    "extern": [
                        "void",
                        "NodePath$_$clear_bin(NodePath *param0)"
                    ],
                    "fn": "clear_bin",
                    "indexed": "NodePath$346$clear_bin",
                    "mangled": "_inCAAAAbzEW",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_bin(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_bin_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f62696e28293b",
                    "cpp_ref": "bool NodePath::has_bin(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_bin",
                    "extern": [
                        "bool",
                        "NodePath$_$has_bin(NodePath const *param0)"
                    ],
                    "fn": "has_bin",
                    "indexed": "NodePath$347$has_bin",
                    "mangled": "_inCAAAATmsC",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_bin_name(NodePath const *param0)",
                    "c_type": "char const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_bin_name_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f62696e5f6e616d6528293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string NodePath::get_bin_name(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_bin_name",
                    "extern": [
                        "char const *",
                        "NodePath$_$get_bin_name(NodePath const *param0)"
                    ],
                    "fn": "get_bin_name",
                    "indexed": "NodePath$348$get_bin_name",
                    "mangled": "_inCAAAALAFg",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_bin_draw_order(NodePath const *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_bin_draw_order_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f62696e5f647261775f6f7264657228293b",
                    "cpp_ref": "int NodePath::get_bin_draw_order(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_bin_draw_order",
                    "extern": [
                        "int",
                        "NodePath$_$get_bin_draw_order(NodePath const *param0)"
                    ],
                    "fn": "get_bin_draw_order",
                    "indexed": "NodePath$349$get_bin_draw_order",
                    "mangled": "_inCAAAA2Nw9",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 3,
                    "argn": [
                        "tex",
                        "sampler",
                        "priority"
                    ],
                    "args": [
                        "Texture *tex",
                        "SamplerState const &sampler",
                        "int priority"
                    ],
                    "argt": [
                        "Texture*",
                        "SamplerState const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Texture *",
                        "SamplerState const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_texture(NodePath *param0, Texture *param1, SamplerState const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_v_pppi",
                    "cni_args": "pppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_texture(Texture *tex, SamplerState const &sampler, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture(NodePath *param0, Texture *param1, SamplerState const *param2, int param3)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePath$350$set_texture",
                    "mangled": "_inCAAAA7p69",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "tex",
                        "sampler"
                    ],
                    "args": [
                        "Texture *tex",
                        "SamplerState const &sampler"
                    ],
                    "argt": [
                        "Texture*",
                        "SamplerState const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Texture *",
                        "SamplerState const *"
                    ],
                    "c_ref": "NodePath$_$set_texture(NodePath *param0, Texture *param1, SamplerState const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::set_texture(Texture *tex, SamplerState const &sampler, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture(NodePath *param0, Texture *param1, SamplerState const *param2)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePath$351$set_texture",
                    "mangled": "_inCAAAA4oDr",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "tex",
                        "priority"
                    ],
                    "args": [
                        "Texture *tex",
                        "int priority"
                    ],
                    "argt": [
                        "Texture*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Texture *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_texture(NodePath *param0, Texture *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_texture(Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture(NodePath *param0, Texture *param1, int param2)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePath$352$set_texture",
                    "mangled": "_inCAAAAFEvx",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "tex"
                    ],
                    "args": [
                        "Texture *tex"
                    ],
                    "argt": [
                        "Texture*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Texture *"
                    ],
                    "c_ref": "NodePath$_$set_texture(NodePath *param0, Texture *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d31293b",
                    "cpp_ref": "void NodePath::set_texture(Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture(NodePath *param0, Texture *param1)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePath$353$set_texture",
                    "mangled": "_inCAAAAchTm",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "stage",
                        "tex",
                        "sampler",
                        "priority"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "Texture *tex",
                        "SamplerState const &sampler",
                        "int priority"
                    ],
                    "argt": [
                        "TextureStage*",
                        "Texture*",
                        "SamplerState const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "Texture *",
                        "SamplerState const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_texture(NodePath *param0, TextureStage *param1, Texture *param2, SamplerState const *param3, int param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_v_ppppi",
                    "cni_args": "ppppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c20706172616d322c202a706172616d332c20706172616d34293b",
                    "cpp_ref": "void NodePath::set_texture(TextureStage *stage, Texture *tex, SamplerState const &sampler, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture(NodePath *param0, TextureStage *param1, Texture *param2, SamplerState const *param3, int param4)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePath$354$set_texture",
                    "mangled": "_inCAAAAYd0V",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "stage",
                        "tex",
                        "sampler"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "Texture *tex",
                        "SamplerState const &sampler"
                    ],
                    "argt": [
                        "TextureStage*",
                        "Texture*",
                        "SamplerState const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "Texture *",
                        "SamplerState const *"
                    ],
                    "c_ref": "NodePath$_$set_texture(NodePath *param0, TextureStage *param1, Texture *param2, SamplerState const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_texture(TextureStage *stage, Texture *tex, SamplerState const &sampler, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture(NodePath *param0, TextureStage *param1, Texture *param2, SamplerState const *param3)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePath$355$set_texture",
                    "mangled": "_inCAAAAUSy5",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "stage",
                        "tex",
                        "priority"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "Texture *tex",
                        "int priority"
                    ],
                    "argt": [
                        "TextureStage*",
                        "Texture*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "Texture *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_texture(NodePath *param0, TextureStage *param1, Texture *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_v_pppi_1_v_pppi",
                    "cni_args": "pppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_texture(TextureStage *stage, Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture(NodePath *param0, TextureStage *param1, Texture *param2, int param3)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePath$356$set_texture",
                    "mangled": "_inCAAAAgM3e",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "tex"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "Texture *tex"
                    ],
                    "argt": [
                        "TextureStage*",
                        "Texture*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "Texture *"
                    ],
                    "c_ref": "NodePath$_$set_texture(NodePath *param0, TextureStage *param1, Texture *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_v_ppp_1_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_texture(TextureStage *stage, Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture(NodePath *param0, TextureStage *param1, Texture *param2)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePath$357$set_texture",
                    "mangled": "_inCAAAAtHou",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "priority"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "int priority"
                    ],
                    "argt": [
                        "TextureStage*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_texture_off(NodePath *param0, TextureStage *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_off_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746578747572655f6f666628706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_texture_off(TextureStage *stage, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture_off(NodePath *param0, TextureStage *param1, int param2)"
                    ],
                    "fn": "set_texture_off",
                    "indexed": "NodePath$358$set_texture_off",
                    "mangled": "_inCAAAAHq1d",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$set_texture_off(NodePath *param0, TextureStage *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_off_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746578747572655f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_texture_off(TextureStage *stage, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture_off(NodePath *param0, TextureStage *param1)"
                    ],
                    "fn": "set_texture_off",
                    "indexed": "NodePath$359$set_texture_off",
                    "mangled": "_inCAAAAwSb0",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_texture_off(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746578747572655f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_texture_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture_off(NodePath *param0, int param1)"
                    ],
                    "fn": "set_texture_off",
                    "indexed": "NodePath$360$set_texture_off",
                    "mangled": "_inCAAAAw4bU",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_texture_off(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_texture_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746578747572655f6f666628293b",
                    "cpp_ref": "void NodePath::set_texture_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_texture_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_texture_off(NodePath *param0)"
                    ],
                    "fn": "set_texture_off",
                    "indexed": "NodePath$361$set_texture_off",
                    "mangled": "_inCAAAA_4vA",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_texture(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_texture_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7465787475726528293b",
                    "cpp_ref": "void NodePath::clear_texture(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_texture",
                    "extern": [
                        "void",
                        "NodePath$_$clear_texture(NodePath *param0)"
                    ],
                    "fn": "clear_texture",
                    "indexed": "NodePath$362$clear_texture",
                    "mangled": "_inCAAAANNBp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$clear_texture(NodePath *param0, TextureStage *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_texture_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7465787475726528706172616d31293b",
                    "cpp_ref": "void NodePath::clear_texture(TextureStage *stage)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_texture",
                    "extern": [
                        "void",
                        "NodePath$_$clear_texture(NodePath *param0, TextureStage *param1)"
                    ],
                    "fn": "clear_texture",
                    "indexed": "NodePath$363$clear_texture",
                    "mangled": "_inCAAAAcr3x",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_texture(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_texture_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7465787475726528293b",
                    "cpp_ref": "bool NodePath::has_texture(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_texture",
                    "extern": [
                        "bool",
                        "NodePath$_$has_texture(NodePath const *param0)"
                    ],
                    "fn": "has_texture",
                    "indexed": "NodePath$364$has_texture",
                    "mangled": "_inCAAAAqlwf",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$has_texture(NodePath const *param0, TextureStage *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_texture_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7465787475726528706172616d31293b",
                    "cpp_ref": "bool NodePath::has_texture(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_texture",
                    "extern": [
                        "bool",
                        "NodePath$_$has_texture(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "has_texture",
                    "indexed": "NodePath$365$has_texture",
                    "mangled": "_inCAAAACNaQ",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_texture_off(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_texture_off_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f746578747572655f6f666628293b",
                    "cpp_ref": "bool NodePath::has_texture_off(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_texture_off",
                    "extern": [
                        "bool",
                        "NodePath$_$has_texture_off(NodePath const *param0)"
                    ],
                    "fn": "has_texture_off",
                    "indexed": "NodePath$366$has_texture_off",
                    "mangled": "_inCAAAAxE64",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$has_texture_off(NodePath const *param0, TextureStage *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_texture_off_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f746578747572655f6f666628706172616d31293b",
                    "cpp_ref": "bool NodePath::has_texture_off(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_texture_off",
                    "extern": [
                        "bool",
                        "NodePath$_$has_texture_off(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "has_texture_off",
                    "indexed": "NodePath$367$has_texture_off",
                    "mangled": "_inCAAAAL45P",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_texture(NodePath const *param0)",
                    "c_type": "Texture *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_texture_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7465787475726528293b",
                    "cpp_ref": "Texture *NodePath::get_texture(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_texture",
                    "extern": [
                        "Texture *",
                        "NodePath$_$get_texture(NodePath const *param0)"
                    ],
                    "fn": "get_texture",
                    "indexed": "NodePath$368$get_texture",
                    "mangled": "_inCAAAAPll3",
                    "ot": "Texture*",
                    "rt": "Texture"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_texture(NodePath const *param0, TextureStage *param1)",
                    "c_type": "Texture *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_texture_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7465787475726528706172616d31293b",
                    "cpp_ref": "Texture *NodePath::get_texture(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_texture",
                    "extern": [
                        "Texture *",
                        "NodePath$_$get_texture(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_texture",
                    "indexed": "NodePath$369$get_texture",
                    "mangled": "_inCAAAAhMNo",
                    "ot": "Texture*",
                    "rt": "Texture"
                },
                {
                    "argc": 2,
                    "argn": [
                        "tex",
                        "new_tex"
                    ],
                    "args": [
                        "Texture *tex",
                        "Texture *new_tex"
                    ],
                    "argt": [
                        "Texture*",
                        "Texture*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Texture *",
                        "Texture *"
                    ],
                    "c_ref": "NodePath$_$replace_texture(NodePath *param0, Texture *param1, Texture *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_replace_texture_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7265706c6163655f7465787475726528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::replace_texture(Texture *tex, Texture *new_tex)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$replace_texture",
                    "extern": [
                        "void",
                        "NodePath$_$replace_texture(NodePath *param0, Texture *param1, Texture *param2)"
                    ],
                    "fn": "replace_texture",
                    "indexed": "NodePath$370$replace_texture",
                    "mangled": "_inCAAAAeUR6",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_texture_sampler(NodePath const *param0)",
                    "c_type": "SamplerState const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_texture_sampler_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f746578747572655f73616d706c65722829293b",
                    "cpp_ref": "SamplerState const &NodePath::get_texture_sampler(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_texture_sampler",
                    "extern": [
                        "SamplerState const *",
                        "NodePath$_$get_texture_sampler(NodePath const *param0)"
                    ],
                    "fn": "get_texture_sampler",
                    "indexed": "NodePath$371$get_texture_sampler",
                    "mangled": "_inCAAAAE2EV",
                    "ot": "SamplerState const&",
                    "rt": "SamplerState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_texture_sampler(NodePath const *param0, TextureStage *param1)",
                    "c_type": "SamplerState const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_texture_sampler_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f746578747572655f73616d706c657228706172616d3129293b",
                    "cpp_ref": "SamplerState const &NodePath::get_texture_sampler(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_texture_sampler",
                    "extern": [
                        "SamplerState const *",
                        "NodePath$_$get_texture_sampler(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_texture_sampler",
                    "indexed": "NodePath$372$get_texture_sampler",
                    "mangled": "_inCAAAA35fO",
                    "ot": "SamplerState const&",
                    "rt": "SamplerState"
                },
                {
                    "argc": 2,
                    "argn": [
                        "sha",
                        "priority"
                    ],
                    "args": [
                        "Shader const *sha",
                        "int priority"
                    ],
                    "argt": [
                        "Shader const*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Shader const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader(NodePath *param0, Shader const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73686164657228706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_shader(Shader const *sha, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader(NodePath *param0, Shader const *param1, int param2)"
                    ],
                    "fn": "set_shader",
                    "indexed": "NodePath$373$set_shader",
                    "mangled": "_inCAAAAx_K4",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sha"
                    ],
                    "args": [
                        "Shader const *sha"
                    ],
                    "argt": [
                        "Shader const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Shader const *"
                    ],
                    "c_ref": "NodePath$_$set_shader(NodePath *param0, Shader const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73686164657228706172616d31293b",
                    "cpp_ref": "void NodePath::set_shader(Shader const *sha, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader(NodePath *param0, Shader const *param1)"
                    ],
                    "fn": "set_shader",
                    "indexed": "NodePath$374$set_shader",
                    "mangled": "_inCAAAAOCeD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_off(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_shader_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_off(NodePath *param0, int param1)"
                    ],
                    "fn": "set_shader_off",
                    "indexed": "NodePath$375$set_shader_off",
                    "mangled": "_inCAAAAaMRX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_shader_off(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f6f666628293b",
                    "cpp_ref": "void NodePath::set_shader_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_off(NodePath *param0)"
                    ],
                    "fn": "set_shader_off",
                    "indexed": "NodePath$376$set_shader_off",
                    "mangled": "_inCAAAAzipq",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "shader_switch",
                        "priority"
                    ],
                    "args": [
                        "BitMask32 shader_switch",
                        "int priority"
                    ],
                    "argt": [
                        "BitMask32",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "BitMask32 *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_auto(NodePath *param0, BitMask32 *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_auto_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f6175746f282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_shader_auto(BitMask32 shader_switch, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_auto",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_auto(NodePath *param0, BitMask32 *param1, int param2)"
                    ],
                    "fn": "set_shader_auto",
                    "indexed": "NodePath$377$set_shader_auto",
                    "mangled": "_inCAAAAvooe",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "shader_switch"
                    ],
                    "args": [
                        "BitMask32 shader_switch"
                    ],
                    "argt": [
                        "BitMask32"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "BitMask32 *"
                    ],
                    "c_ref": "NodePath$_$set_shader_auto(NodePath *param0, BitMask32 *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_auto_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f6175746f282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_shader_auto(BitMask32 shader_switch, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_auto",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_auto(NodePath *param0, BitMask32 *param1)"
                    ],
                    "fn": "set_shader_auto",
                    "indexed": "NodePath$378$set_shader_auto",
                    "mangled": "_inCAAAAtc9p",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_auto(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_auto_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f6175746f28706172616d31293b",
                    "cpp_ref": "void NodePath::set_shader_auto(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_auto",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_auto(NodePath *param0, int param1)"
                    ],
                    "fn": "set_shader_auto",
                    "indexed": "NodePath$379$set_shader_auto",
                    "mangled": "_inCAAAA0Slp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_shader_auto(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_auto_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f6175746f28293b",
                    "cpp_ref": "void NodePath::set_shader_auto(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_auto",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_auto(NodePath *param0)"
                    ],
                    "fn": "set_shader_auto",
                    "indexed": "NodePath$380$set_shader_auto",
                    "mangled": "_inCAAAA7C4V",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_shader(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_shader_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f73686164657228293b",
                    "cpp_ref": "void NodePath::clear_shader(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_shader",
                    "extern": [
                        "void",
                        "NodePath$_$clear_shader(NodePath *param0)"
                    ],
                    "fn": "clear_shader",
                    "indexed": "NodePath$381$clear_shader",
                    "mangled": "_inCAAAAWwTt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LMatrix3 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LMatrix3 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LMatrix3 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LMatrix3 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LMatrix3 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LMatrix3 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$382$set_shader_input",
                    "mangled": "_inCAAAAWBYA",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LMatrix3 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LMatrix3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LMatrix3 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LMatrix3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LMatrix3 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LMatrix3 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$383$set_shader_input",
                    "mangled": "_inCAAAA8Zkw",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LMatrix4 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LMatrix4 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LMatrix4 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LMatrix4 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LMatrix4 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LMatrix4 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$384$set_shader_input",
                    "mangled": "_inCAAAAeGYc",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LMatrix4 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LMatrix4 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LMatrix4 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LMatrix4 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$385$set_shader_input",
                    "mangled": "_inCAAAA3WkM",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase2 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase2 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase2 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase2 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase2 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase2 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$386$set_shader_input",
                    "mangled": "_inCAAAAGNEb",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase2 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase2 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase2 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase2 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase2 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase2 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$387$set_shader_input",
                    "mangled": "_inCAAAA1Svg",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase2i const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase2i const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase2i const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase2i const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase2i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase2i const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$388$set_shader_input",
                    "mangled": "_inCAAAAs2g7",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase2i const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase2i const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase2i const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase2i const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase2i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase2i const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$389$set_shader_input",
                    "mangled": "_inCAAAAvyGw",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase3 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase3 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase3 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase3 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase3 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase3 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$390$set_shader_input",
                    "mangled": "_inCAAAAwgGb",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase3 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase3 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$391$set_shader_input",
                    "mangled": "_inCAAAA7_yg",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase3i const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase3i const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase3i const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase3i const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase3i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase3i const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$392$set_shader_input",
                    "mangled": "_inCAAAAaal7",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase3i const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase3i const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase3i const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase3i const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase3i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase3i const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$393$set_shader_input",
                    "mangled": "_inCAAAAheIw",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase4 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase4 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase4 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase4 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase4 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase4 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$394$set_shader_input",
                    "mangled": "_inCAAAAiELb",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase4 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase4 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase4 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase4 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase4 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase4 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$395$set_shader_input",
                    "mangled": "_inCAAAAJd0g",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase4i const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase4i const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase4i const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase4i const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase4i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase4i const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$396$set_shader_input",
                    "mangled": "_inCAAAAI_n7",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "LVecBase4i const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "LVecBase4i const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "LVecBase4i const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase4i const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, LVecBase4i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, LVecBase4i const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$397$set_shader_input",
                    "mangled": "_inCAAAAT9Lw",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "np",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "NodePath const &np",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, NodePath const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, NodePath const &np, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, NodePath const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$398$set_shader_input",
                    "mangled": "_inCAAAA_yEU",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "np"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "NodePath const &np"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, NodePath const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, NodePath const &np, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, NodePath const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$399$set_shader_input",
                    "mangled": "_inCAAAAULTE",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 6,
                    "argn": [
                        "id",
                        "n1",
                        "n2",
                        "n3",
                        "n4",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PN_stdfloat n1",
                        "PN_stdfloat n2",
                        "PN_stdfloat n3",
                        "PN_stdfloat n4",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, int param6)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psffffi",
                    "cni_args": "psffffi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d36293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PN_stdfloat n1, PN_stdfloat n2, PN_stdfloat n3, PN_stdfloat n4, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5, int param6)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$400$set_shader_input",
                    "mangled": "_inCAAAA0P__",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "id",
                        "n1",
                        "n2",
                        "n3",
                        "n4"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PN_stdfloat n1",
                        "PN_stdfloat n2",
                        "PN_stdfloat n3",
                        "PN_stdfloat n4"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psffff",
                    "cni_args": "psffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PN_stdfloat n1, PN_stdfloat n2, PN_stdfloat n3, PN_stdfloat n4, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$401$set_shader_input",
                    "mangled": "_inCAAAAeAwP",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "id",
                        "n1",
                        "n2",
                        "n3"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PN_stdfloat n1",
                        "PN_stdfloat n2",
                        "PN_stdfloat n3"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psfff",
                    "cni_args": "psfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PN_stdfloat n1, PN_stdfloat n2, PN_stdfloat n3, PN_stdfloat n4, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$402$set_shader_input",
                    "mangled": "_inCAAAANiw4",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "n1",
                        "n2"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PN_stdfloat n1",
                        "PN_stdfloat n2"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psff",
                    "cni_args": "psff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PN_stdfloat n1, PN_stdfloat n2, PN_stdfloat n3, PN_stdfloat n4, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$403$set_shader_input",
                    "mangled": "_inCAAAANVzy",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LMatrix3 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LMatrix3 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LMatrix3 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LMatrix3 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LMatrix3 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LMatrix3 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$404$set_shader_input",
                    "mangled": "_inCAAAAg8Ek",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LMatrix3 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LMatrix3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LMatrix3 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LMatrix3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LMatrix3 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LMatrix3 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$405$set_shader_input",
                    "mangled": "_inCAAAADLGj",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LMatrix4 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LMatrix4 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LMatrix4 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LMatrix4 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LMatrix4 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LMatrix4 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$406$set_shader_input",
                    "mangled": "_inCAAAAM80F",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LMatrix4 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LMatrix4 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LMatrix4 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LMatrix4 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LMatrix4 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LMatrix4 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$407$set_shader_input",
                    "mangled": "_inCAAAA3I2E",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase2 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase2 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase2 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase2 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase2 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase2 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$408$set_shader_input",
                    "mangled": "_inCAAAAG1ud",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase2 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase2 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase2 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase2 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase2 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase2 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$409$set_shader_input",
                    "mangled": "_inCAAAA3qH_",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase2i const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase2i const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase2i const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase2i const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase2i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase2i const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$410$set_shader_input",
                    "mangled": "_inCAAAAgmxb",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase2i const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase2i const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase2i const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase2i const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase2i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase2i const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$411$set_shader_input",
                    "mangled": "_inCAAAAx0En",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase3 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase3 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase3 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase3 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi_13_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase3 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase3 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$412$set_shader_input",
                    "mangled": "_inCAAAA8xvV",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase3 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp_13_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase3 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase3 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$413$set_shader_input",
                    "mangled": "_inCAAAAAwH2",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase3i const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase3i const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase3i const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase3i const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi_13_v_pspi_14_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase3i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase3i const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$414$set_shader_input",
                    "mangled": "_inCAAAAzoxT",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase3i const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase3i const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase3i const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase3i const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp_13_v_psp_14_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase3i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase3i const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$415$set_shader_input",
                    "mangled": "_inCAAAACuEf",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase4 const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase4 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase4 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase4 const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi_13_v_pspi_14_v_pspi_15_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase4 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase4 const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$416$set_shader_input",
                    "mangled": "_inCAAAAjrvN",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase4 const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase4 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase4 const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase4 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp_13_v_psp_14_v_psp_15_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase4 const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase4 const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$417$set_shader_input",
                    "mangled": "_inCAAAAR_Hu",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase4i const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase4i const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase4i const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase4i const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi_13_v_pspi_14_v_pspi_15_v_pspi_16_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase4i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase4i const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$418$set_shader_input",
                    "mangled": "_inCAAAACxxL",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_LVecBase4i const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_LVecBase4i const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_LVecBase4i const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase4i const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp_13_v_psp_14_v_psp_15_v_psp_16_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_LVecBase4i const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_LVecBase4i const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$419$set_shader_input",
                    "mangled": "_inCAAAATgEX",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_double const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_double const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_double const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_double const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi_13_v_pspi_14_v_pspi_15_v_pspi_16_v_pspi_17_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_double const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_double const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$420$set_shader_input",
                    "mangled": "_inCAAAAwB0q",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_double const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_double const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_double const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_double const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp_13_v_psp_14_v_psp_15_v_psp_16_v_psp_17_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_double const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_double const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$421$set_shader_input",
                    "mangled": "_inCAAAAplZf",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_float const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_float const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_float const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_float const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi_13_v_pspi_14_v_pspi_15_v_pspi_16_v_pspi_17_v_pspi_18_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_float const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_float const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$422$set_shader_input",
                    "mangled": "_inCAAAAOR8U",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_float const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_float const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_float const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_float const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp_13_v_psp_14_v_psp_15_v_psp_16_v_psp_17_v_psp_18_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_float const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_float const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$423$set_shader_input",
                    "mangled": "_inCAAAAvCna",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "v",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_int const &v",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_int const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_int const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_int const *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi_13_v_pspi_14_v_pspi_15_v_pspi_16_v_pspi_17_v_pspi_18_v_pspi_19_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_int const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_int const *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$424$set_shader_input",
                    "mangled": "_inCAAAAS_0B",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "v"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "PTA_int const &v"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "PTA_int const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "PTA_int const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_int const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp_13_v_psp_14_v_psp_15_v_psp_16_v_psp_17_v_psp_18_v_psp_19_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, PTA_int const &v, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, PTA_int const *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$425$set_shader_input",
                    "mangled": "_inCAAAAvhUh",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "buf",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "ShaderBuffer *buf",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "ShaderBuffer*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "ShaderBuffer *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, ShaderBuffer *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi_13_v_pspi_14_v_pspi_15_v_pspi_16_v_pspi_17_v_pspi_18_v_pspi_19_v_pspi_20_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, ShaderBuffer *buf, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, ShaderBuffer *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$426$set_shader_input",
                    "mangled": "_inCAAAAja9D",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "buf"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "ShaderBuffer *buf"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "ShaderBuffer*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "ShaderBuffer *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, ShaderBuffer *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp_13_v_psp_14_v_psp_15_v_psp_16_v_psp_17_v_psp_18_v_psp_19_v_psp_20_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, ShaderBuffer *buf, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, ShaderBuffer *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$427$set_shader_input",
                    "mangled": "_inCAAAAt0RP",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "id",
                        "tex",
                        "sampler",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "Texture *tex",
                        "SamplerState const &sampler",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "Texture*",
                        "SamplerState const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "Texture *",
                        "SamplerState const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, SamplerState const *param3, int param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psppi",
                    "cni_args": "psppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c202a706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, Texture *tex, SamplerState const &sampler, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, SamplerState const *param3, int param4)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$428$set_shader_input",
                    "mangled": "_inCAAAANs3k",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "tex",
                        "sampler"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "Texture *tex",
                        "SamplerState const &sampler"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "Texture*",
                        "SamplerState const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "Texture *",
                        "SamplerState const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, SamplerState const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspp",
                    "cni_args": "pspp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, Texture *tex, SamplerState const &sampler, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, SamplerState const *param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$429$set_shader_input",
                    "mangled": "_inCAAAAveSm",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 7,
                    "argn": [
                        "id",
                        "tex",
                        "read",
                        "write",
                        "z",
                        "n",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "Texture *tex",
                        "bool read",
                        "bool write",
                        "int z",
                        "int n",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "Texture*",
                        "bool",
                        "bool",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "Texture *",
                        "bool",
                        "bool",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, bool param3, bool param4, int param5, int param6, int param7)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspBBiii",
                    "cni_args": "pspBBiii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d362c20706172616d37293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, Texture *tex, bool read, bool write, int z, int n, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, bool param3, bool param4, int param5, int param6, int param7)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$430$set_shader_input",
                    "mangled": "_inCAAAAHt_e",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 6,
                    "argn": [
                        "id",
                        "tex",
                        "read",
                        "write",
                        "z",
                        "n"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "Texture *tex",
                        "bool read",
                        "bool write",
                        "int z",
                        "int n"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "Texture*",
                        "bool",
                        "bool",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "Texture *",
                        "bool",
                        "bool",
                        "int",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, bool param3, bool param4, int param5, int param6)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspBBii",
                    "cni_args": "pspBBii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d36293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, Texture *tex, bool read, bool write, int z, int n, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, bool param3, bool param4, int param5, int param6)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$431$set_shader_input",
                    "mangled": "_inCAAAAr7f_",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "id",
                        "tex",
                        "read",
                        "write",
                        "z"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "Texture *tex",
                        "bool read",
                        "bool write",
                        "int z"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "Texture*",
                        "bool",
                        "bool",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "Texture *",
                        "bool",
                        "bool",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, bool param3, bool param4, int param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspBBi",
                    "cni_args": "pspBBi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, Texture *tex, bool read, bool write, int z, int n, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, bool param3, bool param4, int param5)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$432$set_shader_input",
                    "mangled": "_inCAAAAhcRO",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "id",
                        "tex",
                        "read",
                        "write"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "Texture *tex",
                        "bool read",
                        "bool write"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "Texture*",
                        "bool",
                        "bool"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "Texture *",
                        "bool",
                        "bool"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, bool param3, bool param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspBB",
                    "cni_args": "pspBB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, Texture *tex, bool read, bool write, int z, int n, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, bool param3, bool param4)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$433$set_shader_input",
                    "mangled": "_inCAAAAhAJW",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "tex",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "Texture *tex",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "Texture*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "Texture *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pspi_1_v_pspi_2_v_pspi_3_v_pspi_4_v_pspi_5_v_pspi_6_v_pspi_7_v_pspi_8_v_pspi_9_v_pspi_10_v_pspi_11_v_pspi_12_v_pspi_13_v_pspi_14_v_pspi_15_v_pspi_16_v_pspi_17_v_pspi_18_v_pspi_19_v_pspi_20_v_pspi_21_v_pspi",
                    "cni_args": "pspi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$434$set_shader_input",
                    "mangled": "_inCAAAA_Ni0",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "id",
                        "tex"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "Texture *tex"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "Texture*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "Texture *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psp_1_v_psp_2_v_psp_3_v_psp_4_v_psp_5_v_psp_6_v_psp_7_v_psp_8_v_psp_9_v_psp_10_v_psp_11_v_psp_12_v_psp_13_v_psp_14_v_psp_15_v_psp_16_v_psp_17_v_psp_18_v_psp_19_v_psp_20_v_psp_21_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, Texture *param2)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$435$set_shader_input",
                    "mangled": "_inCAAAA_jM6",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 6,
                    "argn": [
                        "id",
                        "n1",
                        "n2",
                        "n3",
                        "n4",
                        "priority"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "int n1",
                        "int n2",
                        "int n3",
                        "int n4",
                        "int priority"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "int",
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "int",
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, int param2, int param3, int param4, int param5, int param6)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psiiiii",
                    "cni_args": "psiiiii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d352c20706172616d36293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, int n1, int n2, int n3, int n4, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, int param2, int param3, int param4, int param5, int param6)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$436$set_shader_input",
                    "mangled": "_inCAAAArRyK",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "id",
                        "n1",
                        "n2",
                        "n3",
                        "n4"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "int n1",
                        "int n2",
                        "int n3",
                        "int n4"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "int",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, int param2, int param3, int param4, int param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psiiii",
                    "cni_args": "psiiii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, int n1, int n2, int n3, int n4, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, int param2, int param3, int param4, int param5)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$437$set_shader_input",
                    "mangled": "_inCAAAA58hL",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "id",
                        "n1",
                        "n2",
                        "n3"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "int n1",
                        "int n2",
                        "int n3"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "int",
                        "int",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, int param2, int param3, int param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psiii",
                    "cni_args": "psiii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, int n1, int n2, int n3, int n4, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, int param2, int param3, int param4)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$438$set_shader_input",
                    "mangled": "_inCAAAAWd4r",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "id",
                        "n1",
                        "n2"
                    ],
                    "args": [
                        "CPT_InternalName id",
                        "int n1",
                        "int n2"
                    ],
                    "argt": [
                        "CPT_InternalName",
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *",
                        "int",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, int param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_psii",
                    "cni_args": "psii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_shader_input(CPT_InternalName id, int n1, int n2, int n3, int n4, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, CPT_InternalName *param1, int param2, int param3)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$439$set_shader_input",
                    "mangled": "_inCAAAAP_Ec",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "input"
                    ],
                    "args": [
                        "ShaderInput &&input"
                    ],
                    "argt": [
                        "ShaderInput&&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "ShaderInput *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, ShaderInput *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_shader_input(ShaderInput &&input)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, ShaderInput *param1)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$440$set_shader_input",
                    "mangled": "_inCAAAAoLkB",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "input"
                    ],
                    "args": [
                        "ShaderInput const &input"
                    ],
                    "argt": [
                        "ShaderInput const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "ShaderInput const *"
                    ],
                    "c_ref": "NodePath$_$set_shader_input(NodePath *param0, ShaderInput const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_shader_input_v_pp_1_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7368616465725f696e707574282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_shader_input(ShaderInput const &input)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$set_shader_input(NodePath *param0, ShaderInput const *param1)"
                    ],
                    "fn": "set_shader_input",
                    "indexed": "NodePath$441$set_shader_input",
                    "mangled": "_inCAAAA8uUt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "id"
                    ],
                    "args": [
                        "CPT_InternalName id"
                    ],
                    "argt": [
                        "CPT_InternalName"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CPT_InternalName *"
                    ],
                    "c_ref": "NodePath$_$clear_shader_input(NodePath *param0, CPT_InternalName *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_shader_input_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7368616465725f696e707574282a706172616d31293b",
                    "cpp_ref": "void NodePath::clear_shader_input(CPT_InternalName id)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_shader_input",
                    "extern": [
                        "void",
                        "NodePath$_$clear_shader_input(NodePath *param0, CPT_InternalName *param1)"
                    ],
                    "fn": "clear_shader_input",
                    "indexed": "NodePath$442$clear_shader_input",
                    "mangled": "_inCAAAA_xqL",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "instance_count"
                    ],
                    "args": [
                        "int instance_count"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_instance_count(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_instance_count_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f696e7374616e63655f636f756e7428706172616d31293b",
                    "cpp_ref": "void NodePath::set_instance_count(int instance_count)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_instance_count",
                    "extern": [
                        "void",
                        "NodePath$_$set_instance_count(NodePath *param0, int param1)"
                    ],
                    "fn": "set_instance_count",
                    "indexed": "NodePath$443$set_instance_count",
                    "mangled": "_inCAAAAs3Az",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_shader(NodePath const *param0)",
                    "c_type": "Shader const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shader_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f73686164657228293b",
                    "cpp_ref": "Shader const *NodePath::get_shader(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shader",
                    "extern": [
                        "Shader const *",
                        "NodePath$_$get_shader(NodePath const *param0)"
                    ],
                    "fn": "get_shader",
                    "indexed": "NodePath$444$get_shader",
                    "mangled": "_inCAAAAXRer",
                    "ot": "Shader const*",
                    "rt": "Shader"
                },
                {
                    "argc": 1,
                    "argn": [
                        "id"
                    ],
                    "args": [
                        "CPT_InternalName id"
                    ],
                    "argt": [
                        "CPT_InternalName"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "CPT_InternalName *"
                    ],
                    "c_ref": "NodePath$_$get_shader_input(NodePath const *param0, CPT_InternalName *param1)",
                    "c_type": "ShaderInput *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_shader_input_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720536861646572496e70757428282a706172616d30292e6765745f7368616465725f696e707574282a706172616d3129293b",
                    "cpp_ref": "ShaderInput NodePath::get_shader_input(CPT_InternalName id) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_shader_input",
                    "extern": [
                        "ShaderInput *",
                        "NodePath$_$get_shader_input(NodePath const *param0, CPT_InternalName *param1)"
                    ],
                    "fn": "get_shader_input",
                    "indexed": "NodePath$445$get_shader_input",
                    "mangled": "_inCAAAA1RQl",
                    "ot": "ShaderInput",
                    "rt": "ShaderInput"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_instance_count(NodePath const *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_instance_count_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f696e7374616e63655f636f756e7428293b",
                    "cpp_ref": "int NodePath::get_instance_count(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_instance_count",
                    "extern": [
                        "int",
                        "NodePath$_$get_instance_count(NodePath const *param0)"
                    ],
                    "fn": "get_instance_count",
                    "indexed": "NodePath$446$get_instance_count",
                    "mangled": "_inCAAAAFCMn",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "stage",
                        "transform"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "TransformState const *transform"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "TransformState const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "TransformState const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_transform(NodePath *param0, NodePath const *param1, TextureStage *param2, TransformState const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_transform_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7472616e73666f726d282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_tex_transform(NodePath const &other, TextureStage *stage, TransformState const *transform)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_transform(NodePath *param0, NodePath const *param1, TextureStage *param2, TransformState const *param3)"
                    ],
                    "fn": "set_tex_transform",
                    "indexed": "NodePath$447$set_tex_transform",
                    "mangled": "_inCAAAAM5dH",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "transform"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "TransformState const *transform"
                    ],
                    "argt": [
                        "TextureStage*",
                        "TransformState const*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "TransformState const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_transform(NodePath *param0, TextureStage *param1, TransformState const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_transform_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7472616e73666f726d28706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_tex_transform(TextureStage *stage, TransformState const *transform)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_transform",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_transform(NodePath *param0, TextureStage *param1, TransformState const *param2)"
                    ],
                    "fn": "set_tex_transform",
                    "indexed": "NodePath$448$set_tex_transform",
                    "mangled": "_inCAAAA7rVh",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_tex_transform(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_tex_transform_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7465785f7472616e73666f726d28293b",
                    "cpp_ref": "void NodePath::clear_tex_transform(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_tex_transform",
                    "extern": [
                        "void",
                        "NodePath$_$clear_tex_transform(NodePath *param0)"
                    ],
                    "fn": "clear_tex_transform",
                    "indexed": "NodePath$449$clear_tex_transform",
                    "mangled": "_inCAAAAPvbV",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$clear_tex_transform(NodePath *param0, TextureStage *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_tex_transform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7465785f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "void NodePath::clear_tex_transform(TextureStage *stage)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_tex_transform",
                    "extern": [
                        "void",
                        "NodePath$_$clear_tex_transform(NodePath *param0, TextureStage *param1)"
                    ],
                    "fn": "clear_tex_transform",
                    "indexed": "NodePath$450$clear_tex_transform",
                    "mangled": "_inCAAAA7hmM",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$has_tex_transform(NodePath const *param0, TextureStage *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_tex_transform_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7465785f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "bool NodePath::has_tex_transform(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_tex_transform",
                    "extern": [
                        "bool",
                        "NodePath$_$has_tex_transform(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "has_tex_transform",
                    "indexed": "NodePath$451$has_tex_transform",
                    "mangled": "_inCAAAAW20G",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "stage"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_transform(NodePath const *param0, NodePath const *param1, TextureStage *param2)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_transform_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f7465785f7472616e73666f726d282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "ConstPointerTo< TransformState > NodePath::get_tex_transform(NodePath const &other, TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_tex_transform(NodePath const *param0, NodePath const *param1, TextureStage *param2)"
                    ],
                    "fn": "get_tex_transform",
                    "indexed": "NodePath$452$get_tex_transform",
                    "mangled": "_inCAAAAkXI_",
                    "ot": "ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_transform(NodePath const *param0, TextureStage *param1)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_transform_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f7465785f7472616e73666f726d28706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< TransformState > NodePath::get_tex_transform(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "NodePath$_$get_tex_transform(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_transform",
                    "indexed": "NodePath$453$get_tex_transform",
                    "mangled": "_inCAAAAz2ne",
                    "ot": "ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "stage",
                        "uv"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "LVecBase2 const &uv"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "LVecBase2 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "LVecBase2 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_offset(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase2 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_offset_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f6f6666736574282a706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_tex_offset(NodePath const &other, TextureStage *stage, LVecBase2 const &uv)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_offset",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_offset(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase2 const *param3)"
                    ],
                    "fn": "set_tex_offset",
                    "indexed": "NodePath$454$set_tex_offset",
                    "mangled": "_inCAAAApJci",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "stage",
                        "u",
                        "v"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "PN_stdfloat u",
                        "PN_stdfloat v"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_offset(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_offset_v_pppff",
                    "cni_args": "pppff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f6f6666736574282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_tex_offset(NodePath const &other, TextureStage *stage, PN_stdfloat u, PN_stdfloat v)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_offset",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_offset(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_tex_offset",
                    "indexed": "NodePath$455$set_tex_offset",
                    "mangled": "_inCAAAAsHUq",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "uv"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "LVecBase2 const &uv"
                    ],
                    "argt": [
                        "TextureStage*",
                        "LVecBase2 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "LVecBase2 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_offset(NodePath *param0, TextureStage *param1, LVecBase2 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_offset_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f6f666673657428706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_tex_offset(TextureStage *stage, LVecBase2 const &uv)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_offset",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_offset(NodePath *param0, TextureStage *param1, LVecBase2 const *param2)"
                    ],
                    "fn": "set_tex_offset",
                    "indexed": "NodePath$456$set_tex_offset",
                    "mangled": "_inCAAAAgjDc",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "stage",
                        "u",
                        "v"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "PN_stdfloat u",
                        "PN_stdfloat v"
                    ],
                    "argt": [
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_offset(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_offset_v_ppff",
                    "cni_args": "ppff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f6f666673657428706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_tex_offset(TextureStage *stage, PN_stdfloat u, PN_stdfloat v)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_offset",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_offset(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_tex_offset",
                    "indexed": "NodePath$457$set_tex_offset",
                    "mangled": "_inCAAAA3n_9",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "stage",
                        "r"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_rotate(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_rotate_v_pppf",
                    "cni_args": "pppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f726f74617465282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_tex_rotate(NodePath const &other, TextureStage *stage, PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_rotate",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_rotate(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_tex_rotate",
                    "indexed": "NodePath$458$set_tex_rotate",
                    "mangled": "_inCAAAAe6E_",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "r"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "TextureStage*",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_rotate(NodePath *param0, TextureStage *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_rotate_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f726f7461746528706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_tex_rotate(TextureStage *stage, PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_rotate",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_rotate(NodePath *param0, TextureStage *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_tex_rotate",
                    "indexed": "NodePath$459$set_tex_rotate",
                    "mangled": "_inCAAAAfo1H",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "stage",
                        "scale"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "LVecBase2 const &scale"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "LVecBase2 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "LVecBase2 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase2 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c65282a706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(NodePath const &other, TextureStage *stage, LVecBase2 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase2 const *param3)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$460$set_tex_scale",
                    "mangled": "_inCAAAAe3Ue",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "stage",
                        "scale"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_pppp_1_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c65282a706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(NodePath const &other, TextureStage *stage, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase3 const *param3)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$461$set_tex_scale",
                    "mangled": "_inCAAAA6wZe",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "stage",
                        "scale"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "PN_stdfloat scale"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_pppf",
                    "cni_args": "pppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c65282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(NodePath const &other, TextureStage *stage, PN_stdfloat scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$462$set_tex_scale",
                    "mangled": "_inCAAAAHGAD",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "other",
                        "stage",
                        "su",
                        "sv"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "PN_stdfloat su",
                        "PN_stdfloat sv"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_pppff",
                    "cni_args": "pppff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c65282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(NodePath const &other, TextureStage *stage, PN_stdfloat su, PN_stdfloat sv)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$463$set_tex_scale",
                    "mangled": "_inCAAAAxRiC",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "other",
                        "stage",
                        "su",
                        "sv",
                        "sw"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "PN_stdfloat su",
                        "PN_stdfloat sv",
                        "PN_stdfloat sw"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_pppfff",
                    "cni_args": "pppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c65282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(NodePath const &other, TextureStage *stage, PN_stdfloat su, PN_stdfloat sv, PN_stdfloat sw)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$464$set_tex_scale",
                    "mangled": "_inCAAAAPifO",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "scale"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "LVecBase2 const &scale"
                    ],
                    "argt": [
                        "TextureStage*",
                        "LVecBase2 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "LVecBase2 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, LVecBase2 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c6528706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(TextureStage *stage, LVecBase2 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, LVecBase2 const *param2)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$465$set_tex_scale",
                    "mangled": "_inCAAAA6dKe",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "scale"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "LVecBase3 const &scale"
                    ],
                    "argt": [
                        "TextureStage*",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_ppp_1_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c6528706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(TextureStage *stage, LVecBase3 const &scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$466$set_tex_scale",
                    "mangled": "_inCAAAADsLe",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "scale"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "PN_stdfloat scale"
                    ],
                    "argt": [
                        "TextureStage*",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c6528706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(TextureStage *stage, PN_stdfloat scale)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$467$set_tex_scale",
                    "mangled": "_inCAAAAawVn",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "stage",
                        "su",
                        "sv"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "PN_stdfloat su",
                        "PN_stdfloat sv"
                    ],
                    "argt": [
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_ppff",
                    "cni_args": "ppff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c6528706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(TextureStage *stage, PN_stdfloat su, PN_stdfloat sv)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$468$set_tex_scale",
                    "mangled": "_inCAAAACwLn",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "stage",
                        "su",
                        "sv",
                        "sw"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "PN_stdfloat su",
                        "PN_stdfloat sv",
                        "PN_stdfloat sw"
                    ],
                    "argt": [
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_scale_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_tex_scale(TextureStage *stage, PN_stdfloat su, PN_stdfloat sv, PN_stdfloat sw)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_scale",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_scale(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_tex_scale",
                    "indexed": "NodePath$469$set_tex_scale",
                    "mangled": "_inCAAAAiKKq",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "stage"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_offset(NodePath const *param0, NodePath const *param1, TextureStage *param2)",
                    "c_type": "LVecBase2 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_offset_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653228282a706172616d30292e6765745f7465785f6f6666736574282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "inline LVecBase2 NodePath::get_tex_offset(NodePath const &other, TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_offset",
                    "extern": [
                        "LVecBase2 *",
                        "NodePath$_$get_tex_offset(NodePath const *param0, NodePath const *param1, TextureStage *param2)"
                    ],
                    "fn": "get_tex_offset",
                    "indexed": "NodePath$470$get_tex_offset",
                    "mangled": "_inCAAAAtMN_",
                    "ot": "inline LVecBase2",
                    "rt": "LVecBase2"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_offset(NodePath const *param0, TextureStage *param1)",
                    "c_type": "LVecBase2 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_offset_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653228282a706172616d30292e6765745f7465785f6f666673657428706172616d3129293b",
                    "cpp_ref": "inline LVecBase2 NodePath::get_tex_offset(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_offset",
                    "extern": [
                        "LVecBase2 *",
                        "NodePath$_$get_tex_offset(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_offset",
                    "indexed": "NodePath$471$get_tex_offset",
                    "mangled": "_inCAAAAOSVy",
                    "ot": "inline LVecBase2",
                    "rt": "LVecBase2"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "stage"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_rotate(NodePath const *param0, NodePath const *param1, TextureStage *param2)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_rotate_f_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7465785f726f74617465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_tex_rotate(NodePath const &other, TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_rotate",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_tex_rotate(NodePath const *param0, NodePath const *param1, TextureStage *param2)"
                    ],
                    "fn": "get_tex_rotate",
                    "indexed": "NodePath$472$get_tex_rotate",
                    "mangled": "_inCAAAAgsWE",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_rotate(NodePath const *param0, TextureStage *param1)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_rotate_f_pp",
                    "cni_args": "pp",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7465785f726f7461746528706172616d31293b",
                    "cpp_ref": "inline PN_stdfloat NodePath::get_tex_rotate(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_rotate",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_tex_rotate(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_rotate",
                    "indexed": "NodePath$473$get_tex_rotate",
                    "mangled": "_inCAAAAF4f4",
                    "ot": "inline PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "stage"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_scale(NodePath const *param0, NodePath const *param1, TextureStage *param2)",
                    "c_type": "LVecBase2 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_scale_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653228282a706172616d30292e6765745f7465785f7363616c65282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "inline LVecBase2 NodePath::get_tex_scale(NodePath const &other, TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_scale",
                    "extern": [
                        "LVecBase2 *",
                        "NodePath$_$get_tex_scale(NodePath const *param0, NodePath const *param1, TextureStage *param2)"
                    ],
                    "fn": "get_tex_scale",
                    "indexed": "NodePath$474$get_tex_scale",
                    "mangled": "_inCAAAAhlUo",
                    "ot": "inline LVecBase2",
                    "rt": "LVecBase2"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_scale(NodePath const *param0, TextureStage *param1)",
                    "c_type": "LVecBase2 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_scale_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653228282a706172616d30292e6765745f7465785f7363616c6528706172616d3129293b",
                    "cpp_ref": "inline LVecBase2 NodePath::get_tex_scale(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_scale",
                    "extern": [
                        "LVecBase2 *",
                        "NodePath$_$get_tex_scale(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_scale",
                    "indexed": "NodePath$475$get_tex_scale",
                    "mangled": "_inCAAAA6J_f",
                    "ot": "inline LVecBase2",
                    "rt": "LVecBase2"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "stage",
                        "uvw"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "LVecBase3 const &uvw"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_pos(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_pos_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f706f73282a706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_tex_pos(NodePath const &other, TextureStage *stage, LVecBase3 const &uvw)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_pos(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase3 const *param3)"
                    ],
                    "fn": "set_tex_pos",
                    "indexed": "NodePath$476$set_tex_pos",
                    "mangled": "_inCAAAATG_w",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "other",
                        "stage",
                        "u",
                        "v",
                        "w"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "PN_stdfloat u",
                        "PN_stdfloat v",
                        "PN_stdfloat w"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_pos(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_pos_v_pppfff",
                    "cni_args": "pppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f706f73282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePath::set_tex_pos(NodePath const &other, TextureStage *stage, PN_stdfloat u, PN_stdfloat v, PN_stdfloat w)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_pos(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5)"
                    ],
                    "fn": "set_tex_pos",
                    "indexed": "NodePath$477$set_tex_pos",
                    "mangled": "_inCAAAAru67",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "uvw"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "LVecBase3 const &uvw"
                    ],
                    "argt": [
                        "TextureStage*",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_pos(NodePath *param0, TextureStage *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_pos_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f706f7328706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_tex_pos(TextureStage *stage, LVecBase3 const &uvw)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_pos(NodePath *param0, TextureStage *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_tex_pos",
                    "indexed": "NodePath$478$set_tex_pos",
                    "mangled": "_inCAAAAHtN9",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "stage",
                        "u",
                        "v",
                        "w"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "PN_stdfloat u",
                        "PN_stdfloat v",
                        "PN_stdfloat w"
                    ],
                    "argt": [
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_pos(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_pos_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f706f7328706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_tex_pos(TextureStage *stage, PN_stdfloat u, PN_stdfloat v, PN_stdfloat w)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_pos",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_pos(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_tex_pos",
                    "indexed": "NodePath$479$set_tex_pos",
                    "mangled": "_inCAAAAfj4v",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "other",
                        "stage",
                        "hpr"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "LVecBase3 const &hpr"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_hpr(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_hpr_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f687072282a706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "inline void NodePath::set_tex_hpr(NodePath const &other, TextureStage *stage, LVecBase3 const &hpr)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_hpr(NodePath *param0, NodePath const *param1, TextureStage *param2, LVecBase3 const *param3)"
                    ],
                    "fn": "set_tex_hpr",
                    "indexed": "NodePath$480$set_tex_hpr",
                    "mangled": "_inCAAAAuhsY",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "other",
                        "stage",
                        "h",
                        "p",
                        "r"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage",
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_hpr(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_hpr_v_pppfff",
                    "cni_args": "pppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f687072282a706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePath::set_tex_hpr(NodePath const &other, TextureStage *stage, PN_stdfloat h, PN_stdfloat p, PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_hpr(NodePath *param0, NodePath const *param1, TextureStage *param2, PN_stdfloat param3, PN_stdfloat param4, PN_stdfloat param5)"
                    ],
                    "fn": "set_tex_hpr",
                    "indexed": "NodePath$481$set_tex_hpr",
                    "mangled": "_inCAAAAmLpj",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "hpr"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "LVecBase3 const &hpr"
                    ],
                    "argt": [
                        "TextureStage*",
                        "LVecBase3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "LVecBase3 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_hpr(NodePath *param0, TextureStage *param1, LVecBase3 const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_hpr_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f68707228706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_tex_hpr(TextureStage *stage, LVecBase3 const &hpr)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_hpr(NodePath *param0, TextureStage *param1, LVecBase3 const *param2)"
                    ],
                    "fn": "set_tex_hpr",
                    "indexed": "NodePath$482$set_tex_hpr",
                    "mangled": "_inCAAAAaI7k",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "stage",
                        "h",
                        "p",
                        "r"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "PN_stdfloat h",
                        "PN_stdfloat p",
                        "PN_stdfloat r"
                    ],
                    "argt": [
                        "TextureStage*",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_tex_hpr(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_hpr_v_ppfff",
                    "cni_args": "ppfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f68707228706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePath::set_tex_hpr(TextureStage *stage, PN_stdfloat h, PN_stdfloat p, PN_stdfloat r)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_hpr",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_hpr(NodePath *param0, TextureStage *param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_tex_hpr",
                    "indexed": "NodePath$483$set_tex_hpr",
                    "mangled": "_inCAAAABykX",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "stage"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_pos(NodePath const *param0, NodePath const *param1, TextureStage *param2)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_pos_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f7465785f706f73282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "inline LVecBase3 NodePath::get_tex_pos(NodePath const &other, TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_pos",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_tex_pos(NodePath const *param0, NodePath const *param1, TextureStage *param2)"
                    ],
                    "fn": "get_tex_pos",
                    "indexed": "NodePath$484$get_tex_pos",
                    "mangled": "_inCAAAAJ7Vi",
                    "ot": "inline LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_pos(NodePath const *param0, TextureStage *param1)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_pos_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f7465785f706f7328706172616d3129293b",
                    "cpp_ref": "inline LVecBase3 NodePath::get_tex_pos(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_pos",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_tex_pos(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_pos",
                    "indexed": "NodePath$485$get_tex_pos",
                    "mangled": "_inCAAAApg2Y",
                    "ot": "inline LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "stage"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_hpr(NodePath const *param0, NodePath const *param1, TextureStage *param2)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_hpr_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f7465785f687072282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "inline LVecBase3 NodePath::get_tex_hpr(NodePath const &other, TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_hpr",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_tex_hpr(NodePath const *param0, NodePath const *param1, TextureStage *param2)"
                    ],
                    "fn": "get_tex_hpr",
                    "indexed": "NodePath$486$get_tex_hpr",
                    "mangled": "_inCAAAAH0DK",
                    "ot": "inline LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_hpr(NodePath const *param0, TextureStage *param1)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_hpr_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f7465785f68707228706172616d3129293b",
                    "cpp_ref": "inline LVecBase3 NodePath::get_tex_hpr(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_hpr",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_tex_hpr(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_hpr",
                    "indexed": "NodePath$487$get_tex_hpr",
                    "mangled": "_inCAAAA_wiA",
                    "ot": "inline LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "stage"
                    ],
                    "args": [
                        "NodePath const &other",
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "NodePath const&",
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_scale_3d(NodePath const *param0, NodePath const *param1, TextureStage *param2)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_scale_3d_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f7465785f7363616c655f3364282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "inline LVecBase3 NodePath::get_tex_scale_3d(NodePath const &other, TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_scale_3d",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_tex_scale_3d(NodePath const *param0, NodePath const *param1, TextureStage *param2)"
                    ],
                    "fn": "get_tex_scale_3d",
                    "indexed": "NodePath$488$get_tex_scale_3d",
                    "mangled": "_inCAAAAbZgd",
                    "ot": "inline LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_scale_3d(NodePath const *param0, TextureStage *param1)",
                    "c_type": "LVecBase3 *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_scale_3d_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204c566563426173653328282a706172616d30292e6765745f7465785f7363616c655f336428706172616d3129293b",
                    "cpp_ref": "inline LVecBase3 NodePath::get_tex_scale_3d(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_scale_3d",
                    "extern": [
                        "LVecBase3 *",
                        "NodePath$_$get_tex_scale_3d(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_scale_3d",
                    "indexed": "NodePath$489$get_tex_scale_3d",
                    "mangled": "_inCAAAAKAhK",
                    "ot": "inline LVecBase3",
                    "rt": "LVecBase3"
                },
                {
                    "argc": 4,
                    "argn": [
                        "stage",
                        "mode",
                        "constant_value",
                        "priority"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "RenderAttrib::TexGenMode mode",
                        "LTexCoord3 const &constant_value",
                        "int priority"
                    ],
                    "argt": [
                        "TextureStage*",
                        "RenderAttrib::TexGenMode",
                        "LTexCoord3 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "RenderAttrib::TexGenMode",
                        "LTexCoord3 const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_tex_gen(NodePath *param0, TextureStage *param1, RenderAttrib::TexGenMode param2, LTexCoord3 const *param3, int param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_gen_v_ppppi",
                    "cni_args": "ppppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f67656e28706172616d312c20706172616d322c202a706172616d332c20706172616d34293b",
                    "cpp_ref": "void NodePath::set_tex_gen(TextureStage *stage, RenderAttrib::TexGenMode mode, LTexCoord3 const &constant_value, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_gen",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_gen(NodePath *param0, TextureStage *param1, RenderAttrib::TexGenMode param2, LTexCoord3 const *param3, int param4)"
                    ],
                    "fn": "set_tex_gen",
                    "indexed": "NodePath$490$set_tex_gen",
                    "mangled": "_inCAAAAdzav",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "stage",
                        "mode",
                        "constant_value"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "RenderAttrib::TexGenMode mode",
                        "LTexCoord3 const &constant_value"
                    ],
                    "argt": [
                        "TextureStage*",
                        "RenderAttrib::TexGenMode",
                        "LTexCoord3 const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "RenderAttrib::TexGenMode",
                        "LTexCoord3 const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_gen(NodePath *param0, TextureStage *param1, RenderAttrib::TexGenMode param2, LTexCoord3 const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_gen_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f67656e28706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_tex_gen(TextureStage *stage, RenderAttrib::TexGenMode mode, LTexCoord3 const &constant_value, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_gen",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_gen(NodePath *param0, TextureStage *param1, RenderAttrib::TexGenMode param2, LTexCoord3 const *param3)"
                    ],
                    "fn": "set_tex_gen",
                    "indexed": "NodePath$491$set_tex_gen",
                    "mangled": "_inCAAAAb0sJ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "stage",
                        "mode",
                        "priority"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "RenderAttrib::TexGenMode mode",
                        "int priority"
                    ],
                    "argt": [
                        "TextureStage*",
                        "RenderAttrib::TexGenMode",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "RenderAttrib::TexGenMode",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_tex_gen(NodePath *param0, TextureStage *param1, RenderAttrib::TexGenMode param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_gen_v_pppi",
                    "cni_args": "pppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f67656e28706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_tex_gen(TextureStage *stage, RenderAttrib::TexGenMode mode, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_gen",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_gen(NodePath *param0, TextureStage *param1, RenderAttrib::TexGenMode param2, int param3)"
                    ],
                    "fn": "set_tex_gen",
                    "indexed": "NodePath$492$set_tex_gen",
                    "mangled": "_inCAAAAEZu2",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "mode"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "RenderAttrib::TexGenMode mode"
                    ],
                    "argt": [
                        "TextureStage*",
                        "RenderAttrib::TexGenMode"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "RenderAttrib::TexGenMode"
                    ],
                    "c_ref": "NodePath$_$set_tex_gen(NodePath *param0, TextureStage *param1, RenderAttrib::TexGenMode param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_gen_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f67656e28706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_tex_gen(TextureStage *stage, RenderAttrib::TexGenMode mode, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_gen",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_gen(NodePath *param0, TextureStage *param1, RenderAttrib::TexGenMode param2)"
                    ],
                    "fn": "set_tex_gen",
                    "indexed": "NodePath$493$set_tex_gen",
                    "mangled": "_inCAAAAz8w0",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_tex_gen(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_tex_gen_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7465785f67656e28293b",
                    "cpp_ref": "void NodePath::clear_tex_gen(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_tex_gen",
                    "extern": [
                        "void",
                        "NodePath$_$clear_tex_gen(NodePath *param0)"
                    ],
                    "fn": "clear_tex_gen",
                    "indexed": "NodePath$494$clear_tex_gen",
                    "mangled": "_inCAAAAiojB",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$clear_tex_gen(NodePath *param0, TextureStage *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_tex_gen_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7465785f67656e28706172616d31293b",
                    "cpp_ref": "void NodePath::clear_tex_gen(TextureStage *stage)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_tex_gen",
                    "extern": [
                        "void",
                        "NodePath$_$clear_tex_gen(NodePath *param0, TextureStage *param1)"
                    ],
                    "fn": "clear_tex_gen",
                    "indexed": "NodePath$495$clear_tex_gen",
                    "mangled": "_inCAAAAY_YK",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$has_tex_gen(NodePath const *param0, TextureStage *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_tex_gen_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7465785f67656e28706172616d31293b",
                    "cpp_ref": "bool NodePath::has_tex_gen(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_tex_gen",
                    "extern": [
                        "bool",
                        "NodePath$_$has_tex_gen(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "has_tex_gen",
                    "indexed": "NodePath$496$has_tex_gen",
                    "mangled": "_inCAAAAePbA",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_gen(NodePath const *param0, TextureStage *param1)",
                    "c_type": "RenderAttrib::TexGenMode",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_gen_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7465785f67656e28706172616d31293b",
                    "cpp_ref": "RenderAttrib::TexGenMode NodePath::get_tex_gen(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_gen",
                    "extern": [
                        "RenderAttrib::TexGenMode",
                        "NodePath$_$get_tex_gen(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_gen",
                    "indexed": "NodePath$497$get_tex_gen",
                    "mangled": "_inCAAAA7MOY",
                    "ot": "RenderAttrib::TexGenMode",
                    "rt": "RenderAttrib::TexGenMode"
                },
                {
                    "argc": 4,
                    "argn": [
                        "stage",
                        "from",
                        "to",
                        "lens_index"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "NodePath const &from",
                        "NodePath const &to",
                        "int lens_index"
                    ],
                    "argt": [
                        "TextureStage*",
                        "NodePath const&",
                        "NodePath const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "NodePath const *",
                        "NodePath const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_tex_projector(NodePath *param0, TextureStage *param1, NodePath const *param2, NodePath const *param3, int param4)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_projector_v_ppppi",
                    "cni_args": "ppppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f70726f6a6563746f7228706172616d312c202a706172616d322c202a706172616d332c20706172616d34293b",
                    "cpp_ref": "void NodePath::set_tex_projector(TextureStage *stage, NodePath const &from, NodePath const &to, int lens_index)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_projector",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_projector(NodePath *param0, TextureStage *param1, NodePath const *param2, NodePath const *param3, int param4)"
                    ],
                    "fn": "set_tex_projector",
                    "indexed": "NodePath$498$set_tex_projector",
                    "mangled": "_inCAAAAIC4h",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "stage",
                        "from",
                        "to"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "NodePath const &from",
                        "NodePath const &to"
                    ],
                    "argt": [
                        "TextureStage*",
                        "NodePath const&",
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$set_tex_projector(NodePath *param0, TextureStage *param1, NodePath const *param2, NodePath const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tex_projector_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465785f70726f6a6563746f7228706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::set_tex_projector(TextureStage *stage, NodePath const &from, NodePath const &to, int lens_index)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tex_projector",
                    "extern": [
                        "void",
                        "NodePath$_$set_tex_projector(NodePath *param0, TextureStage *param1, NodePath const *param2, NodePath const *param3)"
                    ],
                    "fn": "set_tex_projector",
                    "indexed": "NodePath$499$set_tex_projector",
                    "mangled": "_inCAAAAvD7f",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_tex_projector(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_tex_projector_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7465785f70726f6a6563746f7228293b",
                    "cpp_ref": "void NodePath::clear_tex_projector(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_tex_projector",
                    "extern": [
                        "void",
                        "NodePath$_$clear_tex_projector(NodePath *param0)"
                    ],
                    "fn": "clear_tex_projector",
                    "indexed": "NodePath$500$clear_tex_projector",
                    "mangled": "_inCAAAAfHQL",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$clear_tex_projector(NodePath *param0, TextureStage *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_tex_projector_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7465785f70726f6a6563746f7228706172616d31293b",
                    "cpp_ref": "void NodePath::clear_tex_projector(TextureStage *stage)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_tex_projector",
                    "extern": [
                        "void",
                        "NodePath$_$clear_tex_projector(NodePath *param0, TextureStage *param1)"
                    ],
                    "fn": "clear_tex_projector",
                    "indexed": "NodePath$501$clear_tex_projector",
                    "mangled": "_inCAAAAYLcC",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$has_tex_projector(NodePath const *param0, TextureStage *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_tex_projector_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7465785f70726f6a6563746f7228706172616d31293b",
                    "cpp_ref": "bool NodePath::has_tex_projector(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_tex_projector",
                    "extern": [
                        "bool",
                        "NodePath$_$has_tex_projector(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "has_tex_projector",
                    "indexed": "NodePath$502$has_tex_projector",
                    "mangled": "_inCAAAAmg0n",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_projector_from(NodePath const *param0, TextureStage *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_projector_from_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f7465785f70726f6a6563746f725f66726f6d28706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::get_tex_projector_from(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_projector_from",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_tex_projector_from(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_projector_from",
                    "indexed": "NodePath$503$get_tex_projector_from",
                    "mangled": "_inCAAAAqz7d",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$get_tex_projector_to(NodePath const *param0, TextureStage *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tex_projector_to_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f7465785f70726f6a6563746f725f746f28706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::get_tex_projector_to(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tex_projector_to",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_tex_projector_to(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "get_tex_projector_to",
                    "indexed": "NodePath$504$get_tex_projector_to",
                    "mangled": "_inCAAAAQ1wy",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 3,
                    "argn": [
                        "stage",
                        "tex",
                        "projector"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "Texture *tex",
                        "NodePath const &projector"
                    ],
                    "argt": [
                        "TextureStage*",
                        "Texture*",
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *",
                        "Texture *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$project_texture(NodePath *param0, TextureStage *param1, Texture *param2, NodePath const *param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_project_texture_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e70726f6a6563745f7465787475726528706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "void NodePath::project_texture(TextureStage *stage, Texture *tex, NodePath const &projector)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$project_texture",
                    "extern": [
                        "void",
                        "NodePath$_$project_texture(NodePath *param0, TextureStage *param1, Texture *param2, NodePath const *param3)"
                    ],
                    "fn": "project_texture",
                    "indexed": "NodePath$505$project_texture",
                    "mangled": "_inCAAAAyMJ7",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$clear_project_texture(NodePath *param0, TextureStage *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_project_texture_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f70726f6a6563745f7465787475726528706172616d31293b",
                    "cpp_ref": "inline void NodePath::clear_project_texture(TextureStage *stage)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_project_texture",
                    "extern": [
                        "void",
                        "NodePath$_$clear_project_texture(NodePath *param0, TextureStage *param1)"
                    ],
                    "fn": "clear_project_texture",
                    "indexed": "NodePath$506$clear_project_texture",
                    "mangled": "_inCAAAAfb_F",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "texcoord_name"
                    ],
                    "args": [
                        "std::string const &texcoord_name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$has_texcoord(NodePath const *param0, char const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_texcoord_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f746578636f6f7264287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "inline bool NodePath::has_texcoord(std::string const &texcoord_name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_texcoord",
                    "extern": [
                        "bool",
                        "NodePath$_$has_texcoord(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "has_texcoord",
                    "indexed": "NodePath$507$has_texcoord",
                    "mangled": "_inCAAAAdBqp",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "InternalName const *name"
                    ],
                    "argt": [
                        "InternalName const*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "InternalName const *"
                    ],
                    "c_ref": "NodePath$_$has_vertex_column(NodePath const *param0, InternalName const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_vertex_column_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7665727465785f636f6c756d6e28706172616d31293b",
                    "cpp_ref": "bool NodePath::has_vertex_column(InternalName const *name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_vertex_column",
                    "extern": [
                        "bool",
                        "NodePath$_$has_vertex_column(NodePath const *param0, InternalName const *param1)"
                    ],
                    "fn": "has_vertex_column",
                    "indexed": "NodePath$508$has_vertex_column",
                    "mangled": "_inCAAAAO0Oo",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$find_all_vertex_columns(NodePath const *param0)",
                    "c_type": "InternalNameCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_vertex_columns_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720496e7465726e616c4e616d65436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f7665727465785f636f6c756d6e732829293b",
                    "cpp_ref": "InternalNameCollection NodePath::find_all_vertex_columns(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_vertex_columns",
                    "extern": [
                        "InternalNameCollection *",
                        "NodePath$_$find_all_vertex_columns(NodePath const *param0)"
                    ],
                    "fn": "find_all_vertex_columns",
                    "indexed": "NodePath$509$find_all_vertex_columns",
                    "mangled": "_inCAAAA5Dji",
                    "ot": "InternalNameCollection",
                    "rt": "InternalNameCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_all_vertex_columns(NodePath const *param0, char const *param1)",
                    "c_type": "InternalNameCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_vertex_columns_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720496e7465726e616c4e616d65436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f7665727465785f636f6c756d6e73287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "InternalNameCollection NodePath::find_all_vertex_columns(std::string const &name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_vertex_columns",
                    "extern": [
                        "InternalNameCollection *",
                        "NodePath$_$find_all_vertex_columns(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_all_vertex_columns",
                    "indexed": "NodePath$510$find_all_vertex_columns",
                    "mangled": "_inCAAAABbwS",
                    "ot": "InternalNameCollection",
                    "rt": "InternalNameCollection"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$find_all_texcoords(NodePath const *param0)",
                    "c_type": "InternalNameCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_texcoords_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720496e7465726e616c4e616d65436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f746578636f6f7264732829293b",
                    "cpp_ref": "InternalNameCollection NodePath::find_all_texcoords(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_texcoords",
                    "extern": [
                        "InternalNameCollection *",
                        "NodePath$_$find_all_texcoords(NodePath const *param0)"
                    ],
                    "fn": "find_all_texcoords",
                    "indexed": "NodePath$511$find_all_texcoords",
                    "mangled": "_inCAAAAUJtH",
                    "ot": "InternalNameCollection",
                    "rt": "InternalNameCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_all_texcoords(NodePath const *param0, char const *param1)",
                    "c_type": "InternalNameCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_texcoords_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720496e7465726e616c4e616d65436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f746578636f6f726473287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "InternalNameCollection NodePath::find_all_texcoords(std::string const &name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_texcoords",
                    "extern": [
                        "InternalNameCollection *",
                        "NodePath$_$find_all_texcoords(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_all_texcoords",
                    "indexed": "NodePath$512$find_all_texcoords",
                    "mangled": "_inCAAAA5Izf",
                    "ot": "InternalNameCollection",
                    "rt": "InternalNameCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$find_texture(NodePath const *param0, TextureStage *param1)",
                    "c_type": "Texture *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_texture_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f7465787475726528706172616d31293b",
                    "cpp_ref": "Texture *NodePath::find_texture(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_texture",
                    "extern": [
                        "Texture *",
                        "NodePath$_$find_texture(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "find_texture",
                    "indexed": "NodePath$513$find_texture",
                    "mangled": "_inCAAAAlksv",
                    "ot": "Texture*",
                    "rt": "Texture"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_texture(NodePath const *param0, char const *param1)",
                    "c_type": "Texture *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_texture_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f74657874757265287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "Texture *NodePath::find_texture(std::string const &name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_texture",
                    "extern": [
                        "Texture *",
                        "NodePath$_$find_texture(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_texture",
                    "indexed": "NodePath$514$find_texture",
                    "mangled": "_inCAAAAuh06",
                    "ot": "Texture*",
                    "rt": "Texture"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$find_all_textures(NodePath const *param0)",
                    "c_type": "TextureCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_textures_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772054657874757265436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f74657874757265732829293b",
                    "cpp_ref": "TextureCollection NodePath::find_all_textures(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_textures",
                    "extern": [
                        "TextureCollection *",
                        "NodePath$_$find_all_textures(NodePath const *param0)"
                    ],
                    "fn": "find_all_textures",
                    "indexed": "NodePath$515$find_all_textures",
                    "mangled": "_inCAAAA_z1D",
                    "ot": "TextureCollection",
                    "rt": "TextureCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$find_all_textures(NodePath const *param0, TextureStage *param1)",
                    "c_type": "TextureCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_textures_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772054657874757265436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f746578747572657328706172616d3129293b",
                    "cpp_ref": "TextureCollection NodePath::find_all_textures(TextureStage *stage) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_textures",
                    "extern": [
                        "TextureCollection *",
                        "NodePath$_$find_all_textures(NodePath const *param0, TextureStage *param1)"
                    ],
                    "fn": "find_all_textures",
                    "indexed": "NodePath$516$find_all_textures",
                    "mangled": "_inCAAAAZ8Sw",
                    "ot": "TextureCollection",
                    "rt": "TextureCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_all_textures(NodePath const *param0, char const *param1)",
                    "c_type": "TextureCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_textures_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772054657874757265436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f7465787475726573287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "TextureCollection NodePath::find_all_textures(std::string const &name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_textures",
                    "extern": [
                        "TextureCollection *",
                        "NodePath$_$find_all_textures(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_all_textures",
                    "indexed": "NodePath$517$find_all_textures",
                    "mangled": "_inCAAAAnyiG",
                    "ot": "TextureCollection",
                    "rt": "TextureCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_texture_stage(NodePath const *param0, char const *param1)",
                    "c_type": "TextureStage *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_texture_stage_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f746578747572655f7374616765287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "TextureStage *NodePath::find_texture_stage(std::string const &name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_texture_stage",
                    "extern": [
                        "TextureStage *",
                        "NodePath$_$find_texture_stage(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_texture_stage",
                    "indexed": "NodePath$518$find_texture_stage",
                    "mangled": "_inCAAAACE6q",
                    "ot": "TextureStage*",
                    "rt": "TextureStage"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$find_all_texture_stages(NodePath const *param0)",
                    "c_type": "TextureStageCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_texture_stages_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720546578747572655374616765436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f746578747572655f7374616765732829293b",
                    "cpp_ref": "TextureStageCollection NodePath::find_all_texture_stages(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_texture_stages",
                    "extern": [
                        "TextureStageCollection *",
                        "NodePath$_$find_all_texture_stages(NodePath const *param0)"
                    ],
                    "fn": "find_all_texture_stages",
                    "indexed": "NodePath$519$find_all_texture_stages",
                    "mangled": "_inCAAAAcefu",
                    "ot": "TextureStageCollection",
                    "rt": "TextureStageCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_all_texture_stages(NodePath const *param0, char const *param1)",
                    "c_type": "TextureStageCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_texture_stages_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720546578747572655374616765436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f746578747572655f737461676573287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "TextureStageCollection NodePath::find_all_texture_stages(std::string const &name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_texture_stages",
                    "extern": [
                        "TextureStageCollection *",
                        "NodePath$_$find_all_texture_stages(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_all_texture_stages",
                    "indexed": "NodePath$520$find_all_texture_stages",
                    "mangled": "_inCAAAAmute",
                    "ot": "TextureStageCollection",
                    "rt": "TextureStageCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePath$_$unify_texture_stages(NodePath *param0, TextureStage *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_unify_texture_stages_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e6966795f746578747572655f73746167657328706172616d31293b",
                    "cpp_ref": "void NodePath::unify_texture_stages(TextureStage *stage)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$unify_texture_stages",
                    "extern": [
                        "void",
                        "NodePath$_$unify_texture_stages(NodePath *param0, TextureStage *param1)"
                    ],
                    "fn": "unify_texture_stages",
                    "indexed": "NodePath$521$unify_texture_stages",
                    "mangled": "_inCAAAAPvtN",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_material(NodePath const *param0, char const *param1)",
                    "c_type": "Material *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_material_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f6d6174657269616c287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "Material *NodePath::find_material(std::string const &name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_material",
                    "extern": [
                        "Material *",
                        "NodePath$_$find_material(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_material",
                    "indexed": "NodePath$522$find_material",
                    "mangled": "_inCAAAAGFUc",
                    "ot": "Material*",
                    "rt": "Material"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$find_all_materials(NodePath const *param0)",
                    "c_type": "MaterialCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_materials_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204d6174657269616c436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f6d6174657269616c732829293b",
                    "cpp_ref": "MaterialCollection NodePath::find_all_materials(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_materials",
                    "extern": [
                        "MaterialCollection *",
                        "NodePath$_$find_all_materials(NodePath const *param0)"
                    ],
                    "fn": "find_all_materials",
                    "indexed": "NodePath$523$find_all_materials",
                    "mangled": "_inCAAAAnq8r",
                    "ot": "MaterialCollection",
                    "rt": "MaterialCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_all_materials(NodePath const *param0, char const *param1)",
                    "c_type": "MaterialCollection *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_all_materials_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204d6174657269616c436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f6d6174657269616c73287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "MaterialCollection NodePath::find_all_materials(std::string const &name) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_all_materials",
                    "extern": [
                        "MaterialCollection *",
                        "NodePath$_$find_all_materials(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_all_materials",
                    "indexed": "NodePath$524$find_all_materials",
                    "mangled": "_inCAAAAznDE",
                    "ot": "MaterialCollection",
                    "rt": "MaterialCollection"
                },
                {
                    "argc": 2,
                    "argn": [
                        "tex",
                        "priority"
                    ],
                    "args": [
                        "Material *tex",
                        "int priority"
                    ],
                    "argt": [
                        "Material*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Material *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_material(NodePath *param0, Material *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_material_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d6174657269616c28706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_material(Material *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_material",
                    "extern": [
                        "void",
                        "NodePath$_$set_material(NodePath *param0, Material *param1, int param2)"
                    ],
                    "fn": "set_material",
                    "indexed": "NodePath$525$set_material",
                    "mangled": "_inCAAAAfZam",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "tex"
                    ],
                    "args": [
                        "Material *tex"
                    ],
                    "argt": [
                        "Material*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Material *"
                    ],
                    "c_ref": "NodePath$_$set_material(NodePath *param0, Material *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_material_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d6174657269616c28706172616d31293b",
                    "cpp_ref": "void NodePath::set_material(Material *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_material",
                    "extern": [
                        "void",
                        "NodePath$_$set_material(NodePath *param0, Material *param1)"
                    ],
                    "fn": "set_material",
                    "indexed": "NodePath$526$set_material",
                    "mangled": "_inCAAAA2Xcl",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_material_off(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_material_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d6174657269616c5f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_material_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_material_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_material_off(NodePath *param0, int param1)"
                    ],
                    "fn": "set_material_off",
                    "indexed": "NodePath$527$set_material_off",
                    "mangled": "_inCAAAAgcpR",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_material_off(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_material_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d6174657269616c5f6f666628293b",
                    "cpp_ref": "void NodePath::set_material_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_material_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_material_off(NodePath *param0)"
                    ],
                    "fn": "set_material_off",
                    "indexed": "NodePath$528$set_material_off",
                    "mangled": "_inCAAAA_bEb",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_material(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_material_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6d6174657269616c28293b",
                    "cpp_ref": "void NodePath::clear_material(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_material",
                    "extern": [
                        "void",
                        "NodePath$_$clear_material(NodePath *param0)"
                    ],
                    "fn": "clear_material",
                    "indexed": "NodePath$529$clear_material",
                    "mangled": "_inCAAAABVUw",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_material(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_material_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f6d6174657269616c28293b",
                    "cpp_ref": "bool NodePath::has_material(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_material",
                    "extern": [
                        "bool",
                        "NodePath$_$has_material(NodePath const *param0)"
                    ],
                    "fn": "has_material",
                    "indexed": "NodePath$530$has_material",
                    "mangled": "_inCAAAAV_e6",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_material(NodePath const *param0)",
                    "c_type": "PointerTo< Material > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_material_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c204d6174657269616c203e28282a706172616d30292e6765745f6d6174657269616c2829293b",
                    "cpp_ref": "PointerTo< Material > NodePath::get_material(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_material",
                    "extern": [
                        "PointerTo< Material > *",
                        "NodePath$_$get_material(NodePath const *param0)"
                    ],
                    "fn": "get_material",
                    "indexed": "NodePath$531$get_material",
                    "mangled": "_inCAAAAr_RS",
                    "ot": "PointerTo< Material >",
                    "rt": "Material"
                },
                {
                    "argc": 2,
                    "argn": [
                        "mat",
                        "new_mat"
                    ],
                    "args": [
                        "Material *mat",
                        "Material *new_mat"
                    ],
                    "argt": [
                        "Material*",
                        "Material*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Material *",
                        "Material *"
                    ],
                    "c_ref": "NodePath$_$replace_material(NodePath *param0, Material *param1, Material *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_replace_material_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7265706c6163655f6d6174657269616c28706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::replace_material(Material *mat, Material *new_mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$replace_material",
                    "extern": [
                        "void",
                        "NodePath$_$replace_material(NodePath *param0, Material *param1, Material *param2)"
                    ],
                    "fn": "replace_material",
                    "indexed": "NodePath$532$replace_material",
                    "mangled": "_inCAAAAW7m7",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "fog",
                        "priority"
                    ],
                    "args": [
                        "Fog *fog",
                        "int priority"
                    ],
                    "argt": [
                        "Fog*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Fog *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_fog(NodePath *param0, Fog *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fog_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666f6728706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_fog(Fog *fog, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fog",
                    "extern": [
                        "void",
                        "NodePath$_$set_fog(NodePath *param0, Fog *param1, int param2)"
                    ],
                    "fn": "set_fog",
                    "indexed": "NodePath$533$set_fog",
                    "mangled": "_inCAAAAmIDI",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "fog"
                    ],
                    "args": [
                        "Fog *fog"
                    ],
                    "argt": [
                        "Fog*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Fog *"
                    ],
                    "c_ref": "NodePath$_$set_fog(NodePath *param0, Fog *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fog_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666f6728706172616d31293b",
                    "cpp_ref": "void NodePath::set_fog(Fog *fog, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fog",
                    "extern": [
                        "void",
                        "NodePath$_$set_fog(NodePath *param0, Fog *param1)"
                    ],
                    "fn": "set_fog",
                    "indexed": "NodePath$534$set_fog",
                    "mangled": "_inCAAAAvA0X",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_fog_off(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fog_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666f675f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_fog_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fog_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_fog_off(NodePath *param0, int param1)"
                    ],
                    "fn": "set_fog_off",
                    "indexed": "NodePath$535$set_fog_off",
                    "mangled": "_inCAAAA9qa5",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_fog_off(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_fog_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f666f675f6f666628293b",
                    "cpp_ref": "void NodePath::set_fog_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_fog_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_fog_off(NodePath *param0)"
                    ],
                    "fn": "set_fog_off",
                    "indexed": "NodePath$536$set_fog_off",
                    "mangled": "_inCAAAAfgI_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_fog(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_fog_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f666f6728293b",
                    "cpp_ref": "void NodePath::clear_fog(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_fog",
                    "extern": [
                        "void",
                        "NodePath$_$clear_fog(NodePath *param0)"
                    ],
                    "fn": "clear_fog",
                    "indexed": "NodePath$537$clear_fog",
                    "mangled": "_inCAAAAPL5h",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_fog(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_fog_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f666f6728293b",
                    "cpp_ref": "bool NodePath::has_fog(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_fog",
                    "extern": [
                        "bool",
                        "NodePath$_$has_fog(NodePath const *param0)"
                    ],
                    "fn": "has_fog",
                    "indexed": "NodePath$538$has_fog",
                    "mangled": "_inCAAAAJ3dh",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_fog_off(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_fog_off_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f666f675f6f666628293b",
                    "cpp_ref": "bool NodePath::has_fog_off(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_fog_off",
                    "extern": [
                        "bool",
                        "NodePath$_$has_fog_off(NodePath const *param0)"
                    ],
                    "fn": "has_fog_off",
                    "indexed": "NodePath$539$has_fog_off",
                    "mangled": "_inCAAAAXW1z",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_fog(NodePath const *param0)",
                    "c_type": "Fog *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_fog_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f666f6728293b",
                    "cpp_ref": "Fog *NodePath::get_fog(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_fog",
                    "extern": [
                        "Fog *",
                        "NodePath$_$get_fog(NodePath const *param0)"
                    ],
                    "fn": "get_fog",
                    "indexed": "NodePath$540$get_fog",
                    "mangled": "_inCAAAAW3Q5",
                    "ot": "Fog*",
                    "rt": "Fog"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_wireframe(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_wireframe_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f776972656672616d6528706172616d31293b",
                    "cpp_ref": "void NodePath::set_render_mode_wireframe(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_wireframe",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_wireframe(NodePath *param0, int param1)"
                    ],
                    "fn": "set_render_mode_wireframe",
                    "indexed": "NodePath$541$set_render_mode_wireframe",
                    "mangled": "_inCAAAA3mJB",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_wireframe(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_wireframe_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f776972656672616d6528293b",
                    "cpp_ref": "void NodePath::set_render_mode_wireframe(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_wireframe",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_wireframe(NodePath *param0)"
                    ],
                    "fn": "set_render_mode_wireframe",
                    "indexed": "NodePath$542$set_render_mode_wireframe",
                    "mangled": "_inCAAAAE5Vy",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_filled(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_filled_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f66696c6c656428706172616d31293b",
                    "cpp_ref": "void NodePath::set_render_mode_filled(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_filled",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_filled(NodePath *param0, int param1)"
                    ],
                    "fn": "set_render_mode_filled",
                    "indexed": "NodePath$543$set_render_mode_filled",
                    "mangled": "_inCAAAAGdFx",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_filled(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_filled_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f66696c6c656428293b",
                    "cpp_ref": "void NodePath::set_render_mode_filled(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_filled",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_filled(NodePath *param0)"
                    ],
                    "fn": "set_render_mode_filled",
                    "indexed": "NodePath$544$set_render_mode_filled",
                    "mangled": "_inCAAAAMX6K",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "wireframe_color",
                        "priority"
                    ],
                    "args": [
                        "LColor const &wireframe_color",
                        "int priority"
                    ],
                    "argt": [
                        "LColor const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LColor const *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_filled_wireframe(NodePath *param0, LColor const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_filled_wireframe_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f66696c6c65645f776972656672616d65282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_render_mode_filled_wireframe(LColor const &wireframe_color, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_filled_wireframe",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_filled_wireframe(NodePath *param0, LColor const *param1, int param2)"
                    ],
                    "fn": "set_render_mode_filled_wireframe",
                    "indexed": "NodePath$545$set_render_mode_filled_wireframe",
                    "mangled": "_inCAAAA7ay3",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "wireframe_color"
                    ],
                    "args": [
                        "LColor const &wireframe_color"
                    ],
                    "argt": [
                        "LColor const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LColor const *"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_filled_wireframe(NodePath *param0, LColor const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_filled_wireframe_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f66696c6c65645f776972656672616d65282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_render_mode_filled_wireframe(LColor const &wireframe_color, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_filled_wireframe",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_filled_wireframe(NodePath *param0, LColor const *param1)"
                    ],
                    "fn": "set_render_mode_filled_wireframe",
                    "indexed": "NodePath$546$set_render_mode_filled_wireframe",
                    "mangled": "_inCAAAAwWo6",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "thickness",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat thickness",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_thickness(NodePath *param0, PN_stdfloat param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_thickness_v_pfi",
                    "cni_args": "pfi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f746869636b6e65737328706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_render_mode_thickness(PN_stdfloat thickness, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_thickness",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_thickness(NodePath *param0, PN_stdfloat param1, int param2)"
                    ],
                    "fn": "set_render_mode_thickness",
                    "indexed": "NodePath$547$set_render_mode_thickness",
                    "mangled": "_inCAAAA1ZKD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "thickness"
                    ],
                    "args": [
                        "PN_stdfloat thickness"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_thickness(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_thickness_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f746869636b6e65737328706172616d31293b",
                    "cpp_ref": "void NodePath::set_render_mode_thickness(PN_stdfloat thickness, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_thickness",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_thickness(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_render_mode_thickness",
                    "indexed": "NodePath$548$set_render_mode_thickness",
                    "mangled": "_inCAAAAY_8S",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "perspective",
                        "priority"
                    ],
                    "args": [
                        "bool perspective",
                        "int priority"
                    ],
                    "argt": [
                        "bool",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "bool",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_perspective(NodePath *param0, bool param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_perspective_v_pBi",
                    "cni_args": "pBi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f706572737065637469766528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_render_mode_perspective(bool perspective, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_perspective",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_perspective(NodePath *param0, bool param1, int param2)"
                    ],
                    "fn": "set_render_mode_perspective",
                    "indexed": "NodePath$549$set_render_mode_perspective",
                    "mangled": "_inCAAAAaI_p",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "perspective"
                    ],
                    "args": [
                        "bool perspective"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "bool"
                    ],
                    "c_ref": "NodePath$_$set_render_mode_perspective(NodePath *param0, bool param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_perspective_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f64655f706572737065637469766528706172616d31293b",
                    "cpp_ref": "void NodePath::set_render_mode_perspective(bool perspective, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode_perspective",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode_perspective(NodePath *param0, bool param1)"
                    ],
                    "fn": "set_render_mode_perspective",
                    "indexed": "NodePath$550$set_render_mode_perspective",
                    "mangled": "_inCAAAA0c2x",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "mode",
                        "thickness",
                        "priority"
                    ],
                    "args": [
                        "RenderModeAttrib::Mode mode",
                        "PN_stdfloat thickness",
                        "int priority"
                    ],
                    "argt": [
                        "RenderModeAttrib::Mode",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "RenderModeAttrib::Mode",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_render_mode(NodePath *param0, RenderModeAttrib::Mode param1, PN_stdfloat param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_v_ppfi",
                    "cni_args": "ppfi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f646528706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_render_mode(RenderModeAttrib::Mode mode, PN_stdfloat thickness, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode(NodePath *param0, RenderModeAttrib::Mode param1, PN_stdfloat param2, int param3)"
                    ],
                    "fn": "set_render_mode",
                    "indexed": "NodePath$551$set_render_mode",
                    "mangled": "_inCAAAAOkES",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "mode",
                        "thickness"
                    ],
                    "args": [
                        "RenderModeAttrib::Mode mode",
                        "PN_stdfloat thickness"
                    ],
                    "argt": [
                        "RenderModeAttrib::Mode",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "RenderModeAttrib::Mode",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_render_mode(NodePath *param0, RenderModeAttrib::Mode param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_render_mode_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f72656e6465725f6d6f646528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_render_mode(RenderModeAttrib::Mode mode, PN_stdfloat thickness, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_render_mode",
                    "extern": [
                        "void",
                        "NodePath$_$set_render_mode(NodePath *param0, RenderModeAttrib::Mode param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_render_mode",
                    "indexed": "NodePath$552$set_render_mode",
                    "mangled": "_inCAAAAVaB2",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_render_mode(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_render_mode_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f72656e6465725f6d6f646528293b",
                    "cpp_ref": "void NodePath::clear_render_mode(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_render_mode",
                    "extern": [
                        "void",
                        "NodePath$_$clear_render_mode(NodePath *param0)"
                    ],
                    "fn": "clear_render_mode",
                    "indexed": "NodePath$553$clear_render_mode",
                    "mangled": "_inCAAAA65TZ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_render_mode(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_render_mode_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f72656e6465725f6d6f646528293b",
                    "cpp_ref": "bool NodePath::has_render_mode(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_render_mode",
                    "extern": [
                        "bool",
                        "NodePath$_$has_render_mode(NodePath const *param0)"
                    ],
                    "fn": "has_render_mode",
                    "indexed": "NodePath$554$has_render_mode",
                    "mangled": "_inCAAAAnDaf",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_render_mode(NodePath const *param0)",
                    "c_type": "RenderModeAttrib::Mode",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_render_mode_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f72656e6465725f6d6f646528293b",
                    "cpp_ref": "RenderModeAttrib::Mode NodePath::get_render_mode(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_render_mode",
                    "extern": [
                        "RenderModeAttrib::Mode",
                        "NodePath$_$get_render_mode(NodePath const *param0)"
                    ],
                    "fn": "get_render_mode",
                    "indexed": "NodePath$555$get_render_mode",
                    "mangled": "_inCAAAAACN3",
                    "ot": "RenderModeAttrib::Mode",
                    "rt": "RenderModeAttrib::Mode"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_render_mode_thickness(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_render_mode_thickness_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f72656e6465725f6d6f64655f746869636b6e65737328293b",
                    "cpp_ref": "PN_stdfloat NodePath::get_render_mode_thickness(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_render_mode_thickness",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_render_mode_thickness(NodePath const *param0)"
                    ],
                    "fn": "get_render_mode_thickness",
                    "indexed": "NodePath$556$get_render_mode_thickness",
                    "mangled": "_inCAAAAUPaP",
                    "ot": "PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_render_mode_perspective(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_render_mode_perspective_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f72656e6465725f6d6f64655f706572737065637469766528293b",
                    "cpp_ref": "bool NodePath::get_render_mode_perspective(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_render_mode_perspective",
                    "extern": [
                        "bool",
                        "NodePath$_$get_render_mode_perspective(NodePath const *param0)"
                    ],
                    "fn": "get_render_mode_perspective",
                    "indexed": "NodePath$557$get_render_mode_perspective",
                    "mangled": "_inCAAAApnN2",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "two_sided",
                        "priority"
                    ],
                    "args": [
                        "bool two_sided",
                        "int priority"
                    ],
                    "argt": [
                        "bool",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "bool",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_two_sided(NodePath *param0, bool param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_two_sided_v_pBi",
                    "cni_args": "pBi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f74776f5f736964656428706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_two_sided(bool two_sided, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_two_sided",
                    "extern": [
                        "void",
                        "NodePath$_$set_two_sided(NodePath *param0, bool param1, int param2)"
                    ],
                    "fn": "set_two_sided",
                    "indexed": "NodePath$558$set_two_sided",
                    "mangled": "_inCAAAAUKd_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "two_sided"
                    ],
                    "args": [
                        "bool two_sided"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "bool"
                    ],
                    "c_ref": "NodePath$_$set_two_sided(NodePath *param0, bool param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_two_sided_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f74776f5f736964656428706172616d31293b",
                    "cpp_ref": "void NodePath::set_two_sided(bool two_sided, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_two_sided",
                    "extern": [
                        "void",
                        "NodePath$_$set_two_sided(NodePath *param0, bool param1)"
                    ],
                    "fn": "set_two_sided",
                    "indexed": "NodePath$559$set_two_sided",
                    "mangled": "_inCAAAA_M_e",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_two_sided(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_two_sided_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f74776f5f736964656428293b",
                    "cpp_ref": "void NodePath::clear_two_sided(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_two_sided",
                    "extern": [
                        "void",
                        "NodePath$_$clear_two_sided(NodePath *param0)"
                    ],
                    "fn": "clear_two_sided",
                    "indexed": "NodePath$560$clear_two_sided",
                    "mangled": "_inCAAAAoJBF",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_two_sided(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_two_sided_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f74776f5f736964656428293b",
                    "cpp_ref": "bool NodePath::has_two_sided(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_two_sided",
                    "extern": [
                        "bool",
                        "NodePath$_$has_two_sided(NodePath const *param0)"
                    ],
                    "fn": "has_two_sided",
                    "indexed": "NodePath$561$has_two_sided",
                    "mangled": "_inCAAAAotTb",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_two_sided(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_two_sided_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f74776f5f736964656428293b",
                    "cpp_ref": "bool NodePath::get_two_sided(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_two_sided",
                    "extern": [
                        "bool",
                        "NodePath$_$get_two_sided(NodePath const *param0)"
                    ],
                    "fn": "get_two_sided",
                    "indexed": "NodePath$562$get_two_sided",
                    "mangled": "_inCAAAAFtGz",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "depth_test",
                        "priority"
                    ],
                    "args": [
                        "bool depth_test",
                        "int priority"
                    ],
                    "argt": [
                        "bool",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "bool",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_depth_test(NodePath *param0, bool param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_depth_test_v_pBi",
                    "cni_args": "pBi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64657074685f7465737428706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_depth_test(bool depth_test, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_depth_test",
                    "extern": [
                        "void",
                        "NodePath$_$set_depth_test(NodePath *param0, bool param1, int param2)"
                    ],
                    "fn": "set_depth_test",
                    "indexed": "NodePath$563$set_depth_test",
                    "mangled": "_inCAAAAY7DP",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "depth_test"
                    ],
                    "args": [
                        "bool depth_test"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "bool"
                    ],
                    "c_ref": "NodePath$_$set_depth_test(NodePath *param0, bool param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_depth_test_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64657074685f7465737428706172616d31293b",
                    "cpp_ref": "void NodePath::set_depth_test(bool depth_test, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_depth_test",
                    "extern": [
                        "void",
                        "NodePath$_$set_depth_test(NodePath *param0, bool param1)"
                    ],
                    "fn": "set_depth_test",
                    "indexed": "NodePath$564$set_depth_test",
                    "mangled": "_inCAAAA2UQ_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_depth_test(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_depth_test_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f64657074685f7465737428293b",
                    "cpp_ref": "void NodePath::clear_depth_test(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_depth_test",
                    "extern": [
                        "void",
                        "NodePath$_$clear_depth_test(NodePath *param0)"
                    ],
                    "fn": "clear_depth_test",
                    "indexed": "NodePath$565$clear_depth_test",
                    "mangled": "_inCAAAAMMNz",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_depth_test(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_depth_test_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f64657074685f7465737428293b",
                    "cpp_ref": "bool NodePath::has_depth_test(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_depth_test",
                    "extern": [
                        "bool",
                        "NodePath$_$has_depth_test(NodePath const *param0)"
                    ],
                    "fn": "has_depth_test",
                    "indexed": "NodePath$566$has_depth_test",
                    "mangled": "_inCAAAAgl7H",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_depth_test(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_depth_test_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f64657074685f7465737428293b",
                    "cpp_ref": "bool NodePath::get_depth_test(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_depth_test",
                    "extern": [
                        "bool",
                        "NodePath$_$get_depth_test(NodePath const *param0)"
                    ],
                    "fn": "get_depth_test",
                    "indexed": "NodePath$567$get_depth_test",
                    "mangled": "_inCAAAANiuf",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "depth_write",
                        "priority"
                    ],
                    "args": [
                        "bool depth_write",
                        "int priority"
                    ],
                    "argt": [
                        "bool",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "bool",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_depth_write(NodePath *param0, bool param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_depth_write_v_pBi",
                    "cni_args": "pBi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64657074685f777269746528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_depth_write(bool depth_write, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_depth_write",
                    "extern": [
                        "void",
                        "NodePath$_$set_depth_write(NodePath *param0, bool param1, int param2)"
                    ],
                    "fn": "set_depth_write",
                    "indexed": "NodePath$568$set_depth_write",
                    "mangled": "_inCAAAArwkt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "depth_write"
                    ],
                    "args": [
                        "bool depth_write"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "bool"
                    ],
                    "c_ref": "NodePath$_$set_depth_write(NodePath *param0, bool param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_depth_write_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64657074685f777269746528706172616d31293b",
                    "cpp_ref": "void NodePath::set_depth_write(bool depth_write, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_depth_write",
                    "extern": [
                        "void",
                        "NodePath$_$set_depth_write(NodePath *param0, bool param1)"
                    ],
                    "fn": "set_depth_write",
                    "indexed": "NodePath$569$set_depth_write",
                    "mangled": "_inCAAAAADOz",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_depth_write(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_depth_write_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f64657074685f777269746528293b",
                    "cpp_ref": "void NodePath::clear_depth_write(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_depth_write",
                    "extern": [
                        "void",
                        "NodePath$_$clear_depth_write(NodePath *param0)"
                    ],
                    "fn": "clear_depth_write",
                    "indexed": "NodePath$570$clear_depth_write",
                    "mangled": "_inCAAAAwNqE",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_depth_write(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_depth_write_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f64657074685f777269746528293b",
                    "cpp_ref": "bool NodePath::has_depth_write(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_depth_write",
                    "extern": [
                        "bool",
                        "NodePath$_$has_depth_write(NodePath const *param0)"
                    ],
                    "fn": "has_depth_write",
                    "indexed": "NodePath$571$has_depth_write",
                    "mangled": "_inCAAAAQs8G",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_depth_write(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_depth_write_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f64657074685f777269746528293b",
                    "cpp_ref": "bool NodePath::get_depth_write(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_depth_write",
                    "extern": [
                        "bool",
                        "NodePath$_$get_depth_write(NodePath const *param0)"
                    ],
                    "fn": "get_depth_write",
                    "indexed": "NodePath$572$get_depth_write",
                    "mangled": "_inCAAAATsve",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "bias",
                        "priority"
                    ],
                    "args": [
                        "int bias",
                        "int priority"
                    ],
                    "argt": [
                        "int",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_depth_offset(NodePath *param0, int param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_depth_offset_v_pii",
                    "cni_args": "pii",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64657074685f6f666673657428706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_depth_offset(int bias, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_depth_offset",
                    "extern": [
                        "void",
                        "NodePath$_$set_depth_offset(NodePath *param0, int param1, int param2)"
                    ],
                    "fn": "set_depth_offset",
                    "indexed": "NodePath$573$set_depth_offset",
                    "mangled": "_inCAAAAKKf_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "bias"
                    ],
                    "args": [
                        "int bias"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_depth_offset(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_depth_offset_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f64657074685f6f666673657428706172616d31293b",
                    "cpp_ref": "void NodePath::set_depth_offset(int bias, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_depth_offset",
                    "extern": [
                        "void",
                        "NodePath$_$set_depth_offset(NodePath *param0, int param1)"
                    ],
                    "fn": "set_depth_offset",
                    "indexed": "NodePath$574$set_depth_offset",
                    "mangled": "_inCAAAAgnKF",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_depth_offset(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_depth_offset_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f64657074685f6f666673657428293b",
                    "cpp_ref": "void NodePath::clear_depth_offset(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_depth_offset",
                    "extern": [
                        "void",
                        "NodePath$_$clear_depth_offset(NodePath *param0)"
                    ],
                    "fn": "clear_depth_offset",
                    "indexed": "NodePath$575$clear_depth_offset",
                    "mangled": "_inCAAAAijjA",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_depth_offset(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_depth_offset_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f64657074685f6f666673657428293b",
                    "cpp_ref": "bool NodePath::has_depth_offset(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_depth_offset",
                    "extern": [
                        "bool",
                        "NodePath$_$has_depth_offset(NodePath const *param0)"
                    ],
                    "fn": "has_depth_offset",
                    "indexed": "NodePath$576$has_depth_offset",
                    "mangled": "_inCAAAADnrS",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_depth_offset(NodePath const *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_depth_offset_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f64657074685f6f666673657428293b",
                    "cpp_ref": "int NodePath::get_depth_offset(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_depth_offset",
                    "extern": [
                        "int",
                        "NodePath$_$get_depth_offset(NodePath const *param0)"
                    ],
                    "fn": "get_depth_offset",
                    "indexed": "NodePath$577$get_depth_offset",
                    "mangled": "_inCAAAAeneq",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "camera",
                        "offset"
                    ],
                    "args": [
                        "NodePath const &camera",
                        "PN_stdfloat offset"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$do_billboard_axis(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_do_billboard_axis_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e646f5f62696c6c626f6172645f61786973282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::do_billboard_axis(NodePath const &camera, PN_stdfloat offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$do_billboard_axis",
                    "extern": [
                        "void",
                        "NodePath$_$do_billboard_axis(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "do_billboard_axis",
                    "indexed": "NodePath$578$do_billboard_axis",
                    "mangled": "_inCAAAAgUnu",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "camera",
                        "offset"
                    ],
                    "args": [
                        "NodePath const &camera",
                        "PN_stdfloat offset"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$do_billboard_point_eye(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_do_billboard_point_eye_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e646f5f62696c6c626f6172645f706f696e745f657965282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::do_billboard_point_eye(NodePath const &camera, PN_stdfloat offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$do_billboard_point_eye",
                    "extern": [
                        "void",
                        "NodePath$_$do_billboard_point_eye(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "do_billboard_point_eye",
                    "indexed": "NodePath$579$do_billboard_point_eye",
                    "mangled": "_inCAAAACzu3",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "camera",
                        "offset"
                    ],
                    "args": [
                        "NodePath const &camera",
                        "PN_stdfloat offset"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$do_billboard_point_world(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_do_billboard_point_world_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e646f5f62696c6c626f6172645f706f696e745f776f726c64282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::do_billboard_point_world(NodePath const &camera, PN_stdfloat offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$do_billboard_point_world",
                    "extern": [
                        "void",
                        "NodePath$_$do_billboard_point_world(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "do_billboard_point_world",
                    "indexed": "NodePath$580$do_billboard_point_world",
                    "mangled": "_inCAAAAJABf",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "camera",
                        "offset"
                    ],
                    "args": [
                        "NodePath const &camera",
                        "PN_stdfloat offset"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_billboard_axis(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_axis_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f61786973282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_billboard_axis(NodePath const &camera, PN_stdfloat offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_axis",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_axis(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_billboard_axis",
                    "indexed": "NodePath$581$set_billboard_axis",
                    "mangled": "_inCAAAAAIR6",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "offset"
                    ],
                    "args": [
                        "PN_stdfloat offset"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_billboard_axis(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_axis_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f6178697328706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_billboard_axis(PN_stdfloat offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_axis",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_axis(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_billboard_axis",
                    "indexed": "NodePath$582$set_billboard_axis",
                    "mangled": "_inCAAAA_Crd",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_billboard_axis(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_axis_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f6178697328293b",
                    "cpp_ref": "inline void NodePath::set_billboard_axis(PN_stdfloat offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_axis",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_axis(NodePath *param0)"
                    ],
                    "fn": "set_billboard_axis",
                    "indexed": "NodePath$583$set_billboard_axis",
                    "mangled": "_inCAAAAxiDy",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "camera",
                        "offset",
                        "fixed_depth"
                    ],
                    "args": [
                        "NodePath const &camera",
                        "PN_stdfloat offset",
                        "bool fixed_depth"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat",
                        "bool"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat",
                        "bool"
                    ],
                    "c_ref": "NodePath$_$set_billboard_point_eye(NodePath *param0, NodePath const *param1, PN_stdfloat param2, bool param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_point_eye_v_ppfB",
                    "cni_args": "ppfB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f706f696e745f657965282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePath::set_billboard_point_eye(NodePath const &camera, PN_stdfloat offset, bool fixed_depth)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_point_eye",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_point_eye(NodePath *param0, NodePath const *param1, PN_stdfloat param2, bool param3)"
                    ],
                    "fn": "set_billboard_point_eye",
                    "indexed": "NodePath$584$set_billboard_point_eye",
                    "mangled": "_inCAAAAB2DY",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "camera",
                        "offset"
                    ],
                    "args": [
                        "NodePath const &camera",
                        "PN_stdfloat offset"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_billboard_point_eye(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_point_eye_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f706f696e745f657965282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_billboard_point_eye(NodePath const &camera, PN_stdfloat offset, bool fixed_depth)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_point_eye",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_point_eye(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_billboard_point_eye",
                    "indexed": "NodePath$585$set_billboard_point_eye",
                    "mangled": "_inCAAAAg38f",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "offset",
                        "fixed_depth"
                    ],
                    "args": [
                        "PN_stdfloat offset",
                        "bool fixed_depth"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "bool"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "bool"
                    ],
                    "c_ref": "NodePath$_$set_billboard_point_eye(NodePath *param0, PN_stdfloat param1, bool param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_point_eye_v_pfB",
                    "cni_args": "pfB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f706f696e745f65796528706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_billboard_point_eye(PN_stdfloat offset, bool fixed_depth)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_point_eye",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_point_eye(NodePath *param0, PN_stdfloat param1, bool param2)"
                    ],
                    "fn": "set_billboard_point_eye",
                    "indexed": "NodePath$586$set_billboard_point_eye",
                    "mangled": "_inCAAAAg9xE",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "offset"
                    ],
                    "args": [
                        "PN_stdfloat offset"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_billboard_point_eye(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_point_eye_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f706f696e745f65796528706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_billboard_point_eye(PN_stdfloat offset, bool fixed_depth)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_point_eye",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_point_eye(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_billboard_point_eye",
                    "indexed": "NodePath$587$set_billboard_point_eye",
                    "mangled": "_inCAAAA6_vm",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_billboard_point_eye(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_point_eye_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f706f696e745f65796528293b",
                    "cpp_ref": "inline void NodePath::set_billboard_point_eye(PN_stdfloat offset, bool fixed_depth)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_point_eye",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_point_eye(NodePath *param0)"
                    ],
                    "fn": "set_billboard_point_eye",
                    "indexed": "NodePath$588$set_billboard_point_eye",
                    "mangled": "_inCAAAAXCeP",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "camera",
                        "offset"
                    ],
                    "args": [
                        "NodePath const &camera",
                        "PN_stdfloat offset"
                    ],
                    "argt": [
                        "NodePath const&",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_billboard_point_world(NodePath *param0, NodePath const *param1, PN_stdfloat param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_point_world_v_ppf",
                    "cni_args": "ppf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f706f696e745f776f726c64282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_billboard_point_world(NodePath const &camera, PN_stdfloat offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_point_world",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_point_world(NodePath *param0, NodePath const *param1, PN_stdfloat param2)"
                    ],
                    "fn": "set_billboard_point_world",
                    "indexed": "NodePath$589$set_billboard_point_world",
                    "mangled": "_inCAAAAGXTK",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "offset"
                    ],
                    "args": [
                        "PN_stdfloat offset"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_billboard_point_world(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_point_world_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f706f696e745f776f726c6428706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_billboard_point_world(PN_stdfloat offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_point_world",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_point_world(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_billboard_point_world",
                    "indexed": "NodePath$590$set_billboard_point_world",
                    "mangled": "_inCAAAAh3kk",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_billboard_point_world(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_billboard_point_world_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f62696c6c626f6172645f706f696e745f776f726c6428293b",
                    "cpp_ref": "inline void NodePath::set_billboard_point_world(PN_stdfloat offset)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_billboard_point_world",
                    "extern": [
                        "void",
                        "NodePath$_$set_billboard_point_world(NodePath *param0)"
                    ],
                    "fn": "set_billboard_point_world",
                    "indexed": "NodePath$591$set_billboard_point_world",
                    "mangled": "_inCAAAAKJae",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_billboard(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_billboard_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f62696c6c626f61726428293b",
                    "cpp_ref": "void NodePath::clear_billboard(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_billboard",
                    "extern": [
                        "void",
                        "NodePath$_$clear_billboard(NodePath *param0)"
                    ],
                    "fn": "clear_billboard",
                    "indexed": "NodePath$592$clear_billboard",
                    "mangled": "_inCAAAAaATv",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_billboard(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_billboard_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f62696c6c626f61726428293b",
                    "cpp_ref": "bool NodePath::has_billboard(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_billboard",
                    "extern": [
                        "bool",
                        "NodePath$_$has_billboard(NodePath const *param0)"
                    ],
                    "fn": "has_billboard",
                    "indexed": "NodePath$593$has_billboard",
                    "mangled": "_inCAAAA3oWg",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "reference"
                    ],
                    "args": [
                        "NodePath const &reference"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$set_compass(NodePath *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_compass_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6d70617373282a706172616d31293b",
                    "cpp_ref": "void NodePath::set_compass(NodePath const &reference)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_compass",
                    "extern": [
                        "void",
                        "NodePath$_$set_compass(NodePath *param0, NodePath const *param1)"
                    ],
                    "fn": "set_compass",
                    "indexed": "NodePath$594$set_compass",
                    "mangled": "_inCAAAALfMs",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_compass(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_compass_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6d7061737328293b",
                    "cpp_ref": "void NodePath::set_compass(NodePath const &reference)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_compass",
                    "extern": [
                        "void",
                        "NodePath$_$set_compass(NodePath *param0)"
                    ],
                    "fn": "set_compass",
                    "indexed": "NodePath$595$set_compass",
                    "mangled": "_inCAAAApaNt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_compass(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_compass_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f636f6d7061737328293b",
                    "cpp_ref": "void NodePath::clear_compass(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_compass",
                    "extern": [
                        "void",
                        "NodePath$_$clear_compass(NodePath *param0)"
                    ],
                    "fn": "clear_compass",
                    "indexed": "NodePath$596$clear_compass",
                    "mangled": "_inCAAAAT898",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_compass(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_compass_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f636f6d7061737328293b",
                    "cpp_ref": "bool NodePath::has_compass(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_compass",
                    "extern": [
                        "bool",
                        "NodePath$_$has_compass(NodePath const *param0)"
                    ],
                    "fn": "has_compass",
                    "indexed": "NodePath$597$has_compass",
                    "mangled": "_inCAAAAqX5i",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "mode",
                        "priority"
                    ],
                    "args": [
                        "TransparencyAttrib::Mode mode",
                        "int priority"
                    ],
                    "argt": [
                        "TransparencyAttrib::Mode",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TransparencyAttrib::Mode",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_transparency(NodePath *param0, TransparencyAttrib::Mode param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_transparency_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73706172656e637928706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_transparency(TransparencyAttrib::Mode mode, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_transparency",
                    "extern": [
                        "void",
                        "NodePath$_$set_transparency(NodePath *param0, TransparencyAttrib::Mode param1, int param2)"
                    ],
                    "fn": "set_transparency",
                    "indexed": "NodePath$598$set_transparency",
                    "mangled": "_inCAAAAqfz0",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mode"
                    ],
                    "args": [
                        "TransparencyAttrib::Mode mode"
                    ],
                    "argt": [
                        "TransparencyAttrib::Mode"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "TransparencyAttrib::Mode"
                    ],
                    "c_ref": "NodePath$_$set_transparency(NodePath *param0, TransparencyAttrib::Mode param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_transparency_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73706172656e637928706172616d31293b",
                    "cpp_ref": "void NodePath::set_transparency(TransparencyAttrib::Mode mode, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_transparency",
                    "extern": [
                        "void",
                        "NodePath$_$set_transparency(NodePath *param0, TransparencyAttrib::Mode param1)"
                    ],
                    "fn": "set_transparency",
                    "indexed": "NodePath$599$set_transparency",
                    "mangled": "_inCAAAAdYx9",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_transparency(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_transparency_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7472616e73706172656e637928293b",
                    "cpp_ref": "void NodePath::clear_transparency(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_transparency",
                    "extern": [
                        "void",
                        "NodePath$_$clear_transparency(NodePath *param0)"
                    ],
                    "fn": "clear_transparency",
                    "indexed": "NodePath$600$clear_transparency",
                    "mangled": "_inCAAAAcU7Z",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_transparency(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_transparency_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7472616e73706172656e637928293b",
                    "cpp_ref": "bool NodePath::has_transparency(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_transparency",
                    "extern": [
                        "bool",
                        "NodePath$_$has_transparency(NodePath const *param0)"
                    ],
                    "fn": "has_transparency",
                    "indexed": "NodePath$601$has_transparency",
                    "mangled": "_inCAAAAfD3E",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_transparency(NodePath const *param0)",
                    "c_type": "TransparencyAttrib::Mode",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_transparency_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7472616e73706172656e637928293b",
                    "cpp_ref": "TransparencyAttrib::Mode NodePath::get_transparency(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_transparency",
                    "extern": [
                        "TransparencyAttrib::Mode",
                        "NodePath$_$get_transparency(NodePath const *param0)"
                    ],
                    "fn": "get_transparency",
                    "indexed": "NodePath$602$get_transparency",
                    "mangled": "_inCAAAA4Coc",
                    "ot": "TransparencyAttrib::Mode",
                    "rt": "TransparencyAttrib::Mode"
                },
                {
                    "argc": 2,
                    "argn": [
                        "op",
                        "priority"
                    ],
                    "args": [
                        "LogicOpAttrib::Operation op",
                        "int priority"
                    ],
                    "argt": [
                        "LogicOpAttrib::Operation",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LogicOpAttrib::Operation",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_logic_op(NodePath *param0, LogicOpAttrib::Operation param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_logic_op_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c6f6769635f6f7028706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_logic_op(LogicOpAttrib::Operation op, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_logic_op",
                    "extern": [
                        "void",
                        "NodePath$_$set_logic_op(NodePath *param0, LogicOpAttrib::Operation param1, int param2)"
                    ],
                    "fn": "set_logic_op",
                    "indexed": "NodePath$603$set_logic_op",
                    "mangled": "_inCAAAAR8KL",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "op"
                    ],
                    "args": [
                        "LogicOpAttrib::Operation op"
                    ],
                    "argt": [
                        "LogicOpAttrib::Operation"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "LogicOpAttrib::Operation"
                    ],
                    "c_ref": "NodePath$_$set_logic_op(NodePath *param0, LogicOpAttrib::Operation param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_logic_op_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c6f6769635f6f7028706172616d31293b",
                    "cpp_ref": "void NodePath::set_logic_op(LogicOpAttrib::Operation op, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_logic_op",
                    "extern": [
                        "void",
                        "NodePath$_$set_logic_op(NodePath *param0, LogicOpAttrib::Operation param1)"
                    ],
                    "fn": "set_logic_op",
                    "indexed": "NodePath$604$set_logic_op",
                    "mangled": "_inCAAAAjN9a",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_logic_op(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_logic_op_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6c6f6769635f6f7028293b",
                    "cpp_ref": "void NodePath::clear_logic_op(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_logic_op",
                    "extern": [
                        "void",
                        "NodePath$_$clear_logic_op(NodePath *param0)"
                    ],
                    "fn": "clear_logic_op",
                    "indexed": "NodePath$605$clear_logic_op",
                    "mangled": "_inCAAAAi6dD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_logic_op(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_logic_op_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f6c6f6769635f6f7028293b",
                    "cpp_ref": "bool NodePath::has_logic_op(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_logic_op",
                    "extern": [
                        "bool",
                        "NodePath$_$has_logic_op(NodePath const *param0)"
                    ],
                    "fn": "has_logic_op",
                    "indexed": "NodePath$606$has_logic_op",
                    "mangled": "_inCAAAA3jPA",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_logic_op(NodePath const *param0)",
                    "c_type": "LogicOpAttrib::Operation",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_logic_op_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6c6f6769635f6f7028293b",
                    "cpp_ref": "LogicOpAttrib::Operation NodePath::get_logic_op(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_logic_op",
                    "extern": [
                        "LogicOpAttrib::Operation",
                        "NodePath$_$get_logic_op(NodePath const *param0)"
                    ],
                    "fn": "get_logic_op",
                    "indexed": "NodePath$607$get_logic_op",
                    "mangled": "_inCAAAASjCY",
                    "ot": "LogicOpAttrib::Operation",
                    "rt": "LogicOpAttrib::Operation"
                },
                {
                    "argc": 2,
                    "argn": [
                        "mode",
                        "priority"
                    ],
                    "args": [
                        "unsigned short int mode",
                        "int priority"
                    ],
                    "argt": [
                        "unsigned short int",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "unsigned short int",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_antialias(NodePath *param0, unsigned short int param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_antialias_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f616e7469616c69617328706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_antialias(unsigned short int mode, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_antialias",
                    "extern": [
                        "void",
                        "NodePath$_$set_antialias(NodePath *param0, unsigned short int param1, int param2)"
                    ],
                    "fn": "set_antialias",
                    "indexed": "NodePath$608$set_antialias",
                    "mangled": "_inCAAAAC4tu",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mode"
                    ],
                    "args": [
                        "unsigned short int mode"
                    ],
                    "argt": [
                        "unsigned short int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "unsigned short int"
                    ],
                    "c_ref": "NodePath$_$set_antialias(NodePath *param0, unsigned short int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_antialias_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f616e7469616c69617328706172616d31293b",
                    "cpp_ref": "void NodePath::set_antialias(unsigned short int mode, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_antialias",
                    "extern": [
                        "void",
                        "NodePath$_$set_antialias(NodePath *param0, unsigned short int param1)"
                    ],
                    "fn": "set_antialias",
                    "indexed": "NodePath$609$set_antialias",
                    "mangled": "_inCAAAALHl2",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_antialias(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_antialias_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f616e7469616c69617328293b",
                    "cpp_ref": "void NodePath::clear_antialias(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_antialias",
                    "extern": [
                        "void",
                        "NodePath$_$clear_antialias(NodePath *param0)"
                    ],
                    "fn": "clear_antialias",
                    "indexed": "NodePath$610$clear_antialias",
                    "mangled": "_inCAAAAVKqH",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_antialias(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_antialias_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f616e7469616c69617328293b",
                    "cpp_ref": "bool NodePath::has_antialias(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_antialias",
                    "extern": [
                        "bool",
                        "NodePath$_$has_antialias(NodePath const *param0)"
                    ],
                    "fn": "has_antialias",
                    "indexed": "NodePath$611$has_antialias",
                    "mangled": "_inCAAAASWgH",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_antialias(NodePath const *param0)",
                    "c_type": "unsigned short int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_antialias_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f616e7469616c69617328293b",
                    "cpp_ref": "unsigned short int NodePath::get_antialias(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_antialias",
                    "extern": [
                        "unsigned short int",
                        "NodePath$_$get_antialias(NodePath const *param0)"
                    ],
                    "fn": "get_antialias",
                    "indexed": "NodePath$612$get_antialias",
                    "mangled": "_inCAAAA9RTf",
                    "ot": "unsigned short int",
                    "rt": "unsigned short int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$has_audio_volume(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_audio_volume_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f617564696f5f766f6c756d6528293b",
                    "cpp_ref": "bool NodePath::has_audio_volume(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_audio_volume",
                    "extern": [
                        "bool",
                        "NodePath$_$has_audio_volume(NodePath const *param0)"
                    ],
                    "fn": "has_audio_volume",
                    "indexed": "NodePath$613$has_audio_volume",
                    "mangled": "_inCAAAAg2wE",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_audio_volume(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_audio_volume_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f617564696f5f766f6c756d6528293b",
                    "cpp_ref": "void NodePath::clear_audio_volume(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_audio_volume",
                    "extern": [
                        "void",
                        "NodePath$_$clear_audio_volume(NodePath *param0)"
                    ],
                    "fn": "clear_audio_volume",
                    "indexed": "NodePath$614$clear_audio_volume",
                    "mangled": "_inCAAAAkl6M",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "volume",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat volume",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_audio_volume(NodePath *param0, PN_stdfloat param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_audio_volume_v_pfi",
                    "cni_args": "pfi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f617564696f5f766f6c756d6528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::set_audio_volume(PN_stdfloat volume, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_audio_volume",
                    "extern": [
                        "void",
                        "NodePath$_$set_audio_volume(NodePath *param0, PN_stdfloat param1, int param2)"
                    ],
                    "fn": "set_audio_volume",
                    "indexed": "NodePath$615$set_audio_volume",
                    "mangled": "_inCAAAATFV0",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "volume"
                    ],
                    "args": [
                        "PN_stdfloat volume"
                    ],
                    "argt": [
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePath$_$set_audio_volume(NodePath *param0, PN_stdfloat param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_audio_volume_v_pf",
                    "cni_args": "pf",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f617564696f5f766f6c756d6528706172616d31293b",
                    "cpp_ref": "void NodePath::set_audio_volume(PN_stdfloat volume, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_audio_volume",
                    "extern": [
                        "void",
                        "NodePath$_$set_audio_volume(NodePath *param0, PN_stdfloat param1)"
                    ],
                    "fn": "set_audio_volume",
                    "indexed": "NodePath$616$set_audio_volume",
                    "mangled": "_inCAAAA8CYy",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_audio_volume_off(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_audio_volume_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f617564696f5f766f6c756d655f6f666628706172616d31293b",
                    "cpp_ref": "void NodePath::set_audio_volume_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_audio_volume_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_audio_volume_off(NodePath *param0, int param1)"
                    ],
                    "fn": "set_audio_volume_off",
                    "indexed": "NodePath$617$set_audio_volume_off",
                    "mangled": "_inCAAAA1cXV",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$set_audio_volume_off(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_audio_volume_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f617564696f5f766f6c756d655f6f666628293b",
                    "cpp_ref": "void NodePath::set_audio_volume_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_audio_volume_off",
                    "extern": [
                        "void",
                        "NodePath$_$set_audio_volume_off(NodePath *param0)"
                    ],
                    "fn": "set_audio_volume_off",
                    "indexed": "NodePath$618$set_audio_volume_off",
                    "mangled": "_inCAAAAvp9t",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_audio_volume(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_audio_volume_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f617564696f5f766f6c756d6528293b",
                    "cpp_ref": "PN_stdfloat NodePath::get_audio_volume(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_audio_volume",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_audio_volume(NodePath const *param0)"
                    ],
                    "fn": "get_audio_volume",
                    "indexed": "NodePath$619$get_audio_volume",
                    "mangled": "_inCAAAA92jc",
                    "ot": "PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_net_audio_volume(NodePath const *param0)",
                    "c_type": "PN_stdfloat",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_net_audio_volume_f_p",
                    "cni_args": "p",
                    "cni_rt": "f",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e65745f617564696f5f766f6c756d6528293b",
                    "cpp_ref": "PN_stdfloat NodePath::get_net_audio_volume(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_net_audio_volume",
                    "extern": [
                        "PN_stdfloat",
                        "NodePath$_$get_net_audio_volume(NodePath const *param0)"
                    ],
                    "fn": "get_net_audio_volume",
                    "indexed": "NodePath$620$get_net_audio_volume",
                    "mangled": "_inCAAAACLIx",
                    "ot": "PN_stdfloat",
                    "rt": "PN_stdfloat"
                },
                {
                    "argc": 1,
                    "argn": [
                        "adjustment"
                    ],
                    "args": [
                        "int adjustment"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$adjust_all_priorities(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_adjust_all_priorities_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e61646a7573745f616c6c5f7072696f72697469657328706172616d31293b",
                    "cpp_ref": "inline void NodePath::adjust_all_priorities(int adjustment)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$adjust_all_priorities",
                    "extern": [
                        "void",
                        "NodePath$_$adjust_all_priorities(NodePath *param0, int param1)"
                    ],
                    "fn": "adjust_all_priorities",
                    "indexed": "NodePath$621$adjust_all_priorities",
                    "mangled": "_inCAAAAblUl",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$show(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_show_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73686f7728293b",
                    "cpp_ref": "inline void NodePath::show(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$show",
                    "extern": [
                        "void",
                        "NodePath$_$show(NodePath *param0)"
                    ],
                    "fn": "show",
                    "indexed": "NodePath$622$show",
                    "mangled": "_inCAAAADwv_",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "camera_mask"
                    ],
                    "args": [
                        "DrawMask camera_mask"
                    ],
                    "argt": [
                        "DrawMask"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "DrawMask *"
                    ],
                    "c_ref": "NodePath$_$show(NodePath *param0, DrawMask *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_show_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73686f77282a706172616d31293b",
                    "cpp_ref": "inline void NodePath::show(DrawMask camera_mask)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$show",
                    "extern": [
                        "void",
                        "NodePath$_$show(NodePath *param0, DrawMask *param1)"
                    ],
                    "fn": "show",
                    "indexed": "NodePath$623$show",
                    "mangled": "_inCAAAAlrmX",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$show_through(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_show_through_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73686f775f7468726f75676828293b",
                    "cpp_ref": "inline void NodePath::show_through(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$show_through",
                    "extern": [
                        "void",
                        "NodePath$_$show_through(NodePath *param0)"
                    ],
                    "fn": "show_through",
                    "indexed": "NodePath$624$show_through",
                    "mangled": "_inCAAAA9Pk3",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "camera_mask"
                    ],
                    "args": [
                        "DrawMask camera_mask"
                    ],
                    "argt": [
                        "DrawMask"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "DrawMask *"
                    ],
                    "c_ref": "NodePath$_$show_through(NodePath *param0, DrawMask *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_show_through_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73686f775f7468726f756768282a706172616d31293b",
                    "cpp_ref": "inline void NodePath::show_through(DrawMask camera_mask)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$show_through",
                    "extern": [
                        "void",
                        "NodePath$_$show_through(NodePath *param0, DrawMask *param1)"
                    ],
                    "fn": "show_through",
                    "indexed": "NodePath$625$show_through",
                    "mangled": "_inCAAAAKRaa",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$hide(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_hide_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6869646528293b",
                    "cpp_ref": "inline void NodePath::hide(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$hide",
                    "extern": [
                        "void",
                        "NodePath$_$hide(NodePath *param0)"
                    ],
                    "fn": "hide",
                    "indexed": "NodePath$626$hide",
                    "mangled": "_inCAAAArDIm",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "camera_mask"
                    ],
                    "args": [
                        "DrawMask camera_mask"
                    ],
                    "argt": [
                        "DrawMask"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "DrawMask *"
                    ],
                    "c_ref": "NodePath$_$hide(NodePath *param0, DrawMask *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_hide_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e68696465282a706172616d31293b",
                    "cpp_ref": "inline void NodePath::hide(DrawMask camera_mask)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$hide",
                    "extern": [
                        "void",
                        "NodePath$_$hide(NodePath *param0, DrawMask *param1)"
                    ],
                    "fn": "hide",
                    "indexed": "NodePath$627$hide",
                    "mangled": "_inCAAAAE___",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "camera_mask"
                    ],
                    "args": [
                        "DrawMask camera_mask"
                    ],
                    "argt": [
                        "DrawMask"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "DrawMask *"
                    ],
                    "c_ref": "NodePath$_$is_hidden(NodePath const *param0, DrawMask *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_hidden_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f68696464656e282a706172616d31293b",
                    "cpp_ref": "inline bool NodePath::is_hidden(DrawMask camera_mask) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_hidden",
                    "extern": [
                        "bool",
                        "NodePath$_$is_hidden(NodePath const *param0, DrawMask *param1)"
                    ],
                    "fn": "is_hidden",
                    "indexed": "NodePath$628$is_hidden",
                    "mangled": "_inCAAAAriih",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$is_hidden(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_hidden_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f68696464656e28293b",
                    "cpp_ref": "inline bool NodePath::is_hidden(DrawMask camera_mask) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_hidden",
                    "extern": [
                        "bool",
                        "NodePath$_$is_hidden(NodePath const *param0)"
                    ],
                    "fn": "is_hidden",
                    "indexed": "NodePath$629$is_hidden",
                    "mangled": "_inCAAAAYTUU",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "camera_mask",
                        "current_thread"
                    ],
                    "args": [
                        "DrawMask camera_mask",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "DrawMask",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "DrawMask *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_hidden_ancestor(NodePath const *param0, DrawMask *param1, Thread *param2)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_hidden_ancestor_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f68696464656e5f616e636573746f72282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "NodePath NodePath::get_hidden_ancestor(DrawMask camera_mask, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_hidden_ancestor",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_hidden_ancestor(NodePath const *param0, DrawMask *param1, Thread *param2)"
                    ],
                    "fn": "get_hidden_ancestor",
                    "indexed": "NodePath$630$get_hidden_ancestor",
                    "mangled": "_inCAAAA1YF_",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "camera_mask"
                    ],
                    "args": [
                        "DrawMask camera_mask"
                    ],
                    "argt": [
                        "DrawMask"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "DrawMask *"
                    ],
                    "c_ref": "NodePath$_$get_hidden_ancestor(NodePath const *param0, DrawMask *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_hidden_ancestor_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f68696464656e5f616e636573746f72282a706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::get_hidden_ancestor(DrawMask camera_mask, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_hidden_ancestor",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_hidden_ancestor(NodePath const *param0, DrawMask *param1)"
                    ],
                    "fn": "get_hidden_ancestor",
                    "indexed": "NodePath$631$get_hidden_ancestor",
                    "mangled": "_inCAAAAeZqP",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_hidden_ancestor(NodePath const *param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_hidden_ancestor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f68696464656e5f616e636573746f722829293b",
                    "cpp_ref": "NodePath NodePath::get_hidden_ancestor(DrawMask camera_mask, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_hidden_ancestor",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_hidden_ancestor(NodePath const *param0)"
                    ],
                    "fn": "get_hidden_ancestor",
                    "indexed": "NodePath$632$get_hidden_ancestor",
                    "mangled": "_inCAAAAICma",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$stash(NodePath *param0, int param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_stash_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e737461736828706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::stash(int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$stash",
                    "extern": [
                        "void",
                        "NodePath$_$stash(NodePath *param0, int param1, Thread *param2)"
                    ],
                    "fn": "stash",
                    "indexed": "NodePath$633$stash",
                    "mangled": "_inCAAAAtlrQ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sort"
                    ],
                    "args": [
                        "int sort"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$stash(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_stash_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e737461736828706172616d31293b",
                    "cpp_ref": "void NodePath::stash(int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$stash",
                    "extern": [
                        "void",
                        "NodePath$_$stash(NodePath *param0, int param1)"
                    ],
                    "fn": "stash",
                    "indexed": "NodePath$634$stash",
                    "mangled": "_inCAAAA2Ms1",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$stash(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_stash_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e737461736828293b",
                    "cpp_ref": "void NodePath::stash(int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$stash",
                    "extern": [
                        "void",
                        "NodePath$_$stash(NodePath *param0)"
                    ],
                    "fn": "stash",
                    "indexed": "NodePath$635$stash",
                    "mangled": "_inCAAAAinzQ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$unstash(NodePath *param0, int param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_unstash_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e737461736828706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::unstash(int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$unstash",
                    "extern": [
                        "void",
                        "NodePath$_$unstash(NodePath *param0, int param1, Thread *param2)"
                    ],
                    "fn": "unstash",
                    "indexed": "NodePath$636$unstash",
                    "mangled": "_inCAAAA01HZ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "sort"
                    ],
                    "args": [
                        "int sort"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$unstash(NodePath *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_unstash_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e737461736828706172616d31293b",
                    "cpp_ref": "void NodePath::unstash(int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$unstash",
                    "extern": [
                        "void",
                        "NodePath$_$unstash(NodePath *param0, int param1)"
                    ],
                    "fn": "unstash",
                    "indexed": "NodePath$637$unstash",
                    "mangled": "_inCAAAAbNQv",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$unstash(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_unstash_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e737461736828293b",
                    "cpp_ref": "void NodePath::unstash(int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$unstash",
                    "extern": [
                        "void",
                        "NodePath$_$unstash(NodePath *param0)"
                    ],
                    "fn": "unstash",
                    "indexed": "NodePath$638$unstash",
                    "mangled": "_inCAAAAMkf6",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$unstash_all(NodePath *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_unstash_all_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e73746173685f616c6c28706172616d31293b",
                    "cpp_ref": "void NodePath::unstash_all(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$unstash_all",
                    "extern": [
                        "void",
                        "NodePath$_$unstash_all(NodePath *param0, Thread *param1)"
                    ],
                    "fn": "unstash_all",
                    "indexed": "NodePath$639$unstash_all",
                    "mangled": "_inCAAAA6_Bh",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$unstash_all(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_unstash_all_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e73746173685f616c6c28293b",
                    "cpp_ref": "void NodePath::unstash_all(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$unstash_all",
                    "extern": [
                        "void",
                        "NodePath$_$unstash_all(NodePath *param0)"
                    ],
                    "fn": "unstash_all",
                    "indexed": "NodePath$640$unstash_all",
                    "mangled": "_inCAAAAw2AF",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$is_stashed(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_is_stashed_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f7374617368656428293b",
                    "cpp_ref": "inline bool NodePath::is_stashed(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$is_stashed",
                    "extern": [
                        "bool",
                        "NodePath$_$is_stashed(NodePath const *param0)"
                    ],
                    "fn": "is_stashed",
                    "indexed": "NodePath$641$is_stashed",
                    "mangled": "_inCAAAA_PEj",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_stashed_ancestor(NodePath const *param0, Thread *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_stashed_ancestor_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f737461736865645f616e636573746f7228706172616d3129293b",
                    "cpp_ref": "NodePath NodePath::get_stashed_ancestor(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_stashed_ancestor",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_stashed_ancestor(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_stashed_ancestor",
                    "indexed": "NodePath$642$get_stashed_ancestor",
                    "mangled": "_inCAAAA7VVR",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_stashed_ancestor(NodePath const *param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_stashed_ancestor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f737461736865645f616e636573746f722829293b",
                    "cpp_ref": "NodePath NodePath::get_stashed_ancestor(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_stashed_ancestor",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$get_stashed_ancestor(NodePath const *param0)"
                    ],
                    "fn": "get_stashed_ancestor",
                    "indexed": "NodePath$643$get_stashed_ancestor",
                    "mangled": "_inCAAAAZTAQ",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_collide_mask(NodePath const *param0)",
                    "c_type": "CollideMask *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_collide_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6c6c6964654d61736b28282a706172616d30292e6765745f636f6c6c6964655f6d61736b2829293b",
                    "cpp_ref": "inline CollideMask NodePath::get_collide_mask(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_collide_mask",
                    "extern": [
                        "CollideMask *",
                        "NodePath$_$get_collide_mask(NodePath const *param0)"
                    ],
                    "fn": "get_collide_mask",
                    "indexed": "NodePath$644$get_collide_mask",
                    "mangled": "_inCAAAABdNw",
                    "ot": "inline CollideMask",
                    "rt": "CollideMask"
                },
                {
                    "argc": 3,
                    "argn": [
                        "new_mask",
                        "bits_to_change",
                        "node_type"
                    ],
                    "args": [
                        "CollideMask new_mask",
                        "CollideMask bits_to_change",
                        "TypeHandle node_type"
                    ],
                    "argt": [
                        "CollideMask",
                        "CollideMask",
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CollideMask *",
                        "CollideMask *",
                        "int"
                    ],
                    "c_ref": "NodePath$_$set_collide_mask(NodePath *param0, CollideMask *param1, CollideMask *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_collide_mask_v_pppi",
                    "cni_args": "pppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6c6964655f6d61736b282a706172616d312c202a706172616d322c205479706548616e646c653a3a66726f6d5f696e64657828706172616d3329293b",
                    "cpp_ref": "inline void NodePath::set_collide_mask(CollideMask new_mask, CollideMask bits_to_change, TypeHandle node_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_collide_mask",
                    "extern": [
                        "void",
                        "NodePath$_$set_collide_mask(NodePath *param0, CollideMask *param1, CollideMask *param2, int param3)"
                    ],
                    "fn": "set_collide_mask",
                    "indexed": "NodePath$645$set_collide_mask",
                    "mangled": "_inCAAAAqTbI",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "new_mask",
                        "bits_to_change"
                    ],
                    "args": [
                        "CollideMask new_mask",
                        "CollideMask bits_to_change"
                    ],
                    "argt": [
                        "CollideMask",
                        "CollideMask"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CollideMask *",
                        "CollideMask *"
                    ],
                    "c_ref": "NodePath$_$set_collide_mask(NodePath *param0, CollideMask *param1, CollideMask *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_collide_mask_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6c6964655f6d61736b282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "inline void NodePath::set_collide_mask(CollideMask new_mask, CollideMask bits_to_change, TypeHandle node_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_collide_mask",
                    "extern": [
                        "void",
                        "NodePath$_$set_collide_mask(NodePath *param0, CollideMask *param1, CollideMask *param2)"
                    ],
                    "fn": "set_collide_mask",
                    "indexed": "NodePath$646$set_collide_mask",
                    "mangled": "_inCAAAAeVQw",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "new_mask"
                    ],
                    "args": [
                        "CollideMask new_mask"
                    ],
                    "argt": [
                        "CollideMask"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "CollideMask *"
                    ],
                    "c_ref": "NodePath$_$set_collide_mask(NodePath *param0, CollideMask *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_collide_mask_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6c6964655f6d61736b282a706172616d31293b",
                    "cpp_ref": "inline void NodePath::set_collide_mask(CollideMask new_mask, CollideMask bits_to_change, TypeHandle node_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_collide_mask",
                    "extern": [
                        "void",
                        "NodePath$_$set_collide_mask(NodePath *param0, CollideMask *param1)"
                    ],
                    "fn": "set_collide_mask",
                    "indexed": "NodePath$647$set_collide_mask",
                    "mangled": "_inCAAAADt_y",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$compare_to(NodePath const *param0, NodePath const *param1)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_compare_to_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f746f282a706172616d31293b",
                    "cpp_ref": "inline int NodePath::compare_to(NodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$compare_to",
                    "extern": [
                        "int",
                        "NodePath$_$compare_to(NodePath const *param0, NodePath const *param1)"
                    ],
                    "fn": "compare_to",
                    "indexed": "NodePath$648$compare_to",
                    "mangled": "_inCAAAAHPj2",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "WeakNodePath const &other"
                    ],
                    "argt": [
                        "WeakNodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "WeakNodePath const *"
                    ],
                    "c_ref": "NodePath$_$compare_to(NodePath const *param0, WeakNodePath const *param1)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_compare_to_i_pp_1_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f746f282a706172616d31293b",
                    "cpp_ref": "int NodePath::compare_to(WeakNodePath const &other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$compare_to",
                    "extern": [
                        "int",
                        "NodePath$_$compare_to(NodePath const *param0, WeakNodePath const *param1)"
                    ],
                    "fn": "compare_to",
                    "indexed": "NodePath$649$compare_to",
                    "mangled": "_inCAAAAcyNU",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$verify_complete(NodePath const *param0, Thread *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_verify_complete_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7665726966795f636f6d706c65746528706172616d31293b",
                    "cpp_ref": "bool NodePath::verify_complete(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$verify_complete",
                    "extern": [
                        "bool",
                        "NodePath$_$verify_complete(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "verify_complete",
                    "indexed": "NodePath$650$verify_complete",
                    "mangled": "_inCAAAAAcUK",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$verify_complete(NodePath const *param0)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_verify_complete_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7665726966795f636f6d706c65746528293b",
                    "cpp_ref": "bool NodePath::verify_complete(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$verify_complete",
                    "extern": [
                        "bool",
                        "NodePath$_$verify_complete(NodePath const *param0)"
                    ],
                    "fn": "verify_complete",
                    "indexed": "NodePath$651$verify_complete",
                    "mangled": "_inCAAAATqrp",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "gsg"
                    ],
                    "args": [
                        "GraphicsStateGuardianBase *gsg"
                    ],
                    "argt": [
                        "GraphicsStateGuardianBase*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "GraphicsStateGuardianBase *"
                    ],
                    "c_ref": "NodePath$_$premunge_scene(NodePath *param0, GraphicsStateGuardianBase *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_premunge_scene_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7072656d756e67655f7363656e6528706172616d31293b",
                    "cpp_ref": "void NodePath::premunge_scene(GraphicsStateGuardianBase *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$premunge_scene",
                    "extern": [
                        "void",
                        "NodePath$_$premunge_scene(NodePath *param0, GraphicsStateGuardianBase *param1)"
                    ],
                    "fn": "premunge_scene",
                    "indexed": "NodePath$652$premunge_scene",
                    "mangled": "_inCAAAAgz7H",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$premunge_scene(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_premunge_scene_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7072656d756e67655f7363656e6528293b",
                    "cpp_ref": "void NodePath::premunge_scene(GraphicsStateGuardianBase *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$premunge_scene",
                    "extern": [
                        "void",
                        "NodePath$_$premunge_scene(NodePath *param0)"
                    ],
                    "fn": "premunge_scene",
                    "indexed": "NodePath$653$premunge_scene",
                    "mangled": "_inCAAAAXuCN",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "gsg"
                    ],
                    "args": [
                        "GraphicsStateGuardianBase *gsg"
                    ],
                    "argt": [
                        "GraphicsStateGuardianBase*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "GraphicsStateGuardianBase *"
                    ],
                    "c_ref": "NodePath$_$prepare_scene(NodePath *param0, GraphicsStateGuardianBase *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_prepare_scene_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e707265706172655f7363656e6528706172616d31293b",
                    "cpp_ref": "void NodePath::prepare_scene(GraphicsStateGuardianBase *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$prepare_scene",
                    "extern": [
                        "void",
                        "NodePath$_$prepare_scene(NodePath *param0, GraphicsStateGuardianBase *param1)"
                    ],
                    "fn": "prepare_scene",
                    "indexed": "NodePath$654$prepare_scene",
                    "mangled": "_inCAAAA0HH0",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$show_bounds(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_show_bounds_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73686f775f626f756e647328293b",
                    "cpp_ref": "void NodePath::show_bounds(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$show_bounds",
                    "extern": [
                        "void",
                        "NodePath$_$show_bounds(NodePath *param0)"
                    ],
                    "fn": "show_bounds",
                    "indexed": "NodePath$655$show_bounds",
                    "mangled": "_inCAAAA1psR",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$show_tight_bounds(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_show_tight_bounds_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73686f775f74696768745f626f756e647328293b",
                    "cpp_ref": "void NodePath::show_tight_bounds(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$show_tight_bounds",
                    "extern": [
                        "void",
                        "NodePath$_$show_tight_bounds(NodePath *param0)"
                    ],
                    "fn": "show_tight_bounds",
                    "indexed": "NodePath$656$show_tight_bounds",
                    "mangled": "_inCAAAApl7q",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$hide_bounds(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_hide_bounds_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e686964655f626f756e647328293b",
                    "cpp_ref": "void NodePath::hide_bounds(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$hide_bounds",
                    "extern": [
                        "void",
                        "NodePath$_$hide_bounds(NodePath *param0)"
                    ],
                    "fn": "hide_bounds",
                    "indexed": "NodePath$657$hide_bounds",
                    "mangled": "_inCAAAA0fG5",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$get_bounds(NodePath const *param0, Thread *param1)",
                    "c_type": "PointerTo< BoundingVolume > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_bounds_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f626f756e647328706172616d3129293b",
                    "cpp_ref": "PointerTo< BoundingVolume > NodePath::get_bounds(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_bounds",
                    "extern": [
                        "PointerTo< BoundingVolume > *",
                        "NodePath$_$get_bounds(NodePath const *param0, Thread *param1)"
                    ],
                    "fn": "get_bounds",
                    "indexed": "NodePath$658$get_bounds",
                    "mangled": "_inCAAAAfllh",
                    "ot": "PointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_bounds(NodePath const *param0)",
                    "c_type": "PointerTo< BoundingVolume > *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_bounds_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f626f756e64732829293b",
                    "cpp_ref": "PointerTo< BoundingVolume > NodePath::get_bounds(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_bounds",
                    "extern": [
                        "PointerTo< BoundingVolume > *",
                        "NodePath$_$get_bounds(NodePath const *param0)"
                    ],
                    "fn": "get_bounds",
                    "indexed": "NodePath$659$get_bounds",
                    "mangled": "_inCAAAApOSR",
                    "ot": "PointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$force_recompute_bounds(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_force_recompute_bounds_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e666f7263655f7265636f6d707574655f626f756e647328293b",
                    "cpp_ref": "void NodePath::force_recompute_bounds(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$force_recompute_bounds",
                    "extern": [
                        "void",
                        "NodePath$_$force_recompute_bounds(NodePath *param0)"
                    ],
                    "fn": "force_recompute_bounds",
                    "indexed": "NodePath$660$force_recompute_bounds",
                    "mangled": "_inCAAAAtE3U",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "std::ostream *"
                    ],
                    "c_ref": "NodePath$_$write_bounds(NodePath const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_write_bounds_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f626f756e6473282a706172616d31293b",
                    "cpp_ref": "void NodePath::write_bounds(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$write_bounds",
                    "extern": [
                        "void",
                        "NodePath$_$write_bounds(NodePath const *param0, std::ostream *param1)"
                    ],
                    "fn": "write_bounds",
                    "indexed": "NodePath$661$write_bounds",
                    "mangled": "_inCAAAAbtvv",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "min_point",
                        "max_point",
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "LPoint3 &min_point",
                        "LPoint3 &max_point",
                        "NodePath const &other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "LPoint3&",
                        "LPoint3&",
                        "NodePath const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "LPoint3 *",
                        "LPoint3 *",
                        "NodePath const *",
                        "Thread *"
                    ],
                    "c_ref": "NodePath$_$calc_tight_bounds(NodePath const *param0, LPoint3 *param1, LPoint3 *param2, NodePath const *param3, Thread *param4)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_calc_tight_bounds_B_ppppp",
                    "cni_args": "ppppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e63616c635f74696768745f626f756e6473282a706172616d312c202a706172616d322c202a706172616d332c20706172616d34293b",
                    "cpp_ref": "bool NodePath::calc_tight_bounds(LPoint3 &min_point, LPoint3 &max_point, NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$calc_tight_bounds",
                    "extern": [
                        "bool",
                        "NodePath$_$calc_tight_bounds(NodePath const *param0, LPoint3 *param1, LPoint3 *param2, NodePath const *param3, Thread *param4)"
                    ],
                    "fn": "calc_tight_bounds",
                    "indexed": "NodePath$662$calc_tight_bounds",
                    "mangled": "_inCAAAA1zdW",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 3,
                    "argn": [
                        "min_point",
                        "max_point",
                        "other"
                    ],
                    "args": [
                        "LPoint3 &min_point",
                        "LPoint3 &max_point",
                        "NodePath const &other"
                    ],
                    "argt": [
                        "LPoint3&",
                        "LPoint3&",
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "LPoint3 *",
                        "LPoint3 *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$calc_tight_bounds(NodePath const *param0, LPoint3 *param1, LPoint3 *param2, NodePath const *param3)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_calc_tight_bounds_B_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e63616c635f74696768745f626f756e6473282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "bool NodePath::calc_tight_bounds(LPoint3 &min_point, LPoint3 &max_point, NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$calc_tight_bounds",
                    "extern": [
                        "bool",
                        "NodePath$_$calc_tight_bounds(NodePath const *param0, LPoint3 *param1, LPoint3 *param2, NodePath const *param3)"
                    ],
                    "fn": "calc_tight_bounds",
                    "indexed": "NodePath$663$calc_tight_bounds",
                    "mangled": "_inCAAAA4gNv",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "min_point",
                        "max_point"
                    ],
                    "args": [
                        "LPoint3 &min_point",
                        "LPoint3 &max_point"
                    ],
                    "argt": [
                        "LPoint3&",
                        "LPoint3&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "LPoint3 *",
                        "LPoint3 *"
                    ],
                    "c_ref": "NodePath$_$calc_tight_bounds(NodePath const *param0, LPoint3 *param1, LPoint3 *param2)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_calc_tight_bounds_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e63616c635f74696768745f626f756e6473282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "bool NodePath::calc_tight_bounds(LPoint3 &min_point, LPoint3 &max_point, NodePath const &other, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$calc_tight_bounds",
                    "extern": [
                        "bool",
                        "NodePath$_$calc_tight_bounds(NodePath const *param0, LPoint3 *param1, LPoint3 *param2)"
                    ],
                    "fn": "calc_tight_bounds",
                    "indexed": "NodePath$664$calc_tight_bounds",
                    "mangled": "_inCAAAAnuPD",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$flatten_light(NodePath *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_flatten_light_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e666c617474656e5f6c6967687428293b",
                    "cpp_ref": "int NodePath::flatten_light(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$flatten_light",
                    "extern": [
                        "int",
                        "NodePath$_$flatten_light(NodePath *param0)"
                    ],
                    "fn": "flatten_light",
                    "indexed": "NodePath$665$flatten_light",
                    "mangled": "_inCAAAAznLC",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$flatten_medium(NodePath *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_flatten_medium_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e666c617474656e5f6d656469756d28293b",
                    "cpp_ref": "int NodePath::flatten_medium(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$flatten_medium",
                    "extern": [
                        "int",
                        "NodePath$_$flatten_medium(NodePath *param0)"
                    ],
                    "fn": "flatten_medium",
                    "indexed": "NodePath$666$flatten_medium",
                    "mangled": "_inCAAAAqVep",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$flatten_strong(NodePath *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_flatten_strong_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e666c617474656e5f7374726f6e6728293b",
                    "cpp_ref": "int NodePath::flatten_strong(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$flatten_strong",
                    "extern": [
                        "int",
                        "NodePath$_$flatten_strong(NodePath *param0)"
                    ],
                    "fn": "flatten_strong",
                    "indexed": "NodePath$667$flatten_strong",
                    "mangled": "_inCAAAAgdaT",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$apply_texture_colors(NodePath *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_apply_texture_colors_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6170706c795f746578747572655f636f6c6f727328293b",
                    "cpp_ref": "void NodePath::apply_texture_colors(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$apply_texture_colors",
                    "extern": [
                        "void",
                        "NodePath$_$apply_texture_colors(NodePath *param0)"
                    ],
                    "fn": "apply_texture_colors",
                    "indexed": "NodePath$668$apply_texture_colors",
                    "mangled": "_inCAAAA7D5n",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "NodePath$_$clear_model_nodes(NodePath *param0)",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_model_nodes_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636c6561725f6d6f64656c5f6e6f64657328293b",
                    "cpp_ref": "inline int NodePath::clear_model_nodes(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_model_nodes",
                    "extern": [
                        "int",
                        "NodePath$_$clear_model_nodes(NodePath *param0)"
                    ],
                    "fn": "clear_model_nodes",
                    "indexed": "NodePath$669$clear_model_nodes",
                    "mangled": "_inCAAAAhlC6",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "key",
                        "value"
                    ],
                    "args": [
                        "std::string const &key",
                        "std::string const &value"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "char const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$set_tag(NodePath *param0, char const *param1, char const *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_tag_v_pss",
                    "cni_args": "pss",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746167287374643a3a737472696e6728706172616d31292c207374643a3a737472696e6728706172616d3229293b",
                    "cpp_ref": "inline void NodePath::set_tag(std::string const &key, std::string const &value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_tag",
                    "extern": [
                        "void",
                        "NodePath$_$set_tag(NodePath *param0, char const *param1, char const *param2)"
                    ],
                    "fn": "set_tag",
                    "indexed": "NodePath$670$set_tag",
                    "mangled": "_inCAAAAhGOQ",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "key"
                    ],
                    "args": [
                        "std::string const &key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$get_tag(NodePath const *param0, char const *param1)",
                    "c_type": "char const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tag_s_ps",
                    "cni_args": "ps",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f746167287374643a3a737472696e6728706172616d3129293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string NodePath::get_tag(std::string const &key) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tag",
                    "extern": [
                        "char const *",
                        "NodePath$_$get_tag(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "get_tag",
                    "indexed": "NodePath$671$get_tag",
                    "mangled": "_inCAAAAQY2H",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "keys"
                    ],
                    "args": [
                        "vector_string &keys"
                    ],
                    "argt": [
                        "vector_string&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "vector_string *"
                    ],
                    "c_ref": "NodePath$_$get_tag_keys(NodePath const *param0, vector_string *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_tag_keys_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6765745f7461675f6b657973282a706172616d31293b",
                    "cpp_ref": "inline void NodePath::get_tag_keys(vector_string &keys) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_tag_keys",
                    "extern": [
                        "void",
                        "NodePath$_$get_tag_keys(NodePath const *param0, vector_string *param1)"
                    ],
                    "fn": "get_tag_keys",
                    "indexed": "NodePath$672$get_tag_keys",
                    "mangled": "_inCAAAAnHIn",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "key"
                    ],
                    "args": [
                        "std::string const &key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$has_tag(NodePath const *param0, char const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_tag_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f746167287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "inline bool NodePath::has_tag(std::string const &key) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_tag",
                    "extern": [
                        "bool",
                        "NodePath$_$has_tag(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "has_tag",
                    "indexed": "NodePath$673$has_tag",
                    "mangled": "_inCAAAASYDw",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "key"
                    ],
                    "args": [
                        "std::string const &key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$clear_tag(NodePath *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_clear_tag_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f746167287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "inline void NodePath::clear_tag(std::string const &key)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$clear_tag",
                    "extern": [
                        "void",
                        "NodePath$_$clear_tag(NodePath *param0, char const *param1)"
                    ],
                    "fn": "clear_tag",
                    "indexed": "NodePath$674$clear_tag",
                    "mangled": "_inCAAAAXAl5",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "key"
                    ],
                    "args": [
                        "std::string const &key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$get_net_tag(NodePath const *param0, char const *param1)",
                    "c_type": "char const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_net_tag_s_ps",
                    "cni_args": "ps",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f6e65745f746167287374643a3a737472696e6728706172616d3129293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string NodePath::get_net_tag(std::string const &key) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_net_tag",
                    "extern": [
                        "char const *",
                        "NodePath$_$get_net_tag(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "get_net_tag",
                    "indexed": "NodePath$675$get_net_tag",
                    "mangled": "_inCAAAA7R1r",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "key"
                    ],
                    "args": [
                        "std::string const &key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$has_net_tag(NodePath const *param0, char const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_has_net_tag_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f6e65745f746167287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "inline bool NodePath::has_net_tag(std::string const &key) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$has_net_tag",
                    "extern": [
                        "bool",
                        "NodePath$_$has_net_tag(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "has_net_tag",
                    "indexed": "NodePath$676$has_net_tag",
                    "mangled": "_inCAAAAUSCU",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "key"
                    ],
                    "args": [
                        "std::string const &key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$find_net_tag(NodePath const *param0, char const *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_find_net_tag_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e66696e645f6e65745f746167287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "NodePath NodePath::find_net_tag(std::string const &key) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$find_net_tag",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$find_net_tag(NodePath const *param0, char const *param1)"
                    ],
                    "fn": "find_net_tag",
                    "indexed": "NodePath$677$find_net_tag",
                    "mangled": "_inCAAAAwjYk",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$list_tags(NodePath const *param0)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_list_tags_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6973745f7461677328293b",
                    "cpp_ref": "inline void NodePath::list_tags(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$list_tags",
                    "extern": [
                        "void",
                        "NodePath$_$list_tags(NodePath const *param0)"
                    ],
                    "fn": "list_tags",
                    "indexed": "NodePath$678$list_tags",
                    "mangled": "_inCAAAAM5gv",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "char const *"
                    ],
                    "c_ref": "NodePath$_$set_name(NodePath *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_set_name_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6e616d65287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "inline void NodePath::set_name(std::string const &name)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$set_name",
                    "extern": [
                        "void",
                        "NodePath$_$set_name(NodePath *param0, char const *param1)"
                    ],
                    "fn": "set_name",
                    "indexed": "NodePath$679$set_name",
                    "mangled": "_inCAAAABaVw",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$get_name(NodePath const *param0)",
                    "c_type": "char const *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_name_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f6e616d6528293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string NodePath::get_name(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_name",
                    "extern": [
                        "char const *",
                        "NodePath$_$get_name(NodePath const *param0)"
                    ],
                    "fn": "get_name",
                    "indexed": "NodePath$680$get_name",
                    "mangled": "_inCAAAAbkeW",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "filename"
                    ],
                    "args": [
                        "Filename const &filename"
                    ],
                    "argt": [
                        "Filename const&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "Filename const *"
                    ],
                    "c_ref": "NodePath$_$write_bam_file(NodePath const *param0, Filename const *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_write_bam_file_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e77726974655f62616d5f66696c65282a706172616d31293b",
                    "cpp_ref": "bool NodePath::write_bam_file(Filename const &filename) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$write_bam_file",
                    "extern": [
                        "bool",
                        "NodePath$_$write_bam_file(NodePath const *param0, Filename const *param1)"
                    ],
                    "fn": "write_bam_file",
                    "indexed": "NodePath$681$write_bam_file",
                    "mangled": "_inCAAAAlOTE",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "std::ostream *"
                    ],
                    "c_ref": "NodePath$_$write_bam_stream(NodePath const *param0, std::ostream *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_write_bam_stream_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e77726974655f62616d5f73747265616d282a706172616d31293b",
                    "cpp_ref": "bool NodePath::write_bam_stream(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$write_bam_stream",
                    "extern": [
                        "bool",
                        "NodePath$_$write_bam_stream(NodePath const *param0, std::ostream *param1)"
                    ],
                    "fn": "write_bam_stream",
                    "indexed": "NodePath$682$write_bam_stream",
                    "mangled": "_inCAAAAM4M3",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePath const *"
                    ],
                    "c_ref": "NodePath$_$encode_to_bam_stream(NodePath const *param0)",
                    "c_type": "vector_uchar",
                    "cn": "NodePath",
                    "cni": "NodePath_C_encode_to_bam_stream_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e656e636f64655f746f5f62616d5f73747265616d28293b",
                    "cpp_ref": "inline vector_uchar NodePath::encode_to_bam_stream(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$encode_to_bam_stream",
                    "extern": [
                        "vector_uchar",
                        "NodePath$_$encode_to_bam_stream(NodePath const *param0)"
                    ],
                    "fn": "encode_to_bam_stream",
                    "indexed": "NodePath$683$encode_to_bam_stream",
                    "mangled": "_inCAAAAHnyV",
                    "ot": "inline vector_uchar",
                    "rt": "vector_uchar"
                },
                {
                    "argc": 2,
                    "argn": [
                        "data",
                        "writer"
                    ],
                    "args": [
                        "vector_uchar &data",
                        "BamWriter *writer"
                    ],
                    "argt": [
                        "vector_uchar&",
                        "BamWriter*"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "vector_uchar *",
                        "BamWriter *"
                    ],
                    "c_ref": "NodePath$_$encode_to_bam_stream(NodePath const *param0, vector_uchar *param1, BamWriter *param2)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_encode_to_bam_stream_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e656e636f64655f746f5f62616d5f73747265616d282a706172616d312c20706172616d32293b",
                    "cpp_ref": "bool NodePath::encode_to_bam_stream(vector_uchar &data, BamWriter *writer) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$encode_to_bam_stream",
                    "extern": [
                        "bool",
                        "NodePath$_$encode_to_bam_stream(NodePath const *param0, vector_uchar *param1, BamWriter *param2)"
                    ],
                    "fn": "encode_to_bam_stream",
                    "indexed": "NodePath$684$encode_to_bam_stream",
                    "mangled": "_inCAAAApNJt",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "vector_uchar &data"
                    ],
                    "argt": [
                        "vector_uchar&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "vector_uchar *"
                    ],
                    "c_ref": "NodePath$_$encode_to_bam_stream(NodePath const *param0, vector_uchar *param1)",
                    "c_type": "bool",
                    "cn": "NodePath",
                    "cni": "NodePath_C_encode_to_bam_stream_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e656e636f64655f746f5f62616d5f73747265616d282a706172616d31293b",
                    "cpp_ref": "bool NodePath::encode_to_bam_stream(vector_uchar &data, BamWriter *writer) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$encode_to_bam_stream",
                    "extern": [
                        "bool",
                        "NodePath$_$encode_to_bam_stream(NodePath const *param0, vector_uchar *param1)"
                    ],
                    "fn": "encode_to_bam_stream",
                    "indexed": "NodePath$685$encode_to_bam_stream",
                    "mangled": "_inCAAAAiROo",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "data",
                        "reader"
                    ],
                    "args": [
                        "vector_uchar data",
                        "BamReader *reader"
                    ],
                    "argt": [
                        "vector_uchar",
                        "BamReader*"
                    ],
                    "c_argv": [
                        "vector_uchar",
                        "BamReader *"
                    ],
                    "c_ref": "NodePath$_$decode_from_bam_stream(vector_uchar param0, BamReader *param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_decode_from_bam_stream_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468284e6f6465506174683a3a6465636f64655f66726f6d5f62616d5f73747265616d28706172616d302c20706172616d3129293b",
                    "cpp_ref": "static NodePath NodePath::decode_from_bam_stream(vector_uchar data, BamReader *reader)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$decode_from_bam_stream",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$decode_from_bam_stream(vector_uchar param0, BamReader *param1)"
                    ],
                    "fn": "decode_from_bam_stream",
                    "indexed": "NodePath$686$decode_from_bam_stream",
                    "mangled": "_inCAAAAkjek",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "vector_uchar data"
                    ],
                    "argt": [
                        "vector_uchar"
                    ],
                    "c_argv": [
                        "vector_uchar"
                    ],
                    "c_ref": "NodePath$_$decode_from_bam_stream(vector_uchar param0)",
                    "c_type": "NodePath *",
                    "cn": "NodePath",
                    "cni": "NodePath_C_decode_from_bam_stream_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468284e6f6465506174683a3a6465636f64655f66726f6d5f62616d5f73747265616d28706172616d3029293b",
                    "cpp_ref": "static NodePath NodePath::decode_from_bam_stream(vector_uchar data, BamReader *reader)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$decode_from_bam_stream",
                    "extern": [
                        "NodePath *",
                        "NodePath$_$decode_from_bam_stream(vector_uchar param0)"
                    ],
                    "fn": "decode_from_bam_stream",
                    "indexed": "NodePath$687$decode_from_bam_stream",
                    "mangled": "_inCAAAA7uhk",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "NodePath const *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "NodePath$_$write_datagram(NodePath const *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePath::write_datagram(BamWriter *manager, Datagram &dg) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$write_datagram",
                    "extern": [
                        "void",
                        "NodePath$_$write_datagram(NodePath const *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "NodePath$688$write_datagram",
                    "mangled": "_inCAAAATpul",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "scan",
                        "manager"
                    ],
                    "args": [
                        "DatagramIterator &scan",
                        "BamReader *manager"
                    ],
                    "argt": [
                        "DatagramIterator&",
                        "BamReader*"
                    ],
                    "c_argv": [
                        "NodePath *",
                        "DatagramIterator *",
                        "BamReader *"
                    ],
                    "c_ref": "NodePath$_$fillin(NodePath *param0, DatagramIterator *param1, BamReader *param2)",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_fillin_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e66696c6c696e282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePath::fillin(DatagramIterator &scan, BamReader *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePath$_$fillin",
                    "extern": [
                        "void",
                        "NodePath$_$fillin(NodePath *param0, DatagramIterator *param1, BamReader *param2)"
                    ],
                    "fn": "fillin",
                    "indexed": "NodePath$689$fillin",
                    "mangled": "_inCAAAAy3ym",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "NodePath$_$get_class_type()",
                    "c_type": "int",
                    "cn": "NodePath",
                    "cni": "NodePath_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20284e6f6465506174683a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle NodePath::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$get_class_type",
                    "extern": [
                        "int",
                        "NodePath$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "NodePath$690$get_class_type",
                    "mangled": "_inCAAAAt3wh",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "NodePath$_$init_type()",
                    "c_type": "void",
                    "cn": "NodePath",
                    "cni": "NodePath_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "202020204e6f6465506174683a3a696e69745f7479706528293b",
                    "cpp_ref": "static void NodePath::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "NodePath$_$init_type",
                    "extern": [
                        "void",
                        "NodePath$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "NodePath$691$init_type",
                    "mangled": "_inCAAAAS3QA",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "NodePathCollection": {
            "bases": [],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "NodePathCollection$_$NodePathCollection()",
                    "c_type": "NodePathCollection *",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468436f6c6c656374696f6e28293b",
                    "cpp_ref": "NodePathCollection::NodePathCollection(void) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePathCollection$_$NodePathCollection",
                    "extern": [
                        "NodePathCollection *",
                        "NodePathCollection$_$NodePathCollection()"
                    ],
                    "fn": "NodePathCollection",
                    "indexed": "NodePathCollection$1$NodePathCollection",
                    "mangled": "_inCAAAA3iXv",
                    "ot": "",
                    "rt": "NodePathCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "arg0"
                    ],
                    "args": [
                        "NodePathCollection const &"
                    ],
                    "argt": [
                        "NodePathCollection const&"
                    ],
                    "c_argv": [
                        "NodePathCollection const *"
                    ],
                    "c_ref": "NodePathCollection$_$NodePathCollection(NodePathCollection const *param0)",
                    "c_type": "NodePathCollection *",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468436f6c6c656374696f6e282a706172616d30293b",
                    "cpp_ref": "inline NodePathCollection::NodePathCollection(NodePathCollection const &) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "NodePathCollection$_$NodePathCollection",
                    "extern": [
                        "NodePathCollection *",
                        "NodePathCollection$_$NodePathCollection(NodePathCollection const *param0)"
                    ],
                    "fn": "NodePathCollection",
                    "indexed": "NodePathCollection$2$NodePathCollection",
                    "mangled": "_inCAAAA2o9H",
                    "ot": "inline",
                    "rt": "NodePathCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node_path"
                    ],
                    "args": [
                        "NodePath const &node_path"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePathCollection$_$add_path(NodePathCollection *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_add_path_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f70617468282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::add_path(NodePath const &node_path)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$add_path",
                    "extern": [
                        "void",
                        "NodePathCollection$_$add_path(NodePathCollection *param0, NodePath const *param1)"
                    ],
                    "fn": "add_path",
                    "indexed": "NodePathCollection$3$add_path",
                    "mangled": "_inCAAAAoj7i",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node_path"
                    ],
                    "args": [
                        "NodePath const &node_path"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePathCollection$_$remove_path(NodePathCollection *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_remove_path_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e72656d6f76655f70617468282a706172616d31293b",
                    "cpp_ref": "bool NodePathCollection::remove_path(NodePath const &node_path)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$remove_path",
                    "extern": [
                        "bool",
                        "NodePathCollection$_$remove_path(NodePathCollection *param0, NodePath const *param1)"
                    ],
                    "fn": "remove_path",
                    "indexed": "NodePathCollection$4$remove_path",
                    "mangled": "_inCAAAA_4Zw",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePathCollection const &other"
                    ],
                    "argt": [
                        "NodePathCollection const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "NodePathCollection const *"
                    ],
                    "c_ref": "NodePathCollection$_$add_paths_from(NodePathCollection *param0, NodePathCollection const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_add_paths_from_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f70617468735f66726f6d282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::add_paths_from(NodePathCollection const &other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$add_paths_from",
                    "extern": [
                        "void",
                        "NodePathCollection$_$add_paths_from(NodePathCollection *param0, NodePathCollection const *param1)"
                    ],
                    "fn": "add_paths_from",
                    "indexed": "NodePathCollection$5$add_paths_from",
                    "mangled": "_inCAAAAD16c",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePathCollection const &other"
                    ],
                    "argt": [
                        "NodePathCollection const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "NodePathCollection const *"
                    ],
                    "c_ref": "NodePathCollection$_$remove_paths_from(NodePathCollection *param0, NodePathCollection const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_remove_paths_from_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f70617468735f66726f6d282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::remove_paths_from(NodePathCollection const &other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$remove_paths_from",
                    "extern": [
                        "void",
                        "NodePathCollection$_$remove_paths_from(NodePathCollection *param0, NodePathCollection const *param1)"
                    ],
                    "fn": "remove_paths_from",
                    "indexed": "NodePathCollection$6$remove_paths_from",
                    "mangled": "_inCAAAAPgsC",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection *"
                    ],
                    "c_ref": "NodePathCollection$_$remove_duplicate_paths(NodePathCollection *param0)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_remove_duplicate_paths_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f6475706c69636174655f706174687328293b",
                    "cpp_ref": "void NodePathCollection::remove_duplicate_paths(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$remove_duplicate_paths",
                    "extern": [
                        "void",
                        "NodePathCollection$_$remove_duplicate_paths(NodePathCollection *param0)"
                    ],
                    "fn": "remove_duplicate_paths",
                    "indexed": "NodePathCollection$7$remove_duplicate_paths",
                    "mangled": "_inCAAAAfBHO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "path"
                    ],
                    "args": [
                        "NodePath const &path"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePathCollection const *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePathCollection$_$has_path(NodePathCollection const *param0, NodePath const *param1)",
                    "c_type": "bool",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_has_path_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f70617468282a706172616d31293b",
                    "cpp_ref": "bool NodePathCollection::has_path(NodePath const &path) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$has_path",
                    "extern": [
                        "bool",
                        "NodePathCollection$_$has_path(NodePathCollection const *param0, NodePath const *param1)"
                    ],
                    "fn": "has_path",
                    "indexed": "NodePathCollection$8$has_path",
                    "mangled": "_inCAAAAW5qJ",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection *"
                    ],
                    "c_ref": "NodePathCollection$_$clear(NodePathCollection *param0)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_clear_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c65617228293b",
                    "cpp_ref": "void NodePathCollection::clear(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$clear",
                    "extern": [
                        "void",
                        "NodePathCollection$_$clear(NodePathCollection *param0)"
                    ],
                    "fn": "clear",
                    "indexed": "NodePathCollection$9$clear",
                    "mangled": "_inCAAAAOyfl",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "num"
                    ],
                    "args": [
                        "std::size_t num"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "std::size_t"
                    ],
                    "c_ref": "NodePathCollection$_$reserve(NodePathCollection *param0, std::size_t param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_reserve_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7265736572766528706172616d31293b",
                    "cpp_ref": "void NodePathCollection::reserve(std::size_t num)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$reserve",
                    "extern": [
                        "void",
                        "NodePathCollection$_$reserve(NodePathCollection *param0, std::size_t param1)"
                    ],
                    "fn": "reserve",
                    "indexed": "NodePathCollection$10$reserve",
                    "mangled": "_inCAAAAETyp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection const *"
                    ],
                    "c_ref": "NodePathCollection$_$is_empty(NodePathCollection const *param0)",
                    "c_type": "bool",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_is_empty_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f656d70747928293b",
                    "cpp_ref": "bool NodePathCollection::is_empty(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$is_empty",
                    "extern": [
                        "bool",
                        "NodePathCollection$_$is_empty(NodePathCollection const *param0)"
                    ],
                    "fn": "is_empty",
                    "indexed": "NodePathCollection$11$is_empty",
                    "mangled": "_inCAAAAYTzI",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection const *"
                    ],
                    "c_ref": "NodePathCollection$_$get_num_paths(NodePathCollection const *param0)",
                    "c_type": "int",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_get_num_paths_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f706174687328293b",
                    "cpp_ref": "int NodePathCollection::get_num_paths(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$get_num_paths",
                    "extern": [
                        "int",
                        "NodePathCollection$_$get_num_paths(NodePathCollection const *param0)"
                    ],
                    "fn": "get_num_paths",
                    "indexed": "NodePathCollection$12$get_num_paths",
                    "mangled": "_inCAAAA6KKi",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index"
                    ],
                    "args": [
                        "int index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection const *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$get_path(NodePathCollection const *param0, int param1)",
                    "c_type": "NodePath *",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_get_path_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f7061746828706172616d3129293b",
                    "cpp_ref": "NodePath NodePathCollection::get_path(int index) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$get_path",
                    "extern": [
                        "NodePath *",
                        "NodePathCollection$_$get_path(NodePathCollection const *param0, int param1)"
                    ],
                    "fn": "get_path",
                    "indexed": "NodePathCollection$13$get_path",
                    "mangled": "_inCAAAA02PJ",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection const *"
                    ],
                    "c_ref": "NodePathCollection$_$size(NodePathCollection const *param0)",
                    "c_type": "std::size_t",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_size_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e73697a6528293b",
                    "cpp_ref": "std::size_t NodePathCollection::size(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$size",
                    "extern": [
                        "std::size_t",
                        "NodePathCollection$_$size(NodePathCollection const *param0)"
                    ],
                    "fn": "size",
                    "indexed": "NodePathCollection$14$size",
                    "mangled": "_inCAAAA6EWD",
                    "ot": "std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node_path"
                    ],
                    "args": [
                        "NodePath const &node_path"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePathCollection$_$append(NodePathCollection *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_append_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e617070656e64282a706172616d31293b",
                    "cpp_ref": "inline void NodePathCollection::append(NodePath const &node_path)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$append",
                    "extern": [
                        "void",
                        "NodePathCollection$_$append(NodePathCollection *param0, NodePath const *param1)"
                    ],
                    "fn": "append",
                    "indexed": "NodePathCollection$15$append",
                    "mangled": "_inCAAAA2qmT",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePathCollection const &other"
                    ],
                    "argt": [
                        "NodePathCollection const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "NodePathCollection const *"
                    ],
                    "c_ref": "NodePathCollection$_$extend(NodePathCollection *param0, NodePathCollection const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_extend_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e657874656e64282a706172616d31293b",
                    "cpp_ref": "inline void NodePathCollection::extend(NodePathCollection const &other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$extend",
                    "extern": [
                        "void",
                        "NodePathCollection$_$extend(NodePathCollection *param0, NodePathCollection const *param1)"
                    ],
                    "fn": "extend",
                    "indexed": "NodePathCollection$16$extend",
                    "mangled": "_inCAAAAOz1K",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection const *"
                    ],
                    "c_ref": "NodePathCollection$_$ls(NodePathCollection const *param0)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_ls_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c7328293b",
                    "cpp_ref": "inline void NodePathCollection::ls(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$ls",
                    "extern": [
                        "void",
                        "NodePathCollection$_$ls(NodePathCollection const *param0)"
                    ],
                    "fn": "ls",
                    "indexed": "NodePathCollection$17$ls",
                    "mangled": "_inCAAAA3QA8",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$ls(NodePathCollection const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_ls_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c73282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePathCollection::ls(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$ls",
                    "extern": [
                        "void",
                        "NodePathCollection$_$ls(NodePathCollection const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "ls",
                    "indexed": "NodePathCollection$18$ls",
                    "mangled": "_inCAAAANmWd",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "NodePathCollection const *",
                        "std::ostream *"
                    ],
                    "c_ref": "NodePathCollection$_$ls(NodePathCollection const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_ls_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c73282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::ls(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$ls",
                    "extern": [
                        "void",
                        "NodePathCollection$_$ls(NodePathCollection const *param0, std::ostream *param1)"
                    ],
                    "fn": "ls",
                    "indexed": "NodePathCollection$19$ls",
                    "mangled": "_inCAAAAz69N",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "path"
                    ],
                    "args": [
                        "std::string const &path"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "NodePathCollection const *",
                        "char const *"
                    ],
                    "c_ref": "NodePathCollection$_$find_all_matches(NodePathCollection const *param0, char const *param1)",
                    "c_type": "NodePathCollection *",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_find_all_matches_p_ps",
                    "cni_args": "ps",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f646550617468436f6c6c656374696f6e28282a706172616d30292e66696e645f616c6c5f6d617463686573287374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "NodePathCollection NodePathCollection::find_all_matches(std::string const &path) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$find_all_matches",
                    "extern": [
                        "NodePathCollection *",
                        "NodePathCollection$_$find_all_matches(NodePathCollection const *param0, char const *param1)"
                    ],
                    "fn": "find_all_matches",
                    "indexed": "NodePathCollection$20$find_all_matches",
                    "mangled": "_inCAAAAwBt6",
                    "ot": "NodePathCollection",
                    "rt": "NodePathCollection"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePathCollection$_$reparent_to(NodePathCollection *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_reparent_to_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7265706172656e745f746f282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::reparent_to(NodePath const &other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$reparent_to",
                    "extern": [
                        "void",
                        "NodePathCollection$_$reparent_to(NodePathCollection *param0, NodePath const *param1)"
                    ],
                    "fn": "reparent_to",
                    "indexed": "NodePathCollection$21$reparent_to",
                    "mangled": "_inCAAAAb1jO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "NodePath const &other"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "NodePath const *"
                    ],
                    "c_ref": "NodePathCollection$_$wrt_reparent_to(NodePathCollection *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_wrt_reparent_to_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772745f7265706172656e745f746f282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::wrt_reparent_to(NodePath const &other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$wrt_reparent_to",
                    "extern": [
                        "void",
                        "NodePathCollection$_$wrt_reparent_to(NodePathCollection *param0, NodePath const *param1)"
                    ],
                    "fn": "wrt_reparent_to",
                    "indexed": "NodePathCollection$22$wrt_reparent_to",
                    "mangled": "_inCAAAAqRqE",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection *"
                    ],
                    "c_ref": "NodePathCollection$_$show(NodePathCollection *param0)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_show_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73686f7728293b",
                    "cpp_ref": "void NodePathCollection::show(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$show",
                    "extern": [
                        "void",
                        "NodePathCollection$_$show(NodePathCollection *param0)"
                    ],
                    "fn": "show",
                    "indexed": "NodePathCollection$23$show",
                    "mangled": "_inCAAAA7UQK",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection *"
                    ],
                    "c_ref": "NodePathCollection$_$hide(NodePathCollection *param0)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_hide_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6869646528293b",
                    "cpp_ref": "void NodePathCollection::hide(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$hide",
                    "extern": [
                        "void",
                        "NodePathCollection$_$hide(NodePathCollection *param0)"
                    ],
                    "fn": "hide",
                    "indexed": "NodePathCollection$24$hide",
                    "mangled": "_inCAAAA583n",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection *"
                    ],
                    "c_ref": "NodePathCollection$_$stash(NodePathCollection *param0)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_stash_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e737461736828293b",
                    "cpp_ref": "void NodePathCollection::stash(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$stash",
                    "extern": [
                        "void",
                        "NodePathCollection$_$stash(NodePathCollection *param0)"
                    ],
                    "fn": "stash",
                    "indexed": "NodePathCollection$25$stash",
                    "mangled": "_inCAAAAiPiS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection *"
                    ],
                    "c_ref": "NodePathCollection$_$unstash(NodePathCollection *param0)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_unstash_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e737461736828293b",
                    "cpp_ref": "void NodePathCollection::unstash(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$unstash",
                    "extern": [
                        "void",
                        "NodePathCollection$_$unstash(NodePathCollection *param0)"
                    ],
                    "fn": "unstash",
                    "indexed": "NodePathCollection$26$unstash",
                    "mangled": "_inCAAAALTV5",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection *"
                    ],
                    "c_ref": "NodePathCollection$_$detach(NodePathCollection *param0)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_detach_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e64657461636828293b",
                    "cpp_ref": "void NodePathCollection::detach(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$detach",
                    "extern": [
                        "void",
                        "NodePathCollection$_$detach(NodePathCollection *param0)"
                    ],
                    "fn": "detach",
                    "indexed": "NodePathCollection$27$detach",
                    "mangled": "_inCAAAAMNIX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection const *"
                    ],
                    "c_ref": "NodePathCollection$_$get_collide_mask(NodePathCollection const *param0)",
                    "c_type": "CollideMask *",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_get_collide_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6c6c6964654d61736b28282a706172616d30292e6765745f636f6c6c6964655f6d61736b2829293b",
                    "cpp_ref": "CollideMask NodePathCollection::get_collide_mask(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$get_collide_mask",
                    "extern": [
                        "CollideMask *",
                        "NodePathCollection$_$get_collide_mask(NodePathCollection const *param0)"
                    ],
                    "fn": "get_collide_mask",
                    "indexed": "NodePathCollection$28$get_collide_mask",
                    "mangled": "_inCAAAANmTQ",
                    "ot": "CollideMask",
                    "rt": "CollideMask"
                },
                {
                    "argc": 3,
                    "argn": [
                        "new_mask",
                        "bits_to_change",
                        "node_type"
                    ],
                    "args": [
                        "CollideMask new_mask",
                        "CollideMask bits_to_change",
                        "TypeHandle node_type"
                    ],
                    "argt": [
                        "CollideMask",
                        "CollideMask",
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "CollideMask *",
                        "CollideMask *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_collide_mask(NodePathCollection *param0, CollideMask *param1, CollideMask *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_collide_mask_v_pppi",
                    "cni_args": "pppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6c6964655f6d61736b282a706172616d312c202a706172616d322c205479706548616e646c653a3a66726f6d5f696e64657828706172616d3329293b",
                    "cpp_ref": "void NodePathCollection::set_collide_mask(CollideMask new_mask, CollideMask bits_to_change, TypeHandle node_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_collide_mask",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_collide_mask(NodePathCollection *param0, CollideMask *param1, CollideMask *param2, int param3)"
                    ],
                    "fn": "set_collide_mask",
                    "indexed": "NodePathCollection$29$set_collide_mask",
                    "mangled": "_inCAAAAfRZx",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "new_mask",
                        "bits_to_change"
                    ],
                    "args": [
                        "CollideMask new_mask",
                        "CollideMask bits_to_change"
                    ],
                    "argt": [
                        "CollideMask",
                        "CollideMask"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "CollideMask *",
                        "CollideMask *"
                    ],
                    "c_ref": "NodePathCollection$_$set_collide_mask(NodePathCollection *param0, CollideMask *param1, CollideMask *param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_collide_mask_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6c6964655f6d61736b282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "void NodePathCollection::set_collide_mask(CollideMask new_mask, CollideMask bits_to_change, TypeHandle node_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_collide_mask",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_collide_mask(NodePathCollection *param0, CollideMask *param1, CollideMask *param2)"
                    ],
                    "fn": "set_collide_mask",
                    "indexed": "NodePathCollection$30$set_collide_mask",
                    "mangled": "_inCAAAA9VpQ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "new_mask"
                    ],
                    "args": [
                        "CollideMask new_mask"
                    ],
                    "argt": [
                        "CollideMask"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "CollideMask *"
                    ],
                    "c_ref": "NodePathCollection$_$set_collide_mask(NodePathCollection *param0, CollideMask *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_collide_mask_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6c6964655f6d61736b282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::set_collide_mask(CollideMask new_mask, CollideMask bits_to_change, TypeHandle node_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_collide_mask",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_collide_mask(NodePathCollection *param0, CollideMask *param1)"
                    ],
                    "fn": "set_collide_mask",
                    "indexed": "NodePathCollection$31$set_collide_mask",
                    "mangled": "_inCAAAAbhhb",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "min_point",
                        "max_point"
                    ],
                    "args": [
                        "LPoint3 &min_point",
                        "LPoint3 &max_point"
                    ],
                    "argt": [
                        "LPoint3&",
                        "LPoint3&"
                    ],
                    "c_argv": [
                        "NodePathCollection const *",
                        "LPoint3 *",
                        "LPoint3 *"
                    ],
                    "c_ref": "NodePathCollection$_$calc_tight_bounds(NodePathCollection const *param0, LPoint3 *param1, LPoint3 *param2)",
                    "c_type": "bool",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_calc_tight_bounds_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e63616c635f74696768745f626f756e6473282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "bool NodePathCollection::calc_tight_bounds(LPoint3 &min_point, LPoint3 &max_point) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$calc_tight_bounds",
                    "extern": [
                        "bool",
                        "NodePathCollection$_$calc_tight_bounds(NodePathCollection const *param0, LPoint3 *param1, LPoint3 *param2)"
                    ],
                    "fn": "calc_tight_bounds",
                    "indexed": "NodePathCollection$32$calc_tight_bounds",
                    "mangled": "_inCAAAARpnc",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "tex",
                        "priority"
                    ],
                    "args": [
                        "Texture *tex",
                        "int priority"
                    ],
                    "argt": [
                        "Texture*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "Texture *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_texture(NodePathCollection *param0, Texture *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_texture_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePathCollection::set_texture(Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_texture",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_texture(NodePathCollection *param0, Texture *param1, int param2)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePathCollection$33$set_texture",
                    "mangled": "_inCAAAAuhXW",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "tex"
                    ],
                    "args": [
                        "Texture *tex"
                    ],
                    "argt": [
                        "Texture*"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "Texture *"
                    ],
                    "c_ref": "NodePathCollection$_$set_texture(NodePathCollection *param0, Texture *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_texture_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d31293b",
                    "cpp_ref": "void NodePathCollection::set_texture(Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_texture",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_texture(NodePathCollection *param0, Texture *param1)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePathCollection$34$set_texture",
                    "mangled": "_inCAAAAcvmo",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "stage",
                        "tex",
                        "priority"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "Texture *tex",
                        "int priority"
                    ],
                    "argt": [
                        "TextureStage*",
                        "Texture*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "TextureStage *",
                        "Texture *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_texture(NodePathCollection *param0, TextureStage *param1, Texture *param2, int param3)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_texture_v_pppi",
                    "cni_args": "pppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void NodePathCollection::set_texture(TextureStage *stage, Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_texture",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_texture(NodePathCollection *param0, TextureStage *param1, Texture *param2, int param3)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePathCollection$35$set_texture",
                    "mangled": "_inCAAAAw4DL",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "tex"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "Texture *tex"
                    ],
                    "argt": [
                        "TextureStage*",
                        "Texture*"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "TextureStage *",
                        "Texture *"
                    ],
                    "c_ref": "NodePathCollection$_$set_texture(NodePathCollection *param0, TextureStage *param1, Texture *param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_texture_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePathCollection::set_texture(TextureStage *stage, Texture *tex, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_texture",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_texture(NodePathCollection *param0, TextureStage *param1, Texture *param2)"
                    ],
                    "fn": "set_texture",
                    "indexed": "NodePathCollection$36$set_texture",
                    "mangled": "_inCAAAAfDHK",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stage",
                        "priority"
                    ],
                    "args": [
                        "TextureStage *stage",
                        "int priority"
                    ],
                    "argt": [
                        "TextureStage*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "TextureStage *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_texture_off(NodePathCollection *param0, TextureStage *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_texture_off_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746578747572655f6f666628706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePathCollection::set_texture_off(TextureStage *stage, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_texture_off",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_texture_off(NodePathCollection *param0, TextureStage *param1, int param2)"
                    ],
                    "fn": "set_texture_off",
                    "indexed": "NodePathCollection$37$set_texture_off",
                    "mangled": "_inCAAAAG_3G",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stage"
                    ],
                    "args": [
                        "TextureStage *stage"
                    ],
                    "argt": [
                        "TextureStage*"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "TextureStage *"
                    ],
                    "c_ref": "NodePathCollection$_$set_texture_off(NodePathCollection *param0, TextureStage *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_texture_off_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746578747572655f6f666628706172616d31293b",
                    "cpp_ref": "void NodePathCollection::set_texture_off(TextureStage *stage, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_texture_off",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_texture_off(NodePathCollection *param0, TextureStage *param1)"
                    ],
                    "fn": "set_texture_off",
                    "indexed": "NodePathCollection$38$set_texture_off",
                    "mangled": "_inCAAAAn4Jh",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "priority"
                    ],
                    "args": [
                        "int priority"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_texture_off(NodePathCollection *param0, int param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_texture_off_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746578747572655f6f666628706172616d31293b",
                    "cpp_ref": "void NodePathCollection::set_texture_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_texture_off",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_texture_off(NodePathCollection *param0, int param1)"
                    ],
                    "fn": "set_texture_off",
                    "indexed": "NodePathCollection$39$set_texture_off",
                    "mangled": "_inCAAAAnDJh",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "NodePathCollection *"
                    ],
                    "c_ref": "NodePathCollection$_$set_texture_off(NodePathCollection *param0)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_texture_off_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746578747572655f6f666628293b",
                    "cpp_ref": "void NodePathCollection::set_texture_off(int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_texture_off",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_texture_off(NodePathCollection *param0)"
                    ],
                    "fn": "set_texture_off",
                    "indexed": "NodePathCollection$40$set_texture_off",
                    "mangled": "_inCAAAApfVS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "color",
                        "priority"
                    ],
                    "args": [
                        "LColor const &color",
                        "int priority"
                    ],
                    "argt": [
                        "LColor const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "LColor const *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_color(NodePathCollection *param0, LColor const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f72282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePathCollection::set_color(LColor const &color, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color(NodePathCollection *param0, LColor const *param1, int param2)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePathCollection$41$set_color",
                    "mangled": "_inCAAAAwmua",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "color"
                    ],
                    "args": [
                        "LColor const &color"
                    ],
                    "argt": [
                        "LColor const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "LColor const *"
                    ],
                    "c_ref": "NodePathCollection$_$set_color(NodePathCollection *param0, LColor const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f72282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::set_color(LColor const &color, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color(NodePathCollection *param0, LColor const *param1)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePathCollection$42$set_color",
                    "mangled": "_inCAAAA3g3D",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "r",
                        "g",
                        "b",
                        "a",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b",
                        "PN_stdfloat a",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_color(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_v_pffffi",
                    "cni_args": "pffffi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f7228706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePathCollection::set_color(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePathCollection$43$set_color",
                    "mangled": "_inCAAAAITUT",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "r",
                        "g",
                        "b",
                        "a"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b",
                        "PN_stdfloat a"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePathCollection$_$set_color(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f7228706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePathCollection::set_color(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePathCollection$44$set_color",
                    "mangled": "_inCAAAAJbTl",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "r",
                        "g",
                        "b"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePathCollection$_$set_color(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f7228706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePathCollection::set_color(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_color",
                    "indexed": "NodePathCollection$45$set_color",
                    "mangled": "_inCAAAA1ZcC",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "scale",
                        "priority"
                    ],
                    "args": [
                        "LVecBase4 const &scale",
                        "int priority"
                    ],
                    "argt": [
                        "LVecBase4 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "LVecBase4 const *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_color_scale(NodePathCollection *param0, LVecBase4 const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_scale_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c65282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePathCollection::set_color_scale(LVecBase4 const &scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color_scale(NodePathCollection *param0, LVecBase4 const *param1, int param2)"
                    ],
                    "fn": "set_color_scale",
                    "indexed": "NodePathCollection$46$set_color_scale",
                    "mangled": "_inCAAAAuxPQ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "scale"
                    ],
                    "args": [
                        "LVecBase4 const &scale"
                    ],
                    "argt": [
                        "LVecBase4 const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "LVecBase4 const *"
                    ],
                    "c_ref": "NodePathCollection$_$set_color_scale(NodePathCollection *param0, LVecBase4 const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_scale_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c65282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::set_color_scale(LVecBase4 const &scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color_scale(NodePathCollection *param0, LVecBase4 const *param1)"
                    ],
                    "fn": "set_color_scale",
                    "indexed": "NodePathCollection$47$set_color_scale",
                    "mangled": "_inCAAAAVyZ9",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "r",
                        "g",
                        "b",
                        "a",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b",
                        "PN_stdfloat a",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_scale_v_pffffi",
                    "cni_args": "pffffi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePathCollection::set_color_scale(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)"
                    ],
                    "fn": "set_color_scale",
                    "indexed": "NodePathCollection$48$set_color_scale",
                    "mangled": "_inCAAAA9e_3",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "r",
                        "g",
                        "b",
                        "a"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b",
                        "PN_stdfloat a"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePathCollection$_$set_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_scale_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePathCollection::set_color_scale(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "set_color_scale",
                    "indexed": "NodePathCollection$49$set_color_scale",
                    "mangled": "_inCAAAASlA2",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "r",
                        "g",
                        "b"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePathCollection$_$set_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_color_scale_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePathCollection::set_color_scale(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "set_color_scale",
                    "indexed": "NodePathCollection$50$set_color_scale",
                    "mangled": "_inCAAAAL9t9",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "scale",
                        "priority"
                    ],
                    "args": [
                        "LVecBase4 const &scale",
                        "int priority"
                    ],
                    "argt": [
                        "LVecBase4 const&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "LVecBase4 const *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, LVecBase4 const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_compose_color_scale_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f73655f636f6c6f725f7363616c65282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePathCollection::compose_color_scale(LVecBase4 const &scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$compose_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, LVecBase4 const *param1, int param2)"
                    ],
                    "fn": "compose_color_scale",
                    "indexed": "NodePathCollection$51$compose_color_scale",
                    "mangled": "_inCAAAAcI2r",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "scale"
                    ],
                    "args": [
                        "LVecBase4 const &scale"
                    ],
                    "argt": [
                        "LVecBase4 const&"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "LVecBase4 const *"
                    ],
                    "c_ref": "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, LVecBase4 const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_compose_color_scale_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f73655f636f6c6f725f7363616c65282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::compose_color_scale(LVecBase4 const &scale, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$compose_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, LVecBase4 const *param1)"
                    ],
                    "fn": "compose_color_scale",
                    "indexed": "NodePathCollection$52$compose_color_scale",
                    "mangled": "_inCAAAAiItu",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 5,
                    "argn": [
                        "r",
                        "g",
                        "b",
                        "a",
                        "priority"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b",
                        "PN_stdfloat a",
                        "int priority"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_compose_color_scale_v_pffffi",
                    "cni_args": "pffffi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f73655f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d342c20706172616d35293b",
                    "cpp_ref": "inline void NodePathCollection::compose_color_scale(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$compose_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4, int param5)"
                    ],
                    "fn": "compose_color_scale",
                    "indexed": "NodePathCollection$53$compose_color_scale",
                    "mangled": "_inCAAAApaP_",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 4,
                    "argn": [
                        "r",
                        "g",
                        "b",
                        "a"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b",
                        "PN_stdfloat a"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_compose_color_scale_v_pffff",
                    "cni_args": "pffff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f73655f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "inline void NodePathCollection::compose_color_scale(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$compose_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3, PN_stdfloat param4)"
                    ],
                    "fn": "compose_color_scale",
                    "indexed": "NodePathCollection$54$compose_color_scale",
                    "mangled": "_inCAAAAWpGG",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "r",
                        "g",
                        "b"
                    ],
                    "args": [
                        "PN_stdfloat r",
                        "PN_stdfloat g",
                        "PN_stdfloat b"
                    ],
                    "argt": [
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "PN_stdfloat",
                        "PN_stdfloat",
                        "PN_stdfloat"
                    ],
                    "c_ref": "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_compose_color_scale_v_pfff",
                    "cni_args": "pfff",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f6d706f73655f636f6c6f725f7363616c6528706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "inline void NodePathCollection::compose_color_scale(PN_stdfloat r, PN_stdfloat g, PN_stdfloat b, PN_stdfloat a, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$compose_color_scale",
                    "extern": [
                        "void",
                        "NodePathCollection$_$compose_color_scale(NodePathCollection *param0, PN_stdfloat param1, PN_stdfloat param2, PN_stdfloat param3)"
                    ],
                    "fn": "compose_color_scale",
                    "indexed": "NodePathCollection$55$compose_color_scale",
                    "mangled": "_inCAAAAFyp6",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "attrib",
                        "priority"
                    ],
                    "args": [
                        "RenderAttrib const *attrib",
                        "int priority"
                    ],
                    "argt": [
                        "RenderAttrib const*",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "RenderAttrib const *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$set_attrib(NodePathCollection *param0, RenderAttrib const *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_attrib_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f61747472696228706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePathCollection::set_attrib(RenderAttrib const *attrib, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_attrib",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_attrib(NodePathCollection *param0, RenderAttrib const *param1, int param2)"
                    ],
                    "fn": "set_attrib",
                    "indexed": "NodePathCollection$56$set_attrib",
                    "mangled": "_inCAAAAWzN6",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "attrib"
                    ],
                    "args": [
                        "RenderAttrib const *attrib"
                    ],
                    "argt": [
                        "RenderAttrib const*"
                    ],
                    "c_argv": [
                        "NodePathCollection *",
                        "RenderAttrib const *"
                    ],
                    "c_ref": "NodePathCollection$_$set_attrib(NodePathCollection *param0, RenderAttrib const *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_set_attrib_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f61747472696228706172616d31293b",
                    "cpp_ref": "void NodePathCollection::set_attrib(RenderAttrib const *attrib, int priority)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$set_attrib",
                    "extern": [
                        "void",
                        "NodePathCollection$_$set_attrib(NodePathCollection *param0, RenderAttrib const *param1)"
                    ],
                    "fn": "set_attrib",
                    "indexed": "NodePathCollection$57$set_attrib",
                    "mangled": "_inCAAAAkrMD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "NodePathCollection const *",
                        "std::ostream *"
                    ],
                    "c_ref": "NodePathCollection$_$output(NodePathCollection const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$output",
                    "extern": [
                        "void",
                        "NodePathCollection$_$output(NodePathCollection const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "NodePathCollection$58$output",
                    "mangled": "_inCAAAAGpQO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "NodePathCollection const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "NodePathCollection$_$write(NodePathCollection const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_write_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "void NodePathCollection::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$write",
                    "extern": [
                        "void",
                        "NodePathCollection$_$write(NodePathCollection const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "write",
                    "indexed": "NodePathCollection$59$write",
                    "mangled": "_inCAAAAvAND",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "NodePathCollection const *",
                        "std::ostream *"
                    ],
                    "c_ref": "NodePathCollection$_$write(NodePathCollection const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "NodePathCollection",
                    "cni": "NodePathCollection_C_write_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d31293b",
                    "cpp_ref": "void NodePathCollection::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "NodePathCollection$_$write",
                    "extern": [
                        "void",
                        "NodePathCollection$_$write(NodePathCollection const *param0, std::ostream *param1)"
                    ],
                    "fn": "write",
                    "indexed": "NodePathCollection$60$write",
                    "mangled": "_inCAAAA_djl",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "PandaFramework": {
            "bases": [],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaFramework$_$PandaFramework()",
                    "c_type": "PandaFramework *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772050616e64614672616d65776f726b28293b",
                    "cpp_ref": "PandaFramework::PandaFramework(void)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "PandaFramework$_$PandaFramework",
                    "extern": [
                        "PandaFramework *",
                        "PandaFramework$_$PandaFramework()"
                    ],
                    "fn": "PandaFramework",
                    "indexed": "PandaFramework$1$PandaFramework",
                    "mangled": "_inCAAAAypGM",
                    "ot": "",
                    "rt": "PandaFramework"
                },
                {
                    "argc": 1,
                    "argn": [
                        "arg0"
                    ],
                    "args": [
                        "PandaFramework const &"
                    ],
                    "argt": [
                        "PandaFramework const&"
                    ],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$PandaFramework(PandaFramework const *param0)",
                    "c_type": "PandaFramework *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772050616e64614672616d65776f726b282a706172616d30293b",
                    "cpp_ref": "inline PandaFramework::PandaFramework(PandaFramework const &) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "PandaFramework$_$PandaFramework",
                    "extern": [
                        "PandaFramework *",
                        "PandaFramework$_$PandaFramework(PandaFramework const *param0)"
                    ],
                    "fn": "PandaFramework",
                    "indexed": "PandaFramework$2$PandaFramework",
                    "mangled": "_inCAAAAREj_",
                    "ot": "inline",
                    "rt": "PandaFramework"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$open_framework(PandaFramework *param0)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_open_framework_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f70656e5f6672616d65776f726b28293b",
                    "cpp_ref": "void PandaFramework::open_framework(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$open_framework",
                    "extern": [
                        "void",
                        "PandaFramework$_$open_framework(PandaFramework *param0)"
                    ],
                    "fn": "open_framework",
                    "indexed": "PandaFramework$3$open_framework",
                    "mangled": "_inCAAAAsKrD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$close_framework(PandaFramework *param0)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_close_framework_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6f73655f6672616d65776f726b28293b",
                    "cpp_ref": "void PandaFramework::close_framework(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$close_framework",
                    "extern": [
                        "void",
                        "PandaFramework$_$close_framework(PandaFramework *param0)"
                    ],
                    "fn": "close_framework",
                    "indexed": "PandaFramework$4$close_framework",
                    "mangled": "_inCAAAAKVXv",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$get_default_pipe(PandaFramework *param0)",
                    "c_type": "GraphicsPipe *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_default_pipe_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f64656661756c745f7069706528293b",
                    "cpp_ref": "GraphicsPipe *PandaFramework::get_default_pipe(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_default_pipe",
                    "extern": [
                        "GraphicsPipe *",
                        "PandaFramework$_$get_default_pipe(PandaFramework *param0)"
                    ],
                    "fn": "get_default_pipe",
                    "indexed": "PandaFramework$5$get_default_pipe",
                    "mangled": "_inCAAAAVdkC",
                    "ot": "GraphicsPipe*",
                    "rt": "GraphicsPipe"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$get_graphics_engine(PandaFramework *param0)",
                    "c_type": "GraphicsEngine *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_graphics_engine_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f67726170686963735f656e67696e6528293b",
                    "cpp_ref": "inline GraphicsEngine *PandaFramework::get_graphics_engine(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_graphics_engine",
                    "extern": [
                        "GraphicsEngine *",
                        "PandaFramework$_$get_graphics_engine(PandaFramework *param0)"
                    ],
                    "fn": "get_graphics_engine",
                    "indexed": "PandaFramework$6$get_graphics_engine",
                    "mangled": "_inCAAAAr_4C",
                    "ot": "inline GraphicsEngine*",
                    "rt": "GraphicsEngine"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_data_root(PandaFramework const *param0)",
                    "c_type": "NodePath const *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_data_root_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f646174615f726f6f742829293b",
                    "cpp_ref": "inline NodePath const &PandaFramework::get_data_root(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_data_root",
                    "extern": [
                        "NodePath const *",
                        "PandaFramework$_$get_data_root(PandaFramework const *param0)"
                    ],
                    "fn": "get_data_root",
                    "indexed": "PandaFramework$7$get_data_root",
                    "mangled": "_inCAAAAG8gO",
                    "ot": "inline NodePath const&",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$get_event_handler(PandaFramework *param0)",
                    "c_type": "EventHandler *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_event_handler_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f6576656e745f68616e646c65722829293b",
                    "cpp_ref": "inline EventHandler &PandaFramework::get_event_handler(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_event_handler",
                    "extern": [
                        "EventHandler *",
                        "PandaFramework$_$get_event_handler(PandaFramework *param0)"
                    ],
                    "fn": "get_event_handler",
                    "indexed": "PandaFramework$8$get_event_handler",
                    "mangled": "_inCAAAA1Tbl",
                    "ot": "inline EventHandler&",
                    "rt": "EventHandler"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$get_task_mgr(PandaFramework *param0)",
                    "c_type": "AsyncTaskManager *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_task_mgr_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f7461736b5f6d67722829293b",
                    "cpp_ref": "inline AsyncTaskManager &PandaFramework::get_task_mgr(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_task_mgr",
                    "extern": [
                        "AsyncTaskManager *",
                        "PandaFramework$_$get_task_mgr(PandaFramework *param0)"
                    ],
                    "fn": "get_task_mgr",
                    "indexed": "PandaFramework$9$get_task_mgr",
                    "mangled": "_inCAAAAmkMb",
                    "ot": "inline AsyncTaskManager&",
                    "rt": "AsyncTaskManager"
                },
                {
                    "argc": 1,
                    "argn": [
                        "window"
                    ],
                    "args": [
                        "GraphicsOutput *window"
                    ],
                    "argt": [
                        "GraphicsOutput*"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "GraphicsOutput *"
                    ],
                    "c_ref": "PandaFramework$_$get_mouse(PandaFramework *param0, GraphicsOutput *param1)",
                    "c_type": "NodePath *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_mouse_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f6d6f75736528706172616d3129293b",
                    "cpp_ref": "NodePath PandaFramework::get_mouse(GraphicsOutput *window)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_mouse",
                    "extern": [
                        "NodePath *",
                        "PandaFramework$_$get_mouse(PandaFramework *param0, GraphicsOutput *param1)"
                    ],
                    "fn": "get_mouse",
                    "indexed": "PandaFramework$10$get_mouse",
                    "mangled": "_inCAAAAtlsO",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "window"
                    ],
                    "args": [
                        "GraphicsOutput const *window"
                    ],
                    "argt": [
                        "GraphicsOutput const*"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "GraphicsOutput const *"
                    ],
                    "c_ref": "PandaFramework$_$remove_mouse(PandaFramework *param0, GraphicsOutput const *param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_remove_mouse_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f6d6f75736528706172616d31293b",
                    "cpp_ref": "void PandaFramework::remove_mouse(GraphicsOutput const *window)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$remove_mouse",
                    "extern": [
                        "void",
                        "PandaFramework$_$remove_mouse(PandaFramework *param0, GraphicsOutput const *param1)"
                    ],
                    "fn": "remove_mouse",
                    "indexed": "PandaFramework$11$remove_mouse",
                    "mangled": "_inCAAAAN4hp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "title"
                    ],
                    "args": [
                        "std::string const &title"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "char const *"
                    ],
                    "c_ref": "PandaFramework$_$set_window_title(PandaFramework *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_window_title_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f77696e646f775f7469746c65287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "inline void PandaFramework::set_window_title(std::string const &title)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_window_title",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_window_title(PandaFramework *param0, char const *param1)"
                    ],
                    "fn": "set_window_title",
                    "indexed": "PandaFramework$12$set_window_title",
                    "mangled": "_inCAAAAxJn5",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "props"
                    ],
                    "args": [
                        "WindowProperties &props"
                    ],
                    "argt": [
                        "WindowProperties&"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "WindowProperties *"
                    ],
                    "c_ref": "PandaFramework$_$get_default_window_props(PandaFramework *param0, WindowProperties *param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_default_window_props_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6765745f64656661756c745f77696e646f775f70726f7073282a706172616d31293b",
                    "cpp_ref": "virtual void PandaFramework::get_default_window_props(WindowProperties &props)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_default_window_props",
                    "extern": [
                        "void",
                        "PandaFramework$_$get_default_window_props(PandaFramework *param0, WindowProperties *param1)"
                    ],
                    "fn": "get_default_window_props",
                    "indexed": "PandaFramework$13$get_default_window_props",
                    "mangled": "_inCAAAAEuzA",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$open_window(PandaFramework *param0)",
                    "c_type": "WindowFramework *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_open_window_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f77696e646f7728293b",
                    "cpp_ref": "WindowFramework *PandaFramework::open_window(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$open_window",
                    "extern": [
                        "WindowFramework *",
                        "PandaFramework$_$open_window(PandaFramework *param0)"
                    ],
                    "fn": "open_window",
                    "indexed": "PandaFramework$14$open_window",
                    "mangled": "_inCAAAAu0Rp",
                    "ot": "WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 2,
                    "argn": [
                        "pipe",
                        "gsg"
                    ],
                    "args": [
                        "GraphicsPipe *pipe",
                        "GraphicsStateGuardian *gsg"
                    ],
                    "argt": [
                        "GraphicsPipe*",
                        "GraphicsStateGuardian*"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "GraphicsPipe *",
                        "GraphicsStateGuardian *"
                    ],
                    "c_ref": "PandaFramework$_$open_window(PandaFramework *param0, GraphicsPipe *param1, GraphicsStateGuardian *param2)",
                    "c_type": "WindowFramework *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_open_window_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f77696e646f7728706172616d312c20706172616d32293b",
                    "cpp_ref": "WindowFramework *PandaFramework::open_window(GraphicsPipe *pipe, GraphicsStateGuardian *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$open_window",
                    "extern": [
                        "WindowFramework *",
                        "PandaFramework$_$open_window(PandaFramework *param0, GraphicsPipe *param1, GraphicsStateGuardian *param2)"
                    ],
                    "fn": "open_window",
                    "indexed": "PandaFramework$15$open_window",
                    "mangled": "_inCAAAAaDr7",
                    "ot": "WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pipe"
                    ],
                    "args": [
                        "GraphicsPipe *pipe"
                    ],
                    "argt": [
                        "GraphicsPipe*"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "GraphicsPipe *"
                    ],
                    "c_ref": "PandaFramework$_$open_window(PandaFramework *param0, GraphicsPipe *param1)",
                    "c_type": "WindowFramework *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_open_window_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f77696e646f7728706172616d31293b",
                    "cpp_ref": "WindowFramework *PandaFramework::open_window(GraphicsPipe *pipe, GraphicsStateGuardian *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$open_window",
                    "extern": [
                        "WindowFramework *",
                        "PandaFramework$_$open_window(PandaFramework *param0, GraphicsPipe *param1)"
                    ],
                    "fn": "open_window",
                    "indexed": "PandaFramework$16$open_window",
                    "mangled": "_inCAAAA76RV",
                    "ot": "WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 4,
                    "argn": [
                        "props",
                        "flags",
                        "pipe",
                        "gsg"
                    ],
                    "args": [
                        "WindowProperties const &props",
                        "int flags",
                        "GraphicsPipe *pipe",
                        "GraphicsStateGuardian *gsg"
                    ],
                    "argt": [
                        "WindowProperties const&",
                        "int",
                        "GraphicsPipe*",
                        "GraphicsStateGuardian*"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "WindowProperties const *",
                        "int",
                        "GraphicsPipe *",
                        "GraphicsStateGuardian *"
                    ],
                    "c_ref": "PandaFramework$_$open_window(PandaFramework *param0, WindowProperties const *param1, int param2, GraphicsPipe *param3, GraphicsStateGuardian *param4)",
                    "c_type": "WindowFramework *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_open_window_p_ppipp",
                    "cni_args": "ppipp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f77696e646f77282a706172616d312c20706172616d322c20706172616d332c20706172616d34293b",
                    "cpp_ref": "WindowFramework *PandaFramework::open_window(WindowProperties const &props, int flags, GraphicsPipe *pipe, GraphicsStateGuardian *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$open_window",
                    "extern": [
                        "WindowFramework *",
                        "PandaFramework$_$open_window(PandaFramework *param0, WindowProperties const *param1, int param2, GraphicsPipe *param3, GraphicsStateGuardian *param4)"
                    ],
                    "fn": "open_window",
                    "indexed": "PandaFramework$17$open_window",
                    "mangled": "_inCAAAAppbh",
                    "ot": "WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 3,
                    "argn": [
                        "props",
                        "flags",
                        "pipe"
                    ],
                    "args": [
                        "WindowProperties const &props",
                        "int flags",
                        "GraphicsPipe *pipe"
                    ],
                    "argt": [
                        "WindowProperties const&",
                        "int",
                        "GraphicsPipe*"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "WindowProperties const *",
                        "int",
                        "GraphicsPipe *"
                    ],
                    "c_ref": "PandaFramework$_$open_window(PandaFramework *param0, WindowProperties const *param1, int param2, GraphicsPipe *param3)",
                    "c_type": "WindowFramework *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_open_window_p_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f77696e646f77282a706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "WindowFramework *PandaFramework::open_window(WindowProperties const &props, int flags, GraphicsPipe *pipe, GraphicsStateGuardian *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$open_window",
                    "extern": [
                        "WindowFramework *",
                        "PandaFramework$_$open_window(PandaFramework *param0, WindowProperties const *param1, int param2, GraphicsPipe *param3)"
                    ],
                    "fn": "open_window",
                    "indexed": "PandaFramework$18$open_window",
                    "mangled": "_inCAAAA4lUs",
                    "ot": "WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 2,
                    "argn": [
                        "props",
                        "flags"
                    ],
                    "args": [
                        "WindowProperties const &props",
                        "int flags"
                    ],
                    "argt": [
                        "WindowProperties const&",
                        "int"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "WindowProperties const *",
                        "int"
                    ],
                    "c_ref": "PandaFramework$_$open_window(PandaFramework *param0, WindowProperties const *param1, int param2)",
                    "c_type": "WindowFramework *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_open_window_p_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6f70656e5f77696e646f77282a706172616d312c20706172616d32293b",
                    "cpp_ref": "WindowFramework *PandaFramework::open_window(WindowProperties const &props, int flags, GraphicsPipe *pipe, GraphicsStateGuardian *gsg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$open_window",
                    "extern": [
                        "WindowFramework *",
                        "PandaFramework$_$open_window(PandaFramework *param0, WindowProperties const *param1, int param2)"
                    ],
                    "fn": "open_window",
                    "indexed": "PandaFramework$19$open_window",
                    "mangled": "_inCAAAAXYZk",
                    "ot": "WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_num_windows(PandaFramework const *param0)",
                    "c_type": "int",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_num_windows_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f77696e646f777328293b",
                    "cpp_ref": "inline int PandaFramework::get_num_windows(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_num_windows",
                    "extern": [
                        "int",
                        "PandaFramework$_$get_num_windows(PandaFramework const *param0)"
                    ],
                    "fn": "get_num_windows",
                    "indexed": "PandaFramework$20$get_num_windows",
                    "mangled": "_inCAAAAYcdL",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaFramework const *",
                        "int"
                    ],
                    "c_ref": "PandaFramework$_$get_window(PandaFramework const *param0, int param1)",
                    "c_type": "WindowFramework *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_window_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f77696e646f7728706172616d31293b",
                    "cpp_ref": "inline WindowFramework *PandaFramework::get_window(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_window",
                    "extern": [
                        "WindowFramework *",
                        "PandaFramework$_$get_window(PandaFramework const *param0, int param1)"
                    ],
                    "fn": "get_window",
                    "indexed": "PandaFramework$21$get_window",
                    "mangled": "_inCAAAApaWI",
                    "ot": "inline WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 1,
                    "argn": [
                        "win"
                    ],
                    "args": [
                        "GraphicsOutput const *win"
                    ],
                    "argt": [
                        "GraphicsOutput const*"
                    ],
                    "c_argv": [
                        "PandaFramework const *",
                        "GraphicsOutput const *"
                    ],
                    "c_ref": "PandaFramework$_$find_window(PandaFramework const *param0, GraphicsOutput const *param1)",
                    "c_type": "int",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_find_window_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f77696e646f7728706172616d31293b",
                    "cpp_ref": "int PandaFramework::find_window(GraphicsOutput const *win) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$find_window",
                    "extern": [
                        "int",
                        "PandaFramework$_$find_window(PandaFramework const *param0, GraphicsOutput const *param1)"
                    ],
                    "fn": "find_window",
                    "indexed": "PandaFramework$22$find_window",
                    "mangled": "_inCAAAAQ6X7",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "wf"
                    ],
                    "args": [
                        "WindowFramework const *wf"
                    ],
                    "argt": [
                        "WindowFramework const*"
                    ],
                    "c_argv": [
                        "PandaFramework const *",
                        "WindowFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$find_window(PandaFramework const *param0, WindowFramework const *param1)",
                    "c_type": "int",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_find_window_i_pp_1_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f77696e646f7728706172616d31293b",
                    "cpp_ref": "int PandaFramework::find_window(WindowFramework const *wf) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$find_window",
                    "extern": [
                        "int",
                        "PandaFramework$_$find_window(PandaFramework const *param0, WindowFramework const *param1)"
                    ],
                    "fn": "find_window",
                    "indexed": "PandaFramework$23$find_window",
                    "mangled": "_inCAAAATdOk",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "wf"
                    ],
                    "args": [
                        "WindowFramework *wf"
                    ],
                    "argt": [
                        "WindowFramework*"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "WindowFramework *"
                    ],
                    "c_ref": "PandaFramework$_$close_window(PandaFramework *param0, WindowFramework *param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_close_window_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6f73655f77696e646f7728706172616d31293b",
                    "cpp_ref": "inline void PandaFramework::close_window(WindowFramework *wf)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$close_window",
                    "extern": [
                        "void",
                        "PandaFramework$_$close_window(PandaFramework *param0, WindowFramework *param1)"
                    ],
                    "fn": "close_window",
                    "indexed": "PandaFramework$24$close_window",
                    "mangled": "_inCAAAA49di",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "int"
                    ],
                    "c_ref": "PandaFramework$_$close_window(PandaFramework *param0, int param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_close_window_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6f73655f77696e646f7728706172616d31293b",
                    "cpp_ref": "void PandaFramework::close_window(int n)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$close_window",
                    "extern": [
                        "void",
                        "PandaFramework$_$close_window(PandaFramework *param0, int param1)"
                    ],
                    "fn": "close_window",
                    "indexed": "PandaFramework$25$close_window",
                    "mangled": "_inCAAAAn5NG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$close_all_windows(PandaFramework *param0)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_close_all_windows_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6f73655f616c6c5f77696e646f777328293b",
                    "cpp_ref": "void PandaFramework::close_all_windows(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$close_all_windows",
                    "extern": [
                        "void",
                        "PandaFramework$_$close_all_windows(PandaFramework *param0)"
                    ],
                    "fn": "close_all_windows",
                    "indexed": "PandaFramework$26$close_all_windows",
                    "mangled": "_inCAAAAzjdm",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$all_windows_closed(PandaFramework const *param0)",
                    "c_type": "bool",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_all_windows_closed_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e616c6c5f77696e646f77735f636c6f73656428293b",
                    "cpp_ref": "bool PandaFramework::all_windows_closed(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$all_windows_closed",
                    "extern": [
                        "bool",
                        "PandaFramework$_$all_windows_closed(PandaFramework const *param0)"
                    ],
                    "fn": "all_windows_closed",
                    "indexed": "PandaFramework$27$all_windows_closed",
                    "mangled": "_inCAAAAfE_J",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$get_models(PandaFramework *param0)",
                    "c_type": "NodePath *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_models_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f6d6f64656c732829293b",
                    "cpp_ref": "NodePath &PandaFramework::get_models(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_models",
                    "extern": [
                        "NodePath *",
                        "PandaFramework$_$get_models(PandaFramework *param0)"
                    ],
                    "fn": "get_models",
                    "indexed": "PandaFramework$28$get_models",
                    "mangled": "_inCAAAAaoZj",
                    "ot": "NodePath&",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "PandaFramework const *",
                        "std::ostream *"
                    ],
                    "c_ref": "PandaFramework$_$report_frame_rate(PandaFramework const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_report_frame_rate_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7265706f72745f6672616d655f72617465282a706172616d31293b",
                    "cpp_ref": "void PandaFramework::report_frame_rate(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$report_frame_rate",
                    "extern": [
                        "void",
                        "PandaFramework$_$report_frame_rate(PandaFramework const *param0, std::ostream *param1)"
                    ],
                    "fn": "report_frame_rate",
                    "indexed": "PandaFramework$29$report_frame_rate",
                    "mangled": "_inCAAAA_31j",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$reset_frame_rate(PandaFramework *param0)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_reset_frame_rate_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72657365745f6672616d655f7261746528293b",
                    "cpp_ref": "void PandaFramework::reset_frame_rate(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$reset_frame_rate",
                    "extern": [
                        "void",
                        "PandaFramework$_$reset_frame_rate(PandaFramework *param0)"
                    ],
                    "fn": "reset_frame_rate",
                    "indexed": "PandaFramework$30$reset_frame_rate",
                    "mangled": "_inCAAAA1_hB",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "bool"
                    ],
                    "c_ref": "PandaFramework$_$set_wireframe(PandaFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_wireframe_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f776972656672616d6528706172616d31293b",
                    "cpp_ref": "void PandaFramework::set_wireframe(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_wireframe",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_wireframe(PandaFramework *param0, bool param1)"
                    ],
                    "fn": "set_wireframe",
                    "indexed": "PandaFramework$31$set_wireframe",
                    "mangled": "_inCAAAAVSWK",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "bool"
                    ],
                    "c_ref": "PandaFramework$_$set_texture(PandaFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_texture_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d31293b",
                    "cpp_ref": "void PandaFramework::set_texture(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_texture",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_texture(PandaFramework *param0, bool param1)"
                    ],
                    "fn": "set_texture",
                    "indexed": "PandaFramework$32$set_texture",
                    "mangled": "_inCAAAAXGkU",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "bool"
                    ],
                    "c_ref": "PandaFramework$_$set_two_sided(PandaFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_two_sided_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f74776f5f736964656428706172616d31293b",
                    "cpp_ref": "void PandaFramework::set_two_sided(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_two_sided",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_two_sided(PandaFramework *param0, bool param1)"
                    ],
                    "fn": "set_two_sided",
                    "indexed": "PandaFramework$33$set_two_sided",
                    "mangled": "_inCAAAANbIn",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "bool"
                    ],
                    "c_ref": "PandaFramework$_$set_lighting(PandaFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_lighting_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c69676874696e6728706172616d31293b",
                    "cpp_ref": "void PandaFramework::set_lighting(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_lighting",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_lighting(PandaFramework *param0, bool param1)"
                    ],
                    "fn": "set_lighting",
                    "indexed": "PandaFramework$34$set_lighting",
                    "mangled": "_inCAAAA3uCt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "bool"
                    ],
                    "c_ref": "PandaFramework$_$set_perpixel(PandaFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_perpixel_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706572706978656c28706172616d31293b",
                    "cpp_ref": "void PandaFramework::set_perpixel(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_perpixel",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_perpixel(PandaFramework *param0, bool param1)"
                    ],
                    "fn": "set_perpixel",
                    "indexed": "PandaFramework$35$set_perpixel",
                    "mangled": "_inCAAAAPmkx",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "WindowFramework::BackgroundType type"
                    ],
                    "argt": [
                        "WindowFramework::BackgroundType"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "WindowFramework::BackgroundType"
                    ],
                    "c_ref": "PandaFramework$_$set_background_type(PandaFramework *param0, WindowFramework::BackgroundType param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_background_type_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6261636b67726f756e645f7479706528706172616d31293b",
                    "cpp_ref": "void PandaFramework::set_background_type(WindowFramework::BackgroundType type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_background_type",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_background_type(PandaFramework *param0, WindowFramework::BackgroundType param1)"
                    ],
                    "fn": "set_background_type",
                    "indexed": "PandaFramework$36$set_background_type",
                    "mangled": "_inCAAAA6rP9",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_wireframe(PandaFramework const *param0)",
                    "c_type": "bool",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_wireframe_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f776972656672616d6528293b",
                    "cpp_ref": "inline bool PandaFramework::get_wireframe(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_wireframe",
                    "extern": [
                        "bool",
                        "PandaFramework$_$get_wireframe(PandaFramework const *param0)"
                    ],
                    "fn": "get_wireframe",
                    "indexed": "PandaFramework$37$get_wireframe",
                    "mangled": "_inCAAAAKmiS",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_texture(PandaFramework const *param0)",
                    "c_type": "bool",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_texture_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7465787475726528293b",
                    "cpp_ref": "inline bool PandaFramework::get_texture(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_texture",
                    "extern": [
                        "bool",
                        "PandaFramework$_$get_texture(PandaFramework const *param0)"
                    ],
                    "fn": "get_texture",
                    "indexed": "PandaFramework$38$get_texture",
                    "mangled": "_inCAAAAG6RL",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_two_sided(PandaFramework const *param0)",
                    "c_type": "bool",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_two_sided_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f74776f5f736964656428293b",
                    "cpp_ref": "inline bool PandaFramework::get_two_sided(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_two_sided",
                    "extern": [
                        "bool",
                        "PandaFramework$_$get_two_sided(PandaFramework const *param0)"
                    ],
                    "fn": "get_two_sided",
                    "indexed": "PandaFramework$39$get_two_sided",
                    "mangled": "_inCAAAAR3Vv",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_lighting(PandaFramework const *param0)",
                    "c_type": "bool",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_lighting_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6c69676874696e6728293b",
                    "cpp_ref": "inline bool PandaFramework::get_lighting(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_lighting",
                    "extern": [
                        "bool",
                        "PandaFramework$_$get_lighting(PandaFramework const *param0)"
                    ],
                    "fn": "get_lighting",
                    "indexed": "PandaFramework$40$get_lighting",
                    "mangled": "_inCAAAAAlhc",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_perpixel(PandaFramework const *param0)",
                    "c_type": "bool",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_perpixel_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f706572706978656c28293b",
                    "cpp_ref": "inline bool PandaFramework::get_perpixel(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_perpixel",
                    "extern": [
                        "bool",
                        "PandaFramework$_$get_perpixel(PandaFramework const *param0)"
                    ],
                    "fn": "get_perpixel",
                    "indexed": "PandaFramework$41$get_perpixel",
                    "mangled": "_inCAAAAegFh",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_background_type(PandaFramework const *param0)",
                    "c_type": "WindowFramework::BackgroundType",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_background_type_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6261636b67726f756e645f7479706528293b",
                    "cpp_ref": "inline WindowFramework::BackgroundType PandaFramework::get_background_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_background_type",
                    "extern": [
                        "WindowFramework::BackgroundType",
                        "PandaFramework$_$get_background_type(PandaFramework const *param0)"
                    ],
                    "fn": "get_background_type",
                    "indexed": "PandaFramework$42$get_background_type",
                    "mangled": "_inCAAAACMz0",
                    "ot": "inline WindowFramework::BackgroundType",
                    "rt": "WindowFramework::BackgroundType"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "NodePath node"
                    ],
                    "argt": [
                        "NodePath"
                    ],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "PandaFramework$_$hide_collision_solids(NodePath *param0)",
                    "c_type": "int",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_hide_collision_solids_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2050616e64614672616d65776f726b3a3a686964655f636f6c6c6973696f6e5f736f6c696473282a706172616d30293b",
                    "cpp_ref": "static int PandaFramework::hide_collision_solids(NodePath node)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$hide_collision_solids",
                    "extern": [
                        "int",
                        "PandaFramework$_$hide_collision_solids(NodePath *param0)"
                    ],
                    "fn": "hide_collision_solids",
                    "indexed": "PandaFramework$43$hide_collision_solids",
                    "mangled": "_inCAAAA7ZBj",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "NodePath node"
                    ],
                    "argt": [
                        "NodePath"
                    ],
                    "c_argv": [
                        "NodePath *"
                    ],
                    "c_ref": "PandaFramework$_$show_collision_solids(NodePath *param0)",
                    "c_type": "int",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_show_collision_solids_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2050616e64614672616d65776f726b3a3a73686f775f636f6c6c6973696f6e5f736f6c696473282a706172616d30293b",
                    "cpp_ref": "static int PandaFramework::show_collision_solids(NodePath node)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$show_collision_solids",
                    "extern": [
                        "int",
                        "PandaFramework$_$show_collision_solids(NodePath *param0)"
                    ],
                    "fn": "show_collision_solids",
                    "indexed": "PandaFramework$44$show_collision_solids",
                    "mangled": "_inCAAAAgBrJ",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "NodePath const &node"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "NodePath const *"
                    ],
                    "c_ref": "PandaFramework$_$set_highlight(PandaFramework *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_highlight_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f686967686c69676874282a706172616d31293b",
                    "cpp_ref": "void PandaFramework::set_highlight(NodePath const &node)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_highlight",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_highlight(PandaFramework *param0, NodePath const *param1)"
                    ],
                    "fn": "set_highlight",
                    "indexed": "PandaFramework$45$set_highlight",
                    "mangled": "_inCAAAA7iU_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$clear_highlight(PandaFramework *param0)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_clear_highlight_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f686967686c6967687428293b",
                    "cpp_ref": "void PandaFramework::clear_highlight(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$clear_highlight",
                    "extern": [
                        "void",
                        "PandaFramework$_$clear_highlight(PandaFramework *param0)"
                    ],
                    "fn": "clear_highlight",
                    "indexed": "PandaFramework$46$clear_highlight",
                    "mangled": "_inCAAAAQGIk",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$has_highlight(PandaFramework const *param0)",
                    "c_type": "bool",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_has_highlight_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f686967686c6967687428293b",
                    "cpp_ref": "inline bool PandaFramework::has_highlight(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$has_highlight",
                    "extern": [
                        "bool",
                        "PandaFramework$_$has_highlight(PandaFramework const *param0)"
                    ],
                    "fn": "has_highlight",
                    "indexed": "PandaFramework$47$has_highlight",
                    "mangled": "_inCAAAAo5l3",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_highlight(PandaFramework const *param0)",
                    "c_type": "NodePath const *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_highlight_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202628282a706172616d30292e6765745f686967686c696768742829293b",
                    "cpp_ref": "inline NodePath const &PandaFramework::get_highlight(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_highlight",
                    "extern": [
                        "NodePath const *",
                        "PandaFramework$_$get_highlight(PandaFramework const *param0)"
                    ],
                    "fn": "get_highlight",
                    "indexed": "PandaFramework$48$get_highlight",
                    "mangled": "_inCAAAAAalq",
                    "ot": "inline NodePath const&",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework const *"
                    ],
                    "c_ref": "PandaFramework$_$get_recorder(PandaFramework const *param0)",
                    "c_type": "RecorderController *",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_get_recorder_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7265636f7264657228293b",
                    "cpp_ref": "inline RecorderController *PandaFramework::get_recorder(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$get_recorder",
                    "extern": [
                        "RecorderController *",
                        "PandaFramework$_$get_recorder(PandaFramework const *param0)"
                    ],
                    "fn": "get_recorder",
                    "indexed": "PandaFramework$49$get_recorder",
                    "mangled": "_inCAAAAogWe",
                    "ot": "inline RecorderController*",
                    "rt": "RecorderController"
                },
                {
                    "argc": 1,
                    "argn": [
                        "recorder"
                    ],
                    "args": [
                        "RecorderController *recorder"
                    ],
                    "argt": [
                        "RecorderController*"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "RecorderController *"
                    ],
                    "c_ref": "PandaFramework$_$set_recorder(PandaFramework *param0, RecorderController *param1)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_recorder_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7265636f7264657228706172616d31293b",
                    "cpp_ref": "inline void PandaFramework::set_recorder(RecorderController *recorder)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_recorder",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_recorder(PandaFramework *param0, RecorderController *param1)"
                    ],
                    "fn": "set_recorder",
                    "indexed": "PandaFramework$50$set_recorder",
                    "mangled": "_inCAAAAZ8TF",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$enable_default_keys(PandaFramework *param0)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_enable_default_keys_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e656e61626c655f64656661756c745f6b65797328293b",
                    "cpp_ref": "void PandaFramework::enable_default_keys(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$enable_default_keys",
                    "extern": [
                        "void",
                        "PandaFramework$_$enable_default_keys(PandaFramework *param0)"
                    ],
                    "fn": "enable_default_keys",
                    "indexed": "PandaFramework$51$enable_default_keys",
                    "mangled": "_inCAAAAQdRN",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaFramework *",
                        "Thread *"
                    ],
                    "c_ref": "PandaFramework$_$do_frame(PandaFramework *param0, Thread *param1)",
                    "c_type": "bool",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_do_frame_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e646f5f6672616d6528706172616d31293b",
                    "cpp_ref": "virtual bool PandaFramework::do_frame(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$do_frame",
                    "extern": [
                        "bool",
                        "PandaFramework$_$do_frame(PandaFramework *param0, Thread *param1)"
                    ],
                    "fn": "do_frame",
                    "indexed": "PandaFramework$52$do_frame",
                    "mangled": "_inCAAAAOKab",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$main_loop(PandaFramework *param0)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_main_loop_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d61696e5f6c6f6f7028293b",
                    "cpp_ref": "void PandaFramework::main_loop(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$main_loop",
                    "extern": [
                        "void",
                        "PandaFramework$_$main_loop(PandaFramework *param0)"
                    ],
                    "fn": "main_loop",
                    "indexed": "PandaFramework$53$main_loop",
                    "mangled": "_inCAAAAs7KM",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$set_exit_flag(PandaFramework *param0)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_set_exit_flag_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f657869745f666c616728293b",
                    "cpp_ref": "inline void PandaFramework::set_exit_flag(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$set_exit_flag",
                    "extern": [
                        "void",
                        "PandaFramework$_$set_exit_flag(PandaFramework *param0)"
                    ],
                    "fn": "set_exit_flag",
                    "indexed": "PandaFramework$54$set_exit_flag",
                    "mangled": "_inCAAAA5I9v",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaFramework *"
                    ],
                    "c_ref": "PandaFramework$_$clear_exit_flag(PandaFramework *param0)",
                    "c_type": "void",
                    "cn": "PandaFramework",
                    "cni": "PandaFramework_C_clear_exit_flag_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f657869745f666c616728293b",
                    "cpp_ref": "inline void PandaFramework::clear_exit_flag(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaFramework$_$clear_exit_flag",
                    "extern": [
                        "void",
                        "PandaFramework$_$clear_exit_flag(PandaFramework *param0)"
                    ],
                    "fn": "clear_exit_flag",
                    "indexed": "PandaFramework$55$clear_exit_flag",
                    "mangled": "_inCAAAALDj_",
                    "ot": "inline void",
                    "rt": "void"
                }
            ]
        },
        "PandaNode": {
            "bases": [
                "TypedWritableReferenceCount",
                "Namable",
                "LinkedListNode"
            ],
            "enums": {
                "FancyBits": [
                    [
                        "FB_cull_callback",
                        64
                    ],
                    [
                        "FB_draw_mask",
                        32
                    ],
                    [
                        "FB_effects",
                        4
                    ],
                    [
                        "FB_state",
                        2
                    ],
                    [
                        "FB_tag",
                        16
                    ],
                    [
                        "FB_transform",
                        1
                    ]
                ],
                "UnexpectedChange": [
                    [
                        "UC_children",
                        2
                    ],
                    [
                        "UC_draw_mask",
                        16
                    ],
                    [
                        "UC_parents",
                        1
                    ],
                    [
                        "UC_state",
                        8
                    ],
                    [
                        "UC_transform",
                        4
                    ]
                ]
            },
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$upcast_to_TypedWritableReferenceCount(PandaNode *param0)",
                    "c_type": "TypedWritableReferenceCount *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_upcast_to_TypedWritableReferenceCount_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202854797065645772697461626c655265666572656e6365436f756e74202a29706172616d303b",
                    "cpp_ref": "TypedWritableReferenceCount *PandaNode::upcast_to_TypedWritableReferenceCount(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$upcast_to_TypedWritableReferenceCount",
                    "extern": [
                        "TypedWritableReferenceCount *",
                        "PandaNode$_$upcast_to_TypedWritableReferenceCount(PandaNode *param0)"
                    ],
                    "fn": "upcast_to_TypedWritableReferenceCount",
                    "indexed": "PandaNode$1$upcast_to_TypedWritableReferenceCount",
                    "mangled": "_inCAAAALhJp",
                    "ot": "TypedWritableReferenceCount*",
                    "rt": "TypedWritableReferenceCount"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$upcast_to_Namable(PandaNode *param0)",
                    "c_type": "Namable *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_upcast_to_Namable_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20284e616d61626c65202a29706172616d303b",
                    "cpp_ref": "Namable *PandaNode::upcast_to_Namable(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$upcast_to_Namable",
                    "extern": [
                        "Namable *",
                        "PandaNode$_$upcast_to_Namable(PandaNode *param0)"
                    ],
                    "fn": "upcast_to_Namable",
                    "indexed": "PandaNode$2$upcast_to_Namable",
                    "mangled": "_inCAAAAjprb",
                    "ot": "Namable*",
                    "rt": "Namable"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$upcast_to_LinkedListNode(PandaNode *param0)",
                    "c_type": "LinkedListNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_upcast_to_LinkedListNode_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20284c696e6b65644c6973744e6f6465202a29706172616d303b",
                    "cpp_ref": "LinkedListNode *PandaNode::upcast_to_LinkedListNode(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$upcast_to_LinkedListNode",
                    "extern": [
                        "LinkedListNode *",
                        "PandaNode$_$upcast_to_LinkedListNode(PandaNode *param0)"
                    ],
                    "fn": "upcast_to_LinkedListNode",
                    "indexed": "PandaNode$3$upcast_to_LinkedListNode",
                    "mangled": "_inCAAAAX_n6",
                    "ot": "LinkedListNode*",
                    "rt": "LinkedListNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "name"
                    ],
                    "args": [
                        "std::string const &name"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *"
                    ],
                    "c_ref": "PandaNode$_$PandaNode(char const *param0)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_ctor_p_s",
                    "cni_args": "s",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772050616e64614e6f6465287374643a3a737472696e6728706172616d3029293b",
                    "cpp_ref": "explicit PandaNode::PandaNode(std::string const &name)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "PandaNode$_$PandaNode",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$PandaNode(char const *param0)"
                    ],
                    "fn": "PandaNode",
                    "indexed": "PandaNode$4$PandaNode",
                    "mangled": "_inCAAAAwvAS",
                    "ot": "explicit",
                    "rt": "PandaNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "PandaNode *other"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$combine_with(PandaNode *param0, PandaNode *param1)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_combine_with_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d62696e655f7769746828706172616d31293b",
                    "cpp_ref": "virtual PandaNode *PandaNode::combine_with(PandaNode *other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$combine_with",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$combine_with(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "combine_with",
                    "indexed": "PandaNode$5$combine_with",
                    "mangled": "_inCAAAAozEb",
                    "ot": "virtual PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$dupe_for_flatten(PandaNode const *param0)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_dupe_for_flatten_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e647570655f666f725f666c617474656e28293b",
                    "cpp_ref": "virtual PandaNode *PandaNode::dupe_for_flatten(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$dupe_for_flatten",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$dupe_for_flatten(PandaNode const *param0)"
                    ],
                    "fn": "dupe_for_flatten",
                    "indexed": "PandaNode$6$dupe_for_flatten",
                    "mangled": "_inCAAAArURW",
                    "ot": "virtual PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$safe_to_flatten(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_safe_to_flatten_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f666c617474656e28293b",
                    "cpp_ref": "virtual bool PandaNode::safe_to_flatten(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$safe_to_flatten",
                    "extern": [
                        "bool",
                        "PandaNode$_$safe_to_flatten(PandaNode const *param0)"
                    ],
                    "fn": "safe_to_flatten",
                    "indexed": "PandaNode$7$safe_to_flatten",
                    "mangled": "_inCAAAAY5FJ",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$safe_to_transform(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_safe_to_transform_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f7472616e73666f726d28293b",
                    "cpp_ref": "virtual bool PandaNode::safe_to_transform(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$safe_to_transform",
                    "extern": [
                        "bool",
                        "PandaNode$_$safe_to_transform(PandaNode const *param0)"
                    ],
                    "fn": "safe_to_transform",
                    "indexed": "PandaNode$8$safe_to_transform",
                    "mangled": "_inCAAAAw5Po",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$safe_to_modify_transform(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_safe_to_modify_transform_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f6d6f646966795f7472616e73666f726d28293b",
                    "cpp_ref": "virtual bool PandaNode::safe_to_modify_transform(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$safe_to_modify_transform",
                    "extern": [
                        "bool",
                        "PandaNode$_$safe_to_modify_transform(PandaNode const *param0)"
                    ],
                    "fn": "safe_to_modify_transform",
                    "indexed": "PandaNode$9$safe_to_modify_transform",
                    "mangled": "_inCAAAAQVqr",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$safe_to_combine(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_safe_to_combine_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f636f6d62696e6528293b",
                    "cpp_ref": "virtual bool PandaNode::safe_to_combine(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$safe_to_combine",
                    "extern": [
                        "bool",
                        "PandaNode$_$safe_to_combine(PandaNode const *param0)"
                    ],
                    "fn": "safe_to_combine",
                    "indexed": "PandaNode$10$safe_to_combine",
                    "mangled": "_inCAAAAGL7H",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$safe_to_combine_children(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_safe_to_combine_children_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f636f6d62696e655f6368696c6472656e28293b",
                    "cpp_ref": "virtual bool PandaNode::safe_to_combine_children(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$safe_to_combine_children",
                    "extern": [
                        "bool",
                        "PandaNode$_$safe_to_combine_children(PandaNode const *param0)"
                    ],
                    "fn": "safe_to_combine_children",
                    "indexed": "PandaNode$11$safe_to_combine_children",
                    "mangled": "_inCAAAAf1Ep",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$safe_to_flatten_below(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_safe_to_flatten_below_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e736166655f746f5f666c617474656e5f62656c6f7728293b",
                    "cpp_ref": "virtual bool PandaNode::safe_to_flatten_below(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$safe_to_flatten_below",
                    "extern": [
                        "bool",
                        "PandaNode$_$safe_to_flatten_below(PandaNode const *param0)"
                    ],
                    "fn": "safe_to_flatten_below",
                    "indexed": "PandaNode$12$safe_to_flatten_below",
                    "mangled": "_inCAAAAcI6y",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$preserve_name(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_preserve_name_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e70726573657276655f6e616d6528293b",
                    "cpp_ref": "virtual bool PandaNode::preserve_name(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$preserve_name",
                    "extern": [
                        "bool",
                        "PandaNode$_$preserve_name(PandaNode const *param0)"
                    ],
                    "fn": "preserve_name",
                    "indexed": "PandaNode$13$preserve_name",
                    "mangled": "_inCAAAAETyN",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_unsafe_to_apply_attribs(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_unsafe_to_apply_attribs_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f756e736166655f746f5f6170706c795f6174747269627328293b",
                    "cpp_ref": "virtual int PandaNode::get_unsafe_to_apply_attribs(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_unsafe_to_apply_attribs",
                    "extern": [
                        "int",
                        "PandaNode$_$get_unsafe_to_apply_attribs(PandaNode const *param0)"
                    ],
                    "fn": "get_unsafe_to_apply_attribs",
                    "indexed": "PandaNode$14$get_unsafe_to_apply_attribs",
                    "mangled": "_inCAAAAweNO",
                    "ot": "virtual int",
                    "rt": "int"
                },
                {
                    "argc": 3,
                    "argn": [
                        "attribs",
                        "attrib_types",
                        "transformer"
                    ],
                    "args": [
                        "AccumulatedAttribs const &attribs",
                        "int attrib_types",
                        "GeomTransformer &transformer"
                    ],
                    "argt": [
                        "AccumulatedAttribs const&",
                        "int",
                        "GeomTransformer&"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "AccumulatedAttribs const *",
                        "int",
                        "GeomTransformer *"
                    ],
                    "c_ref": "PandaNode$_$apply_attribs_to_vertices(PandaNode *param0, AccumulatedAttribs const *param1, int param2, GeomTransformer *param3)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_apply_attribs_to_vertices_v_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6170706c795f617474726962735f746f5f7665727469636573282a706172616d312c20706172616d322c202a706172616d33293b",
                    "cpp_ref": "virtual void PandaNode::apply_attribs_to_vertices(AccumulatedAttribs const &attribs, int attrib_types, GeomTransformer &transformer)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$apply_attribs_to_vertices",
                    "extern": [
                        "void",
                        "PandaNode$_$apply_attribs_to_vertices(PandaNode *param0, AccumulatedAttribs const *param1, int param2, GeomTransformer *param3)"
                    ],
                    "fn": "apply_attribs_to_vertices",
                    "indexed": "PandaNode$15$apply_attribs_to_vertices",
                    "mangled": "_inCAAAAfb0c",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mat"
                    ],
                    "args": [
                        "LMatrix4 const &mat"
                    ],
                    "argt": [
                        "LMatrix4 const&"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "LMatrix4 const *"
                    ],
                    "c_ref": "PandaNode$_$xform(PandaNode *param0, LMatrix4 const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_xform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e78666f726d282a706172616d31293b",
                    "cpp_ref": "virtual void PandaNode::xform(LMatrix4 const &mat)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$xform",
                    "extern": [
                        "void",
                        "PandaNode$_$xform(PandaNode *param0, LMatrix4 const *param1)"
                    ],
                    "fn": "xform",
                    "indexed": "PandaNode$16$xform",
                    "mangled": "_inCAAAAUIkL",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "trav",
                        "data"
                    ],
                    "args": [
                        "CullTraverser *trav",
                        "CullTraverserData &data"
                    ],
                    "argt": [
                        "CullTraverser*",
                        "CullTraverserData&"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "CullTraverser *",
                        "CullTraverserData *"
                    ],
                    "c_ref": "PandaNode$_$cull_callback(PandaNode *param0, CullTraverser *param1, CullTraverserData *param2)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_cull_callback_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e63756c6c5f63616c6c6261636b28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual bool PandaNode::cull_callback(CullTraverser *trav, CullTraverserData &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$cull_callback",
                    "extern": [
                        "bool",
                        "PandaNode$_$cull_callback(PandaNode *param0, CullTraverser *param1, CullTraverserData *param2)"
                    ],
                    "fn": "cull_callback",
                    "indexed": "PandaNode$17$cull_callback",
                    "mangled": "_inCAAAASXUp",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$has_selective_visibility(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_has_selective_visibility_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f73656c6563746976655f7669736962696c69747928293b",
                    "cpp_ref": "virtual bool PandaNode::has_selective_visibility(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$has_selective_visibility",
                    "extern": [
                        "bool",
                        "PandaNode$_$has_selective_visibility(PandaNode const *param0)"
                    ],
                    "fn": "has_selective_visibility",
                    "indexed": "PandaNode$18$has_selective_visibility",
                    "mangled": "_inCAAAAPHE7",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_first_visible_child(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_first_visible_child_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f66697273745f76697369626c655f6368696c6428293b",
                    "cpp_ref": "virtual int PandaNode::get_first_visible_child(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_first_visible_child",
                    "extern": [
                        "int",
                        "PandaNode$_$get_first_visible_child(PandaNode const *param0)"
                    ],
                    "fn": "get_first_visible_child",
                    "indexed": "PandaNode$19$get_first_visible_child",
                    "mangled": "_inCAAAA_u5Z",
                    "ot": "virtual int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$get_next_visible_child(PandaNode const *param0, int param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_next_visible_child_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e6578745f76697369626c655f6368696c6428706172616d31293b",
                    "cpp_ref": "virtual int PandaNode::get_next_visible_child(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_next_visible_child",
                    "extern": [
                        "int",
                        "PandaNode$_$get_next_visible_child(PandaNode const *param0, int param1)"
                    ],
                    "fn": "get_next_visible_child",
                    "indexed": "PandaNode$20$get_next_visible_child",
                    "mangled": "_inCAAAAhzcz",
                    "ot": "virtual int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$has_single_child_visibility(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_has_single_child_visibility_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f73696e676c655f6368696c645f7669736962696c69747928293b",
                    "cpp_ref": "virtual bool PandaNode::has_single_child_visibility(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$has_single_child_visibility",
                    "extern": [
                        "bool",
                        "PandaNode$_$has_single_child_visibility(PandaNode const *param0)"
                    ],
                    "fn": "has_single_child_visibility",
                    "indexed": "PandaNode$21$has_single_child_visibility",
                    "mangled": "_inCAAAARReI",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_visible_child(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_visible_child_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f76697369626c655f6368696c6428293b",
                    "cpp_ref": "virtual int PandaNode::get_visible_child(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_visible_child",
                    "extern": [
                        "int",
                        "PandaNode$_$get_visible_child(PandaNode const *param0)"
                    ],
                    "fn": "get_visible_child",
                    "indexed": "PandaNode$22$get_visible_child",
                    "mangled": "_inCAAAA_B3e",
                    "ot": "virtual int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_renderable(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_renderable_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f72656e64657261626c6528293b",
                    "cpp_ref": "virtual bool PandaNode::is_renderable(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_renderable",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_renderable(PandaNode const *param0)"
                    ],
                    "fn": "is_renderable",
                    "indexed": "PandaNode$23$is_renderable",
                    "mangled": "_inCAAAA1e5j",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "trav",
                        "data"
                    ],
                    "args": [
                        "CullTraverser *trav",
                        "CullTraverserData &data"
                    ],
                    "argt": [
                        "CullTraverser*",
                        "CullTraverserData&"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "CullTraverser *",
                        "CullTraverserData *"
                    ],
                    "c_ref": "PandaNode$_$add_for_draw(PandaNode *param0, CullTraverser *param1, CullTraverserData *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_add_for_draw_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f666f725f6472617728706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void PandaNode::add_for_draw(CullTraverser *trav, CullTraverserData &data)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$add_for_draw",
                    "extern": [
                        "void",
                        "PandaNode$_$add_for_draw(PandaNode *param0, CullTraverser *param1, CullTraverserData *param2)"
                    ],
                    "fn": "add_for_draw",
                    "indexed": "PandaNode$24$add_for_draw",
                    "mangled": "_inCAAAAmPWA",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$make_copy(PandaNode const *param0)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_make_copy_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6d616b655f636f707928293b",
                    "cpp_ref": "virtual PandaNode *PandaNode::make_copy(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$make_copy",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$make_copy(PandaNode const *param0)"
                    ],
                    "fn": "make_copy",
                    "indexed": "PandaNode$25$make_copy",
                    "mangled": "_inCAAAAl3aT",
                    "ot": "virtual PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$copy_subgraph(PandaNode const *param0, Thread *param1)",
                    "c_type": "PointerTo< PandaNode > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_copy_subgraph_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2050616e64614e6f6465203e28282a706172616d30292e636f70795f737562677261706828706172616d3129293b",
                    "cpp_ref": "PointerTo< PandaNode > PandaNode::copy_subgraph(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$copy_subgraph",
                    "extern": [
                        "PointerTo< PandaNode > *",
                        "PandaNode$_$copy_subgraph(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "copy_subgraph",
                    "indexed": "PandaNode$26$copy_subgraph",
                    "mangled": "_inCAAAAcUmi",
                    "ot": "PointerTo< PandaNode >",
                    "rt": "PandaNode"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$copy_subgraph(PandaNode const *param0)",
                    "c_type": "PointerTo< PandaNode > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_copy_subgraph_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2050616e64614e6f6465203e28282a706172616d30292e636f70795f73756267726170682829293b",
                    "cpp_ref": "PointerTo< PandaNode > PandaNode::copy_subgraph(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$copy_subgraph",
                    "extern": [
                        "PointerTo< PandaNode > *",
                        "PandaNode$_$copy_subgraph(PandaNode const *param0)"
                    ],
                    "fn": "copy_subgraph",
                    "indexed": "PandaNode$27$copy_subgraph",
                    "mangled": "_inCAAAAFYnx",
                    "ot": "PointerTo< PandaNode >",
                    "rt": "PandaNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_num_parents(PandaNode const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_num_parents_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f706172656e747328706172616d31293b",
                    "cpp_ref": "inline int PandaNode::get_num_parents(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_num_parents",
                    "extern": [
                        "int",
                        "PandaNode$_$get_num_parents(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_num_parents",
                    "indexed": "PandaNode$28$get_num_parents",
                    "mangled": "_inCAAAAQZtc",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_num_parents(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_num_parents_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f706172656e747328293b",
                    "cpp_ref": "inline int PandaNode::get_num_parents(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_num_parents",
                    "extern": [
                        "int",
                        "PandaNode$_$get_num_parents(PandaNode const *param0)"
                    ],
                    "fn": "get_num_parents",
                    "indexed": "PandaNode$29$get_num_parents",
                    "mangled": "_inCAAAAI9bH",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "n",
                        "current_thread"
                    ],
                    "args": [
                        "int n",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_parent(PandaNode const *param0, int param1, Thread *param2)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_parent_p_pip",
                    "cni_args": "pip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f706172656e7428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline PandaNode *PandaNode::get_parent(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_parent",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$get_parent(PandaNode const *param0, int param1, Thread *param2)"
                    ],
                    "fn": "get_parent",
                    "indexed": "PandaNode$30$get_parent",
                    "mangled": "_inCAAAALi8_",
                    "ot": "inline PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$get_parent(PandaNode const *param0, int param1)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_parent_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f706172656e7428706172616d31293b",
                    "cpp_ref": "inline PandaNode *PandaNode::get_parent(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_parent",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$get_parent(PandaNode const *param0, int param1)"
                    ],
                    "fn": "get_parent",
                    "indexed": "PandaNode$31$get_parent",
                    "mangled": "_inCAAAAh0xF",
                    "ot": "inline PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 2,
                    "argn": [
                        "node",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *node",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$find_parent(PandaNode const *param0, PandaNode *param1, Thread *param2)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_find_parent_i_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f706172656e7428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline int PandaNode::find_parent(PandaNode *node, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$find_parent",
                    "extern": [
                        "int",
                        "PandaNode$_$find_parent(PandaNode const *param0, PandaNode *param1, Thread *param2)"
                    ],
                    "fn": "find_parent",
                    "indexed": "PandaNode$32$find_parent",
                    "mangled": "_inCAAAAJ9Xm",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "PandaNode *node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$find_parent(PandaNode const *param0, PandaNode *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_find_parent_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f706172656e7428706172616d31293b",
                    "cpp_ref": "inline int PandaNode::find_parent(PandaNode *node, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$find_parent",
                    "extern": [
                        "int",
                        "PandaNode$_$find_parent(PandaNode const *param0, PandaNode *param1)"
                    ],
                    "fn": "find_parent",
                    "indexed": "PandaNode$33$find_parent",
                    "mangled": "_inCAAAAMWG_",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_num_children(PandaNode const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_num_children_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f6368696c6472656e28706172616d31293b",
                    "cpp_ref": "inline int PandaNode::get_num_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_num_children",
                    "extern": [
                        "int",
                        "PandaNode$_$get_num_children(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_num_children",
                    "indexed": "PandaNode$34$get_num_children",
                    "mangled": "_inCAAAA_i8R",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_num_children(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_num_children_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f6368696c6472656e28293b",
                    "cpp_ref": "inline int PandaNode::get_num_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_num_children",
                    "extern": [
                        "int",
                        "PandaNode$_$get_num_children(PandaNode const *param0)"
                    ],
                    "fn": "get_num_children",
                    "indexed": "PandaNode$35$get_num_children",
                    "mangled": "_inCAAAA78Bo",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "n",
                        "current_thread"
                    ],
                    "args": [
                        "int n",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_child(PandaNode const *param0, int param1, Thread *param2)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_child_p_pip",
                    "cni_args": "pip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline PandaNode *PandaNode::get_child(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_child",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$get_child(PandaNode const *param0, int param1, Thread *param2)"
                    ],
                    "fn": "get_child",
                    "indexed": "PandaNode$36$get_child",
                    "mangled": "_inCAAAAwRT3",
                    "ot": "inline PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$get_child(PandaNode const *param0, int param1)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_child_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6368696c6428706172616d31293b",
                    "cpp_ref": "inline PandaNode *PandaNode::get_child(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_child",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$get_child(PandaNode const *param0, int param1)"
                    ],
                    "fn": "get_child",
                    "indexed": "PandaNode$37$get_child",
                    "mangled": "_inCAAAAkZg9",
                    "ot": "inline PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 2,
                    "argn": [
                        "n",
                        "current_thread"
                    ],
                    "args": [
                        "int n",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_child_sort(PandaNode const *param0, int param1, Thread *param2)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_child_sort_i_pip",
                    "cni_args": "pip",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6368696c645f736f727428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline int PandaNode::get_child_sort(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_child_sort",
                    "extern": [
                        "int",
                        "PandaNode$_$get_child_sort(PandaNode const *param0, int param1, Thread *param2)"
                    ],
                    "fn": "get_child_sort",
                    "indexed": "PandaNode$38$get_child_sort",
                    "mangled": "_inCAAAAkRF6",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$get_child_sort(PandaNode const *param0, int param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_child_sort_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6368696c645f736f727428706172616d31293b",
                    "cpp_ref": "inline int PandaNode::get_child_sort(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_child_sort",
                    "extern": [
                        "int",
                        "PandaNode$_$get_child_sort(PandaNode const *param0, int param1)"
                    ],
                    "fn": "get_child_sort",
                    "indexed": "PandaNode$39$get_child_sort",
                    "mangled": "_inCAAAAMzeG",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "node",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *node",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$find_child(PandaNode const *param0, PandaNode *param1, Thread *param2)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_find_child_i_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline int PandaNode::find_child(PandaNode *node, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$find_child",
                    "extern": [
                        "int",
                        "PandaNode$_$find_child(PandaNode const *param0, PandaNode *param1, Thread *param2)"
                    ],
                    "fn": "find_child",
                    "indexed": "PandaNode$40$find_child",
                    "mangled": "_inCAAAAkP7k",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "PandaNode *node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$find_child(PandaNode const *param0, PandaNode *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_find_child_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f6368696c6428706172616d31293b",
                    "cpp_ref": "inline int PandaNode::find_child(PandaNode *node, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$find_child",
                    "extern": [
                        "int",
                        "PandaNode$_$find_child(PandaNode const *param0, PandaNode *param1)"
                    ],
                    "fn": "find_child",
                    "indexed": "PandaNode$41$find_child",
                    "mangled": "_inCAAAAKHuN",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$count_num_descendants(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_count_num_descendants_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f756e745f6e756d5f64657363656e64616e747328293b",
                    "cpp_ref": "int PandaNode::count_num_descendants(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$count_num_descendants",
                    "extern": [
                        "int",
                        "PandaNode$_$count_num_descendants(PandaNode const *param0)"
                    ],
                    "fn": "count_num_descendants",
                    "indexed": "PandaNode$42$count_num_descendants",
                    "mangled": "_inCAAAAVcTo",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 3,
                    "argn": [
                        "child_node",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *child_node",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$add_child(PandaNode *param0, PandaNode *param1, int param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_add_child_v_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6368696c6428706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void PandaNode::add_child(PandaNode *child_node, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$add_child",
                    "extern": [
                        "void",
                        "PandaNode$_$add_child(PandaNode *param0, PandaNode *param1, int param2, Thread *param3)"
                    ],
                    "fn": "add_child",
                    "indexed": "PandaNode$43$add_child",
                    "mangled": "_inCAAAA1AGw",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "child_node",
                        "sort"
                    ],
                    "args": [
                        "PandaNode *child_node",
                        "int sort"
                    ],
                    "argt": [
                        "PandaNode*",
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$add_child(PandaNode *param0, PandaNode *param1, int param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_add_child_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::add_child(PandaNode *child_node, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$add_child",
                    "extern": [
                        "void",
                        "PandaNode$_$add_child(PandaNode *param0, PandaNode *param1, int param2)"
                    ],
                    "fn": "add_child",
                    "indexed": "PandaNode$44$add_child",
                    "mangled": "_inCAAAAA9tQ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "child_node"
                    ],
                    "args": [
                        "PandaNode *child_node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$add_child(PandaNode *param0, PandaNode *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_add_child_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f6368696c6428706172616d31293b",
                    "cpp_ref": "void PandaNode::add_child(PandaNode *child_node, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$add_child",
                    "extern": [
                        "void",
                        "PandaNode$_$add_child(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "add_child",
                    "indexed": "PandaNode$45$add_child",
                    "mangled": "_inCAAAA27ri",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "child_node",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *child_node",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$remove_child(PandaNode *param0, PandaNode *param1, Thread *param2)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_remove_child_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e72656d6f76655f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "bool PandaNode::remove_child(PandaNode *child_node, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$remove_child",
                    "extern": [
                        "bool",
                        "PandaNode$_$remove_child(PandaNode *param0, PandaNode *param1, Thread *param2)"
                    ],
                    "fn": "remove_child",
                    "indexed": "PandaNode$46$remove_child",
                    "mangled": "_inCAAAAGA1V",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "child_node"
                    ],
                    "args": [
                        "PandaNode *child_node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$remove_child(PandaNode *param0, PandaNode *param1)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_remove_child_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e72656d6f76655f6368696c6428706172616d31293b",
                    "cpp_ref": "bool PandaNode::remove_child(PandaNode *child_node, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$remove_child",
                    "extern": [
                        "bool",
                        "PandaNode$_$remove_child(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "remove_child",
                    "indexed": "PandaNode$47$remove_child",
                    "mangled": "_inCAAAAzFZb",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "child_index",
                        "current_thread"
                    ],
                    "args": [
                        "int child_index",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$remove_child(PandaNode *param0, int param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_remove_child_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::remove_child(int child_index, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$remove_child",
                    "extern": [
                        "void",
                        "PandaNode$_$remove_child(PandaNode *param0, int param1, Thread *param2)"
                    ],
                    "fn": "remove_child",
                    "indexed": "PandaNode$48$remove_child",
                    "mangled": "_inCAAAAQQCt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "child_index"
                    ],
                    "args": [
                        "int child_index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$remove_child(PandaNode *param0, int param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_remove_child_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f6368696c6428706172616d31293b",
                    "cpp_ref": "void PandaNode::remove_child(int child_index, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$remove_child",
                    "extern": [
                        "void",
                        "PandaNode$_$remove_child(PandaNode *param0, int param1)"
                    ],
                    "fn": "remove_child",
                    "indexed": "PandaNode$49$remove_child",
                    "mangled": "_inCAAAADqN1",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "orig_child",
                        "new_child",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *orig_child",
                        "PandaNode *new_child",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$replace_child(PandaNode *param0, PandaNode *param1, PandaNode *param2, Thread *param3)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_replace_child_B_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7265706c6163655f6368696c6428706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "bool PandaNode::replace_child(PandaNode *orig_child, PandaNode *new_child, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$replace_child",
                    "extern": [
                        "bool",
                        "PandaNode$_$replace_child(PandaNode *param0, PandaNode *param1, PandaNode *param2, Thread *param3)"
                    ],
                    "fn": "replace_child",
                    "indexed": "PandaNode$50$replace_child",
                    "mangled": "_inCAAAAAkgX",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "orig_child",
                        "new_child"
                    ],
                    "args": [
                        "PandaNode *orig_child",
                        "PandaNode *new_child"
                    ],
                    "argt": [
                        "PandaNode*",
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$replace_child(PandaNode *param0, PandaNode *param1, PandaNode *param2)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_replace_child_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7265706c6163655f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "bool PandaNode::replace_child(PandaNode *orig_child, PandaNode *new_child, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$replace_child",
                    "extern": [
                        "bool",
                        "PandaNode$_$replace_child(PandaNode *param0, PandaNode *param1, PandaNode *param2)"
                    ],
                    "fn": "replace_child",
                    "indexed": "PandaNode$51$replace_child",
                    "mangled": "_inCAAAAgW5Y",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "child_node",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *child_node",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$stash_child(PandaNode *param0, PandaNode *param1, Thread *param2)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_stash_child_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e73746173685f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline bool PandaNode::stash_child(PandaNode *child_node, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$stash_child",
                    "extern": [
                        "bool",
                        "PandaNode$_$stash_child(PandaNode *param0, PandaNode *param1, Thread *param2)"
                    ],
                    "fn": "stash_child",
                    "indexed": "PandaNode$52$stash_child",
                    "mangled": "_inCAAAAtzoI",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "child_node"
                    ],
                    "args": [
                        "PandaNode *child_node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$stash_child(PandaNode *param0, PandaNode *param1)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_stash_child_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e73746173685f6368696c6428706172616d31293b",
                    "cpp_ref": "inline bool PandaNode::stash_child(PandaNode *child_node, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$stash_child",
                    "extern": [
                        "bool",
                        "PandaNode$_$stash_child(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "stash_child",
                    "indexed": "PandaNode$53$stash_child",
                    "mangled": "_inCAAAAjC1w",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "child_index",
                        "current_thread"
                    ],
                    "args": [
                        "int child_index",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$stash_child(PandaNode *param0, int param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_stash_child_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73746173685f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::stash_child(int child_index, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$stash_child",
                    "extern": [
                        "void",
                        "PandaNode$_$stash_child(PandaNode *param0, int param1, Thread *param2)"
                    ],
                    "fn": "stash_child",
                    "indexed": "PandaNode$54$stash_child",
                    "mangled": "_inCAAAAVnZH",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "child_index"
                    ],
                    "args": [
                        "int child_index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$stash_child(PandaNode *param0, int param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_stash_child_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73746173685f6368696c6428706172616d31293b",
                    "cpp_ref": "void PandaNode::stash_child(int child_index, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$stash_child",
                    "extern": [
                        "void",
                        "PandaNode$_$stash_child(PandaNode *param0, int param1)"
                    ],
                    "fn": "stash_child",
                    "indexed": "PandaNode$55$stash_child",
                    "mangled": "_inCAAAArWqz",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "child_node",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *child_node",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$unstash_child(PandaNode *param0, PandaNode *param1, Thread *param2)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_unstash_child_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e756e73746173685f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline bool PandaNode::unstash_child(PandaNode *child_node, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$unstash_child",
                    "extern": [
                        "bool",
                        "PandaNode$_$unstash_child(PandaNode *param0, PandaNode *param1, Thread *param2)"
                    ],
                    "fn": "unstash_child",
                    "indexed": "PandaNode$56$unstash_child",
                    "mangled": "_inCAAAAQNEb",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "child_node"
                    ],
                    "args": [
                        "PandaNode *child_node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$unstash_child(PandaNode *param0, PandaNode *param1)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_unstash_child_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e756e73746173685f6368696c6428706172616d31293b",
                    "cpp_ref": "inline bool PandaNode::unstash_child(PandaNode *child_node, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$unstash_child",
                    "extern": [
                        "bool",
                        "PandaNode$_$unstash_child(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "unstash_child",
                    "indexed": "PandaNode$57$unstash_child",
                    "mangled": "_inCAAAAqJGM",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "stashed_index",
                        "current_thread"
                    ],
                    "args": [
                        "int stashed_index",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$unstash_child(PandaNode *param0, int param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_unstash_child_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e73746173685f6368696c6428706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::unstash_child(int stashed_index, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$unstash_child",
                    "extern": [
                        "void",
                        "PandaNode$_$unstash_child(PandaNode *param0, int param1, Thread *param2)"
                    ],
                    "fn": "unstash_child",
                    "indexed": "PandaNode$58$unstash_child",
                    "mangled": "_inCAAAAsIFB",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "stashed_index"
                    ],
                    "args": [
                        "int stashed_index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$unstash_child(PandaNode *param0, int param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_unstash_child_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e756e73746173685f6368696c6428706172616d31293b",
                    "cpp_ref": "void PandaNode::unstash_child(int stashed_index, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$unstash_child",
                    "extern": [
                        "void",
                        "PandaNode$_$unstash_child(PandaNode *param0, int param1)"
                    ],
                    "fn": "unstash_child",
                    "indexed": "PandaNode$59$unstash_child",
                    "mangled": "_inCAAAAeWxF",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_num_stashed(PandaNode const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_num_stashed_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f7374617368656428706172616d31293b",
                    "cpp_ref": "inline int PandaNode::get_num_stashed(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_num_stashed",
                    "extern": [
                        "int",
                        "PandaNode$_$get_num_stashed(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_num_stashed",
                    "indexed": "PandaNode$60$get_num_stashed",
                    "mangled": "_inCAAAAGnOV",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_num_stashed(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_num_stashed_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f7374617368656428293b",
                    "cpp_ref": "inline int PandaNode::get_num_stashed(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_num_stashed",
                    "extern": [
                        "int",
                        "PandaNode$_$get_num_stashed(PandaNode const *param0)"
                    ],
                    "fn": "get_num_stashed",
                    "indexed": "PandaNode$61$get_num_stashed",
                    "mangled": "_inCAAAAOR8_",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_stashed(PandaNode const *param0, Thread *param1)",
                    "c_type": "PandaNode::Stashed *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_stashed_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772050616e64614e6f64653a3a5374617368656428282a706172616d30292e6765745f7374617368656428706172616d3129293b",
                    "cpp_ref": "inline PandaNode::Stashed PandaNode::get_stashed(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_stashed",
                    "extern": [
                        "PandaNode::Stashed *",
                        "PandaNode$_$get_stashed(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_stashed",
                    "indexed": "PandaNode$62$get_stashed",
                    "mangled": "_inCAAAA0EjY",
                    "ot": "inline PandaNode::Stashed",
                    "rt": "PandaNode::Stashed"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_stashed(PandaNode const *param0)",
                    "c_type": "PandaNode::Stashed *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_stashed_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772050616e64614e6f64653a3a5374617368656428282a706172616d30292e6765745f737461736865642829293b",
                    "cpp_ref": "inline PandaNode::Stashed PandaNode::get_stashed(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_stashed",
                    "extern": [
                        "PandaNode::Stashed *",
                        "PandaNode$_$get_stashed(PandaNode const *param0)"
                    ],
                    "fn": "get_stashed",
                    "indexed": "PandaNode$63$get_stashed",
                    "mangled": "_inCAAAATBmD",
                    "ot": "inline PandaNode::Stashed",
                    "rt": "PandaNode::Stashed"
                },
                {
                    "argc": 2,
                    "argn": [
                        "n",
                        "current_thread"
                    ],
                    "args": [
                        "int n",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_stashed(PandaNode const *param0, int param1, Thread *param2)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_stashed_p_pip",
                    "cni_args": "pip",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7374617368656428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline PandaNode *PandaNode::get_stashed(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_stashed",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$get_stashed(PandaNode const *param0, int param1, Thread *param2)"
                    ],
                    "fn": "get_stashed",
                    "indexed": "PandaNode$64$get_stashed",
                    "mangled": "_inCAAAAnMF3",
                    "ot": "inline PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$get_stashed(PandaNode const *param0, int param1)",
                    "c_type": "PandaNode *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_stashed_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7374617368656428706172616d31293b",
                    "cpp_ref": "inline PandaNode *PandaNode::get_stashed(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_stashed",
                    "extern": [
                        "PandaNode *",
                        "PandaNode$_$get_stashed(PandaNode const *param0, int param1)"
                    ],
                    "fn": "get_stashed",
                    "indexed": "PandaNode$65$get_stashed",
                    "mangled": "_inCAAAAk8qw",
                    "ot": "inline PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 2,
                    "argn": [
                        "n",
                        "current_thread"
                    ],
                    "args": [
                        "int n",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_stashed_sort(PandaNode const *param0, int param1, Thread *param2)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_stashed_sort_i_pip",
                    "cni_args": "pip",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f737461736865645f736f727428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline int PandaNode::get_stashed_sort(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_stashed_sort",
                    "extern": [
                        "int",
                        "PandaNode$_$get_stashed_sort(PandaNode const *param0, int param1, Thread *param2)"
                    ],
                    "fn": "get_stashed_sort",
                    "indexed": "PandaNode$66$get_stashed_sort",
                    "mangled": "_inCAAAAdx9j",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$get_stashed_sort(PandaNode const *param0, int param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_stashed_sort_i_pi",
                    "cni_args": "pi",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f737461736865645f736f727428706172616d31293b",
                    "cpp_ref": "inline int PandaNode::get_stashed_sort(int n, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_stashed_sort",
                    "extern": [
                        "int",
                        "PandaNode$_$get_stashed_sort(PandaNode const *param0, int param1)"
                    ],
                    "fn": "get_stashed_sort",
                    "indexed": "PandaNode$67$get_stashed_sort",
                    "mangled": "_inCAAAAE1FX",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "node",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *node",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$find_stashed(PandaNode const *param0, PandaNode *param1, Thread *param2)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_find_stashed_i_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f7374617368656428706172616d312c20706172616d32293b",
                    "cpp_ref": "inline int PandaNode::find_stashed(PandaNode *node, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$find_stashed",
                    "extern": [
                        "int",
                        "PandaNode$_$find_stashed(PandaNode const *param0, PandaNode *param1, Thread *param2)"
                    ],
                    "fn": "find_stashed",
                    "indexed": "PandaNode$68$find_stashed",
                    "mangled": "_inCAAAAlSwr",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "node"
                    ],
                    "args": [
                        "PandaNode *node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$find_stashed(PandaNode const *param0, PandaNode *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_find_stashed_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e66696e645f7374617368656428706172616d31293b",
                    "cpp_ref": "inline int PandaNode::find_stashed(PandaNode *node, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$find_stashed",
                    "extern": [
                        "int",
                        "PandaNode$_$find_stashed(PandaNode const *param0, PandaNode *param1)"
                    ],
                    "fn": "find_stashed",
                    "indexed": "PandaNode$69$find_stashed",
                    "mangled": "_inCAAAAyw9C",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 3,
                    "argn": [
                        "child_node",
                        "sort",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *child_node",
                        "int sort",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$add_stashed(PandaNode *param0, PandaNode *param1, int param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_add_stashed_v_ppip",
                    "cni_args": "ppip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f7374617368656428706172616d312c20706172616d322c20706172616d33293b",
                    "cpp_ref": "void PandaNode::add_stashed(PandaNode *child_node, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$add_stashed",
                    "extern": [
                        "void",
                        "PandaNode$_$add_stashed(PandaNode *param0, PandaNode *param1, int param2, Thread *param3)"
                    ],
                    "fn": "add_stashed",
                    "indexed": "PandaNode$70$add_stashed",
                    "mangled": "_inCAAAAQwdX",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "child_node",
                        "sort"
                    ],
                    "args": [
                        "PandaNode *child_node",
                        "int sort"
                    ],
                    "argt": [
                        "PandaNode*",
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$add_stashed(PandaNode *param0, PandaNode *param1, int param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_add_stashed_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f7374617368656428706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::add_stashed(PandaNode *child_node, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$add_stashed",
                    "extern": [
                        "void",
                        "PandaNode$_$add_stashed(PandaNode *param0, PandaNode *param1, int param2)"
                    ],
                    "fn": "add_stashed",
                    "indexed": "PandaNode$71$add_stashed",
                    "mangled": "_inCAAAAXQ0n",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "child_node"
                    ],
                    "args": [
                        "PandaNode *child_node"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$add_stashed(PandaNode *param0, PandaNode *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_add_stashed_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f7374617368656428706172616d31293b",
                    "cpp_ref": "void PandaNode::add_stashed(PandaNode *child_node, int sort, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$add_stashed",
                    "extern": [
                        "void",
                        "PandaNode$_$add_stashed(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "add_stashed",
                    "indexed": "PandaNode$72$add_stashed",
                    "mangled": "_inCAAAAswLI",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "child_index",
                        "current_thread"
                    ],
                    "args": [
                        "int child_index",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "int",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$remove_stashed(PandaNode *param0, int param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_remove_stashed_v_pip",
                    "cni_args": "pip",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f7374617368656428706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::remove_stashed(int child_index, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$remove_stashed",
                    "extern": [
                        "void",
                        "PandaNode$_$remove_stashed(PandaNode *param0, int param1, Thread *param2)"
                    ],
                    "fn": "remove_stashed",
                    "indexed": "PandaNode$73$remove_stashed",
                    "mangled": "_inCAAAAuXWn",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "child_index"
                    ],
                    "args": [
                        "int child_index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$remove_stashed(PandaNode *param0, int param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_remove_stashed_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f7374617368656428706172616d31293b",
                    "cpp_ref": "void PandaNode::remove_stashed(int child_index, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$remove_stashed",
                    "extern": [
                        "void",
                        "PandaNode$_$remove_stashed(PandaNode *param0, int param1)"
                    ],
                    "fn": "remove_stashed",
                    "indexed": "PandaNode$74$remove_stashed",
                    "mangled": "_inCAAAAZHe7",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$remove_all_children(PandaNode *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_remove_all_children_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f616c6c5f6368696c6472656e28706172616d31293b",
                    "cpp_ref": "void PandaNode::remove_all_children(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$remove_all_children",
                    "extern": [
                        "void",
                        "PandaNode$_$remove_all_children(PandaNode *param0, Thread *param1)"
                    ],
                    "fn": "remove_all_children",
                    "indexed": "PandaNode$75$remove_all_children",
                    "mangled": "_inCAAAAQp5s",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$remove_all_children(PandaNode *param0)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_remove_all_children_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656d6f76655f616c6c5f6368696c6472656e28293b",
                    "cpp_ref": "void PandaNode::remove_all_children(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$remove_all_children",
                    "extern": [
                        "void",
                        "PandaNode$_$remove_all_children(PandaNode *param0)"
                    ],
                    "fn": "remove_all_children",
                    "indexed": "PandaNode$76$remove_all_children",
                    "mangled": "_inCAAAAbyap",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$steal_children(PandaNode *param0, PandaNode *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_steal_children_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e737465616c5f6368696c6472656e28706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::steal_children(PandaNode *other, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$steal_children",
                    "extern": [
                        "void",
                        "PandaNode$_$steal_children(PandaNode *param0, PandaNode *param1, Thread *param2)"
                    ],
                    "fn": "steal_children",
                    "indexed": "PandaNode$77$steal_children",
                    "mangled": "_inCAAAANzAL",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "PandaNode *other"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$steal_children(PandaNode *param0, PandaNode *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_steal_children_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e737465616c5f6368696c6472656e28706172616d31293b",
                    "cpp_ref": "void PandaNode::steal_children(PandaNode *other, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$steal_children",
                    "extern": [
                        "void",
                        "PandaNode$_$steal_children(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "steal_children",
                    "indexed": "PandaNode$78$steal_children",
                    "mangled": "_inCAAAAjgnr",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "other",
                        "current_thread"
                    ],
                    "args": [
                        "PandaNode *other",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "PandaNode*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$copy_children(PandaNode *param0, PandaNode *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_copy_children_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f70795f6368696c6472656e28706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::copy_children(PandaNode *other, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$copy_children",
                    "extern": [
                        "void",
                        "PandaNode$_$copy_children(PandaNode *param0, PandaNode *param1, Thread *param2)"
                    ],
                    "fn": "copy_children",
                    "indexed": "PandaNode$79$copy_children",
                    "mangled": "_inCAAAArnCS",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "PandaNode *other"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$copy_children(PandaNode *param0, PandaNode *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_copy_children_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f70795f6368696c6472656e28706172616d31293b",
                    "cpp_ref": "void PandaNode::copy_children(PandaNode *other, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$copy_children",
                    "extern": [
                        "void",
                        "PandaNode$_$copy_children(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "copy_children",
                    "indexed": "PandaNode$80$copy_children",
                    "mangled": "_inCAAAAhfED",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "attrib",
                        "override"
                    ],
                    "args": [
                        "RenderAttrib const *attrib",
                        "int override"
                    ],
                    "argt": [
                        "RenderAttrib const*",
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "RenderAttrib const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$set_attrib(PandaNode *param0, RenderAttrib const *param1, int param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_attrib_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f61747472696228706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::set_attrib(RenderAttrib const *attrib, int override)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_attrib",
                    "extern": [
                        "void",
                        "PandaNode$_$set_attrib(PandaNode *param0, RenderAttrib const *param1, int param2)"
                    ],
                    "fn": "set_attrib",
                    "indexed": "PandaNode$81$set_attrib",
                    "mangled": "_inCAAAA48Bd",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "attrib"
                    ],
                    "args": [
                        "RenderAttrib const *attrib"
                    ],
                    "argt": [
                        "RenderAttrib const*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "RenderAttrib const *"
                    ],
                    "c_ref": "PandaNode$_$set_attrib(PandaNode *param0, RenderAttrib const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_attrib_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f61747472696228706172616d31293b",
                    "cpp_ref": "void PandaNode::set_attrib(RenderAttrib const *attrib, int override)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_attrib",
                    "extern": [
                        "void",
                        "PandaNode$_$set_attrib(PandaNode *param0, RenderAttrib const *param1)"
                    ],
                    "fn": "set_attrib",
                    "indexed": "PandaNode$82$set_attrib",
                    "mangled": "_inCAAAADD5k",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$get_attrib(PandaNode const *param0, int param1)",
                    "c_type": "ConstPointerTo< RenderAttrib > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_attrib_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e646572417474726962203e28282a706172616d30292e6765745f617474726962285479706548616e646c653a3a66726f6d5f696e64657828706172616d312929293b",
                    "cpp_ref": "inline ConstPointerTo< RenderAttrib > PandaNode::get_attrib(TypeHandle type) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_attrib",
                    "extern": [
                        "ConstPointerTo< RenderAttrib > *",
                        "PandaNode$_$get_attrib(PandaNode const *param0, int param1)"
                    ],
                    "fn": "get_attrib",
                    "indexed": "PandaNode$83$get_attrib",
                    "mangled": "_inCAAAAaDfJ",
                    "ot": "inline ConstPointerTo< RenderAttrib >",
                    "rt": "RenderAttrib"
                },
                {
                    "argc": 1,
                    "argn": [
                        "slot"
                    ],
                    "args": [
                        "int slot"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$get_attrib(PandaNode const *param0, int param1)",
                    "c_type": "ConstPointerTo< RenderAttrib > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_attrib_p_pi_1_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e646572417474726962203e28282a706172616d30292e6765745f61747472696228706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< RenderAttrib > PandaNode::get_attrib(int slot) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_attrib",
                    "extern": [
                        "ConstPointerTo< RenderAttrib > *",
                        "PandaNode$_$get_attrib(PandaNode const *param0, int param1)"
                    ],
                    "fn": "get_attrib",
                    "indexed": "PandaNode$84$get_attrib",
                    "mangled": "_inCAAAAabHO",
                    "ot": "inline ConstPointerTo< RenderAttrib >",
                    "rt": "RenderAttrib"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$has_attrib(PandaNode const *param0, int param1)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_has_attrib_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f617474726962285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline bool PandaNode::has_attrib(TypeHandle type) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$has_attrib",
                    "extern": [
                        "bool",
                        "PandaNode$_$has_attrib(PandaNode const *param0, int param1)"
                    ],
                    "fn": "has_attrib",
                    "indexed": "PandaNode$85$has_attrib",
                    "mangled": "_inCAAAA2W_P",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "slot"
                    ],
                    "args": [
                        "int slot"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$has_attrib(PandaNode const *param0, int param1)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_has_attrib_B_pi_1_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f61747472696228706172616d31293b",
                    "cpp_ref": "inline bool PandaNode::has_attrib(int slot) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$has_attrib",
                    "extern": [
                        "bool",
                        "PandaNode$_$has_attrib(PandaNode const *param0, int param1)"
                    ],
                    "fn": "has_attrib",
                    "indexed": "PandaNode$86$has_attrib",
                    "mangled": "_inCAAAAuInU",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$clear_attrib(PandaNode *param0, int param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_attrib_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f617474726962285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline void PandaNode::clear_attrib(TypeHandle type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_attrib",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_attrib(PandaNode *param0, int param1)"
                    ],
                    "fn": "clear_attrib",
                    "indexed": "PandaNode$87$clear_attrib",
                    "mangled": "_inCAAAADSEu",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "slot"
                    ],
                    "args": [
                        "int slot"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$clear_attrib(PandaNode *param0, int param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_attrib_v_pi_1_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f61747472696228706172616d31293b",
                    "cpp_ref": "void PandaNode::clear_attrib(int slot)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_attrib",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_attrib(PandaNode *param0, int param1)"
                    ],
                    "fn": "clear_attrib",
                    "indexed": "PandaNode$88$clear_attrib",
                    "mangled": "_inCAAAAWqh9",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "effect"
                    ],
                    "args": [
                        "RenderEffect const *effect"
                    ],
                    "argt": [
                        "RenderEffect const*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "RenderEffect const *"
                    ],
                    "c_ref": "PandaNode$_$set_effect(PandaNode *param0, RenderEffect const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_effect_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f65666665637428706172616d31293b",
                    "cpp_ref": "void PandaNode::set_effect(RenderEffect const *effect)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_effect",
                    "extern": [
                        "void",
                        "PandaNode$_$set_effect(PandaNode *param0, RenderEffect const *param1)"
                    ],
                    "fn": "set_effect",
                    "indexed": "PandaNode$89$set_effect",
                    "mangled": "_inCAAAAKWvI",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$get_effect(PandaNode const *param0, int param1)",
                    "c_type": "ConstPointerTo< RenderEffect > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_effect_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e646572456666656374203e28282a706172616d30292e6765745f656666656374285479706548616e646c653a3a66726f6d5f696e64657828706172616d312929293b",
                    "cpp_ref": "inline ConstPointerTo< RenderEffect > PandaNode::get_effect(TypeHandle type) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_effect",
                    "extern": [
                        "ConstPointerTo< RenderEffect > *",
                        "PandaNode$_$get_effect(PandaNode const *param0, int param1)"
                    ],
                    "fn": "get_effect",
                    "indexed": "PandaNode$90$get_effect",
                    "mangled": "_inCAAAA07Hl",
                    "ot": "inline ConstPointerTo< RenderEffect >",
                    "rt": "RenderEffect"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$has_effect(PandaNode const *param0, int param1)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_has_effect_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f656666656374285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline bool PandaNode::has_effect(TypeHandle type) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$has_effect",
                    "extern": [
                        "bool",
                        "PandaNode$_$has_effect(PandaNode const *param0, int param1)"
                    ],
                    "fn": "has_effect",
                    "indexed": "PandaNode$91$has_effect",
                    "mangled": "_inCAAAAI1nr",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "TypeHandle type"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$clear_effect(PandaNode *param0, int param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_effect_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f656666656374285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "void PandaNode::clear_effect(TypeHandle type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_effect",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_effect(PandaNode *param0, int param1)"
                    ],
                    "fn": "clear_effect",
                    "indexed": "PandaNode$92$clear_effect",
                    "mangled": "_inCAAAANUJ2",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "state",
                        "current_thread"
                    ],
                    "args": [
                        "RenderState const *state",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "RenderState const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "RenderState const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$set_state(PandaNode *param0, RenderState const *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_state_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f737461746528706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::set_state(RenderState const *state, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_state",
                    "extern": [
                        "void",
                        "PandaNode$_$set_state(PandaNode *param0, RenderState const *param1, Thread *param2)"
                    ],
                    "fn": "set_state",
                    "indexed": "PandaNode$93$set_state",
                    "mangled": "_inCAAAAemfK",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "state"
                    ],
                    "args": [
                        "RenderState const *state"
                    ],
                    "argt": [
                        "RenderState const*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "RenderState const *"
                    ],
                    "c_ref": "PandaNode$_$set_state(PandaNode *param0, RenderState const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_state_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f737461746528706172616d31293b",
                    "cpp_ref": "void PandaNode::set_state(RenderState const *state, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_state",
                    "extern": [
                        "void",
                        "PandaNode$_$set_state(PandaNode *param0, RenderState const *param1)"
                    ],
                    "fn": "set_state",
                    "indexed": "PandaNode$94$set_state",
                    "mangled": "_inCAAAAGDjV",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_state(PandaNode const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< RenderState > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_state_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e6465725374617465203e28282a706172616d30292e6765745f737461746528706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< RenderState > PandaNode::get_state(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_state",
                    "extern": [
                        "ConstPointerTo< RenderState > *",
                        "PandaNode$_$get_state(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_state",
                    "indexed": "PandaNode$95$get_state",
                    "mangled": "_inCAAAAbxvz",
                    "ot": "inline ConstPointerTo< RenderState >",
                    "rt": "RenderState"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_state(PandaNode const *param0)",
                    "c_type": "ConstPointerTo< RenderState > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_state_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e6465725374617465203e28282a706172616d30292e6765745f73746174652829293b",
                    "cpp_ref": "inline ConstPointerTo< RenderState > PandaNode::get_state(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_state",
                    "extern": [
                        "ConstPointerTo< RenderState > *",
                        "PandaNode$_$get_state(PandaNode const *param0)"
                    ],
                    "fn": "get_state",
                    "indexed": "PandaNode$96$get_state",
                    "mangled": "_inCAAAAJocj",
                    "ot": "inline ConstPointerTo< RenderState >",
                    "rt": "RenderState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$clear_state(PandaNode *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_state_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f737461746528706172616d31293b",
                    "cpp_ref": "inline void PandaNode::clear_state(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_state",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_state(PandaNode *param0, Thread *param1)"
                    ],
                    "fn": "clear_state",
                    "indexed": "PandaNode$97$clear_state",
                    "mangled": "_inCAAAAIX0F",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$clear_state(PandaNode *param0)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_state_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f737461746528293b",
                    "cpp_ref": "inline void PandaNode::clear_state(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_state",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_state(PandaNode *param0)"
                    ],
                    "fn": "clear_state",
                    "indexed": "PandaNode$98$clear_state",
                    "mangled": "_inCAAAAtySF",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "effects",
                        "current_thread"
                    ],
                    "args": [
                        "RenderEffects const *effects",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "RenderEffects const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "RenderEffects const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$set_effects(PandaNode *param0, RenderEffects const *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_effects_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6566666563747328706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::set_effects(RenderEffects const *effects, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_effects",
                    "extern": [
                        "void",
                        "PandaNode$_$set_effects(PandaNode *param0, RenderEffects const *param1, Thread *param2)"
                    ],
                    "fn": "set_effects",
                    "indexed": "PandaNode$99$set_effects",
                    "mangled": "_inCAAAACQ8C",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "effects"
                    ],
                    "args": [
                        "RenderEffects const *effects"
                    ],
                    "argt": [
                        "RenderEffects const*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "RenderEffects const *"
                    ],
                    "c_ref": "PandaNode$_$set_effects(PandaNode *param0, RenderEffects const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_effects_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6566666563747328706172616d31293b",
                    "cpp_ref": "void PandaNode::set_effects(RenderEffects const *effects, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_effects",
                    "extern": [
                        "void",
                        "PandaNode$_$set_effects(PandaNode *param0, RenderEffects const *param1)"
                    ],
                    "fn": "set_effects",
                    "indexed": "PandaNode$100$set_effects",
                    "mangled": "_inCAAAAxlpj",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_effects(PandaNode const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< RenderEffects > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_effects_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e64657245666665637473203e28282a706172616d30292e6765745f6566666563747328706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< RenderEffects > PandaNode::get_effects(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_effects",
                    "extern": [
                        "ConstPointerTo< RenderEffects > *",
                        "PandaNode$_$get_effects(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_effects",
                    "indexed": "PandaNode$101$get_effects",
                    "mangled": "_inCAAAA8_I0",
                    "ot": "inline ConstPointerTo< RenderEffects >",
                    "rt": "RenderEffects"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_effects(PandaNode const *param0)",
                    "c_type": "ConstPointerTo< RenderEffects > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_effects_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e64657245666665637473203e28282a706172616d30292e6765745f656666656374732829293b",
                    "cpp_ref": "inline ConstPointerTo< RenderEffects > PandaNode::get_effects(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_effects",
                    "extern": [
                        "ConstPointerTo< RenderEffects > *",
                        "PandaNode$_$get_effects(PandaNode const *param0)"
                    ],
                    "fn": "get_effects",
                    "indexed": "PandaNode$102$get_effects",
                    "mangled": "_inCAAAA1WLf",
                    "ot": "inline ConstPointerTo< RenderEffects >",
                    "rt": "RenderEffects"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$clear_effects(PandaNode *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_effects_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6566666563747328706172616d31293b",
                    "cpp_ref": "inline void PandaNode::clear_effects(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_effects",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_effects(PandaNode *param0, Thread *param1)"
                    ],
                    "fn": "clear_effects",
                    "indexed": "PandaNode$103$clear_effects",
                    "mangled": "_inCAAAA6KSB",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$clear_effects(PandaNode *param0)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_effects_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f6566666563747328293b",
                    "cpp_ref": "inline void PandaNode::clear_effects(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_effects",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_effects(PandaNode *param0)"
                    ],
                    "fn": "clear_effects",
                    "indexed": "PandaNode$104$clear_effects",
                    "mangled": "_inCAAAA6yPH",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "transform",
                        "current_thread"
                    ],
                    "args": [
                        "TransformState const *transform",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "TransformState const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "TransformState const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$set_transform(PandaNode *param0, TransformState const *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_transform_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73666f726d28706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::set_transform(TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$set_transform(PandaNode *param0, TransformState const *param1, Thread *param2)"
                    ],
                    "fn": "set_transform",
                    "indexed": "PandaNode$105$set_transform",
                    "mangled": "_inCAAAAqB_f",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "transform"
                    ],
                    "args": [
                        "TransformState const *transform"
                    ],
                    "argt": [
                        "TransformState const*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "TransformState const *"
                    ],
                    "c_ref": "PandaNode$_$set_transform(PandaNode *param0, TransformState const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_transform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "void PandaNode::set_transform(TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$set_transform(PandaNode *param0, TransformState const *param1)"
                    ],
                    "fn": "set_transform",
                    "indexed": "PandaNode$106$set_transform",
                    "mangled": "_inCAAAA55Ti",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_transform(PandaNode const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_transform_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f7472616e73666f726d28706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< TransformState > PandaNode::get_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "PandaNode$_$get_transform(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_transform",
                    "indexed": "PandaNode$107$get_transform",
                    "mangled": "_inCAAAAJmGn",
                    "ot": "inline ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_transform(PandaNode const *param0)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_transform_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f7472616e73666f726d2829293b",
                    "cpp_ref": "inline ConstPointerTo< TransformState > PandaNode::get_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "PandaNode$_$get_transform(PandaNode const *param0)"
                    ],
                    "fn": "get_transform",
                    "indexed": "PandaNode$108$get_transform",
                    "mangled": "_inCAAAAydH2",
                    "ot": "inline ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$clear_transform(PandaNode *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_transform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "inline void PandaNode::clear_transform(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_transform(PandaNode *param0, Thread *param1)"
                    ],
                    "fn": "clear_transform",
                    "indexed": "PandaNode$109$clear_transform",
                    "mangled": "_inCAAAAu6N3",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$clear_transform(PandaNode *param0)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_transform_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f7472616e73666f726d28293b",
                    "cpp_ref": "inline void PandaNode::clear_transform(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_transform(PandaNode *param0)"
                    ],
                    "fn": "clear_transform",
                    "indexed": "PandaNode$110$clear_transform",
                    "mangled": "_inCAAAAEjK_",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "transform",
                        "current_thread"
                    ],
                    "args": [
                        "TransformState const *transform",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "TransformState const*",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "TransformState const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$set_prev_transform(PandaNode *param0, TransformState const *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_prev_transform_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f707265765f7472616e73666f726d28706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::set_prev_transform(TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_prev_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$set_prev_transform(PandaNode *param0, TransformState const *param1, Thread *param2)"
                    ],
                    "fn": "set_prev_transform",
                    "indexed": "PandaNode$111$set_prev_transform",
                    "mangled": "_inCAAAAou8E",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "transform"
                    ],
                    "args": [
                        "TransformState const *transform"
                    ],
                    "argt": [
                        "TransformState const*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "TransformState const *"
                    ],
                    "c_ref": "PandaNode$_$set_prev_transform(PandaNode *param0, TransformState const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_prev_transform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f707265765f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "void PandaNode::set_prev_transform(TransformState const *transform, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_prev_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$set_prev_transform(PandaNode *param0, TransformState const *param1)"
                    ],
                    "fn": "set_prev_transform",
                    "indexed": "PandaNode$112$set_prev_transform",
                    "mangled": "_inCAAAA_3nJ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_prev_transform(PandaNode const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_prev_transform_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f707265765f7472616e73666f726d28706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< TransformState > PandaNode::get_prev_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_prev_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "PandaNode$_$get_prev_transform(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_prev_transform",
                    "indexed": "PandaNode$113$get_prev_transform",
                    "mangled": "_inCAAAA01ew",
                    "ot": "inline ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_prev_transform(PandaNode const *param0)",
                    "c_type": "ConstPointerTo< TransformState > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_prev_transform_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c205472616e73666f726d5374617465203e28282a706172616d30292e6765745f707265765f7472616e73666f726d2829293b",
                    "cpp_ref": "inline ConstPointerTo< TransformState > PandaNode::get_prev_transform(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_prev_transform",
                    "extern": [
                        "ConstPointerTo< TransformState > *",
                        "PandaNode$_$get_prev_transform(PandaNode const *param0)"
                    ],
                    "fn": "get_prev_transform",
                    "indexed": "PandaNode$114$get_prev_transform",
                    "mangled": "_inCAAAAr3cO",
                    "ot": "inline ConstPointerTo< TransformState >",
                    "rt": "TransformState"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$reset_prev_transform(PandaNode *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_reset_prev_transform_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72657365745f707265765f7472616e73666f726d28706172616d31293b",
                    "cpp_ref": "void PandaNode::reset_prev_transform(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$reset_prev_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$reset_prev_transform(PandaNode *param0, Thread *param1)"
                    ],
                    "fn": "reset_prev_transform",
                    "indexed": "PandaNode$115$reset_prev_transform",
                    "mangled": "_inCAAAACOg_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$reset_prev_transform(PandaNode *param0)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_reset_prev_transform_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72657365745f707265765f7472616e73666f726d28293b",
                    "cpp_ref": "void PandaNode::reset_prev_transform(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$reset_prev_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$reset_prev_transform(PandaNode *param0)"
                    ],
                    "fn": "reset_prev_transform",
                    "indexed": "PandaNode$116$reset_prev_transform",
                    "mangled": "_inCAAAAGfcO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$has_dirty_prev_transform(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_has_dirty_prev_transform_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f64697274795f707265765f7472616e73666f726d28293b",
                    "cpp_ref": "inline bool PandaNode::has_dirty_prev_transform(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$has_dirty_prev_transform",
                    "extern": [
                        "bool",
                        "PandaNode$_$has_dirty_prev_transform(PandaNode const *param0)"
                    ],
                    "fn": "has_dirty_prev_transform",
                    "indexed": "PandaNode$117$has_dirty_prev_transform",
                    "mangled": "_inCAAAAraRv",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$reset_all_prev_transform(Thread *param0)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_reset_all_prev_transform_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "2020202050616e64614e6f64653a3a72657365745f616c6c5f707265765f7472616e73666f726d28706172616d30293b",
                    "cpp_ref": "static void PandaNode::reset_all_prev_transform(Thread *current_thread)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaNode$_$reset_all_prev_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$reset_all_prev_transform(Thread *param0)"
                    ],
                    "fn": "reset_all_prev_transform",
                    "indexed": "PandaNode$118$reset_all_prev_transform",
                    "mangled": "_inCAAAA_NX9",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaNode$_$reset_all_prev_transform()",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_reset_all_prev_transform_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202050616e64614e6f64653a3a72657365745f616c6c5f707265765f7472616e73666f726d28293b",
                    "cpp_ref": "static void PandaNode::reset_all_prev_transform(Thread *current_thread)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaNode$_$reset_all_prev_transform",
                    "extern": [
                        "void",
                        "PandaNode$_$reset_all_prev_transform()"
                    ],
                    "fn": "reset_all_prev_transform",
                    "indexed": "PandaNode$119$reset_all_prev_transform",
                    "mangled": "_inCAAAASKY2",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "key",
                        "value",
                        "current_thread"
                    ],
                    "args": [
                        "std::string const &key",
                        "std::string const &value",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "char const *",
                        "char const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$set_tag(PandaNode *param0, char const *param1, char const *param2, Thread *param3)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_tag_v_pssp",
                    "cni_args": "pssp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746167287374643a3a737472696e6728706172616d31292c207374643a3a737472696e6728706172616d32292c20706172616d33293b",
                    "cpp_ref": "void PandaNode::set_tag(std::string const &key, std::string const &value, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_tag",
                    "extern": [
                        "void",
                        "PandaNode$_$set_tag(PandaNode *param0, char const *param1, char const *param2, Thread *param3)"
                    ],
                    "fn": "set_tag",
                    "indexed": "PandaNode$120$set_tag",
                    "mangled": "_inCAAAAUOvq",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "key",
                        "value"
                    ],
                    "args": [
                        "std::string const &key",
                        "std::string const &value"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "char const *",
                        "char const *"
                    ],
                    "c_ref": "PandaNode$_$set_tag(PandaNode *param0, char const *param1, char const *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_tag_v_pss",
                    "cni_args": "pss",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f746167287374643a3a737472696e6728706172616d31292c207374643a3a737472696e6728706172616d3229293b",
                    "cpp_ref": "void PandaNode::set_tag(std::string const &key, std::string const &value, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_tag",
                    "extern": [
                        "void",
                        "PandaNode$_$set_tag(PandaNode *param0, char const *param1, char const *param2)"
                    ],
                    "fn": "set_tag",
                    "indexed": "PandaNode$121$set_tag",
                    "mangled": "_inCAAAAgmyP",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "key",
                        "current_thread"
                    ],
                    "args": [
                        "std::string const &key",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "std::string const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "char const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_tag(PandaNode const *param0, char const *param1, Thread *param2)",
                    "c_type": "char const *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_tag_s_psp",
                    "cni_args": "psp",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f746167287374643a3a737472696e6728706172616d31292c20706172616d32293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string PandaNode::get_tag(std::string const &key, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_tag",
                    "extern": [
                        "char const *",
                        "PandaNode$_$get_tag(PandaNode const *param0, char const *param1, Thread *param2)"
                    ],
                    "fn": "get_tag",
                    "indexed": "PandaNode$122$get_tag",
                    "mangled": "_inCAAAATH82",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "key"
                    ],
                    "args": [
                        "std::string const &key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "char const *"
                    ],
                    "c_ref": "PandaNode$_$get_tag(PandaNode const *param0, char const *param1)",
                    "c_type": "char const *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_tag_s_ps",
                    "cni_args": "ps",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f746167287374643a3a737472696e6728706172616d3129293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string PandaNode::get_tag(std::string const &key, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_tag",
                    "extern": [
                        "char const *",
                        "PandaNode$_$get_tag(PandaNode const *param0, char const *param1)"
                    ],
                    "fn": "get_tag",
                    "indexed": "PandaNode$123$get_tag",
                    "mangled": "_inCAAAAdijC",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 2,
                    "argn": [
                        "key",
                        "current_thread"
                    ],
                    "args": [
                        "std::string const &key",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "std::string const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "char const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$has_tag(PandaNode const *param0, char const *param1, Thread *param2)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_has_tag_B_psp",
                    "cni_args": "psp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f746167287374643a3a737472696e6728706172616d31292c20706172616d32293b",
                    "cpp_ref": "inline bool PandaNode::has_tag(std::string const &key, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$has_tag",
                    "extern": [
                        "bool",
                        "PandaNode$_$has_tag(PandaNode const *param0, char const *param1, Thread *param2)"
                    ],
                    "fn": "has_tag",
                    "indexed": "PandaNode$124$has_tag",
                    "mangled": "_inCAAAAHSc9",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "key"
                    ],
                    "args": [
                        "std::string const &key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "char const *"
                    ],
                    "c_ref": "PandaNode$_$has_tag(PandaNode const *param0, char const *param1)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_has_tag_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f746167287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "inline bool PandaNode::has_tag(std::string const &key, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$has_tag",
                    "extern": [
                        "bool",
                        "PandaNode$_$has_tag(PandaNode const *param0, char const *param1)"
                    ],
                    "fn": "has_tag",
                    "indexed": "PandaNode$125$has_tag",
                    "mangled": "_inCAAAAxsDJ",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "key",
                        "current_thread"
                    ],
                    "args": [
                        "std::string const &key",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "std::string const&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "char const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$clear_tag(PandaNode *param0, char const *param1, Thread *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_tag_v_psp",
                    "cni_args": "psp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f746167287374643a3a737472696e6728706172616d31292c20706172616d32293b",
                    "cpp_ref": "void PandaNode::clear_tag(std::string const &key, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_tag",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_tag(PandaNode *param0, char const *param1, Thread *param2)"
                    ],
                    "fn": "clear_tag",
                    "indexed": "PandaNode$126$clear_tag",
                    "mangled": "_inCAAAA74cp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "key"
                    ],
                    "args": [
                        "std::string const &key"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "char const *"
                    ],
                    "c_ref": "PandaNode$_$clear_tag(PandaNode *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_tag_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f746167287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void PandaNode::clear_tag(std::string const &key, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_tag",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_tag(PandaNode *param0, char const *param1)"
                    ],
                    "fn": "clear_tag",
                    "indexed": "PandaNode$127$clear_tag",
                    "mangled": "_inCAAAA1_x5",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "keys"
                    ],
                    "args": [
                        "vector_string &keys"
                    ],
                    "argt": [
                        "vector_string&"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "vector_string *"
                    ],
                    "c_ref": "PandaNode$_$get_tag_keys(PandaNode const *param0, vector_string *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_tag_keys_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6765745f7461675f6b657973282a706172616d31293b",
                    "cpp_ref": "void PandaNode::get_tag_keys(vector_string &keys) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_tag_keys",
                    "extern": [
                        "void",
                        "PandaNode$_$get_tag_keys(PandaNode const *param0, vector_string *param1)"
                    ],
                    "fn": "get_tag_keys",
                    "indexed": "PandaNode$128$get_tag_keys",
                    "mangled": "_inCAAAAMJLs",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_num_tags(PandaNode const *param0)",
                    "c_type": "std::size_t",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_num_tags_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f7461677328293b",
                    "cpp_ref": "inline std::size_t PandaNode::get_num_tags(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_num_tags",
                    "extern": [
                        "std::size_t",
                        "PandaNode$_$get_num_tags(PandaNode const *param0)"
                    ],
                    "fn": "get_num_tags",
                    "indexed": "PandaNode$129$get_num_tags",
                    "mangled": "_inCAAAAFtsE",
                    "ot": "inline std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "i"
                    ],
                    "args": [
                        "std::size_t i"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "std::size_t"
                    ],
                    "c_ref": "PandaNode$_$get_tag_key(PandaNode const *param0, std::size_t param1)",
                    "c_type": "char const *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_tag_key_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f7461675f6b657928706172616d31293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string PandaNode::get_tag_key(std::size_t i) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_tag_key",
                    "extern": [
                        "char const *",
                        "PandaNode$_$get_tag_key(PandaNode const *param0, std::size_t param1)"
                    ],
                    "fn": "get_tag_key",
                    "indexed": "PandaNode$130$get_tag_key",
                    "mangled": "_inCAAAAnQnd",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$has_tags(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_has_tags_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7461677328293b",
                    "cpp_ref": "inline bool PandaNode::has_tags(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$has_tags",
                    "extern": [
                        "bool",
                        "PandaNode$_$has_tags(PandaNode const *param0)"
                    ],
                    "fn": "has_tags",
                    "indexed": "PandaNode$131$has_tags",
                    "mangled": "_inCAAAAUT5V",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "PandaNode *other"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$copy_tags(PandaNode *param0, PandaNode *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_copy_tags_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f70795f7461677328706172616d31293b",
                    "cpp_ref": "void PandaNode::copy_tags(PandaNode *other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$copy_tags",
                    "extern": [
                        "void",
                        "PandaNode$_$copy_tags(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "copy_tags",
                    "indexed": "PandaNode$132$copy_tags",
                    "mangled": "_inCAAAAxMQi",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "separator"
                    ],
                    "args": [
                        "std::ostream &out",
                        "std::string const &separator"
                    ],
                    "argt": [
                        "std::ostream&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "std::ostream *",
                        "char const *"
                    ],
                    "c_ref": "PandaNode$_$list_tags(PandaNode const *param0, std::ostream *param1, char const *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_list_tags_v_pps",
                    "cni_args": "pps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6973745f74616773282a706172616d312c207374643a3a737472696e6728706172616d3229293b",
                    "cpp_ref": "void PandaNode::list_tags(std::ostream &out, std::string const &separator) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$list_tags",
                    "extern": [
                        "void",
                        "PandaNode$_$list_tags(PandaNode const *param0, std::ostream *param1, char const *param2)"
                    ],
                    "fn": "list_tags",
                    "indexed": "PandaNode$133$list_tags",
                    "mangled": "_inCAAAA4_IE",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "std::ostream *"
                    ],
                    "c_ref": "PandaNode$_$list_tags(PandaNode const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_list_tags_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6973745f74616773282a706172616d31293b",
                    "cpp_ref": "void PandaNode::list_tags(std::ostream &out, std::string const &separator) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$list_tags",
                    "extern": [
                        "void",
                        "PandaNode$_$list_tags(PandaNode const *param0, std::ostream *param1)"
                    ],
                    "fn": "list_tags",
                    "indexed": "PandaNode$134$list_tags",
                    "mangled": "_inCAAAAfRQ4",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "PandaNode const *other"
                    ],
                    "argt": [
                        "PandaNode const*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$compare_tags(PandaNode const *param0, PandaNode const *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_compare_tags_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e636f6d706172655f7461677328706172616d31293b",
                    "cpp_ref": "int PandaNode::compare_tags(PandaNode const *other) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$compare_tags",
                    "extern": [
                        "int",
                        "PandaNode$_$compare_tags(PandaNode const *param0, PandaNode const *param1)"
                    ],
                    "fn": "compare_tags",
                    "indexed": "PandaNode$135$compare_tags",
                    "mangled": "_inCAAAA5bPJ",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "PandaNode *other"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$copy_all_properties(PandaNode *param0, PandaNode *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_copy_all_properties_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636f70795f616c6c5f70726f7065727469657328706172616d31293b",
                    "cpp_ref": "void PandaNode::copy_all_properties(PandaNode *other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$copy_all_properties",
                    "extern": [
                        "void",
                        "PandaNode$_$copy_all_properties(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "copy_all_properties",
                    "indexed": "PandaNode$136$copy_all_properties",
                    "mangled": "_inCAAAAPMTU",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "other"
                    ],
                    "args": [
                        "PandaNode *other"
                    ],
                    "argt": [
                        "PandaNode*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$replace_node(PandaNode *param0, PandaNode *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_replace_node_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7265706c6163655f6e6f646528706172616d31293b",
                    "cpp_ref": "void PandaNode::replace_node(PandaNode *other)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$replace_node",
                    "extern": [
                        "void",
                        "PandaNode$_$replace_node(PandaNode *param0, PandaNode *param1)"
                    ],
                    "fn": "replace_node",
                    "indexed": "PandaNode$137$replace_node",
                    "mangled": "_inCAAAA5edC",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "flags"
                    ],
                    "args": [
                        "unsigned int flags"
                    ],
                    "argt": [
                        "unsigned int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "unsigned int"
                    ],
                    "c_ref": "PandaNode$_$set_unexpected_change(PandaNode *param0, unsigned int param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_unexpected_change_v_pI",
                    "cni_args": "pI",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f756e65787065637465645f6368616e676528706172616d31293b",
                    "cpp_ref": "void PandaNode::set_unexpected_change(unsigned int flags)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_unexpected_change",
                    "extern": [
                        "void",
                        "PandaNode$_$set_unexpected_change(PandaNode *param0, unsigned int param1)"
                    ],
                    "fn": "set_unexpected_change",
                    "indexed": "PandaNode$138$set_unexpected_change",
                    "mangled": "_inCAAAAhV2Y",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "flags"
                    ],
                    "args": [
                        "unsigned int flags"
                    ],
                    "argt": [
                        "unsigned int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "unsigned int"
                    ],
                    "c_ref": "PandaNode$_$get_unexpected_change(PandaNode const *param0, unsigned int param1)",
                    "c_type": "unsigned int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_unexpected_change_I_pI",
                    "cni_args": "pI",
                    "cni_rt": "I",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f756e65787065637465645f6368616e676528706172616d31293b",
                    "cpp_ref": "unsigned int PandaNode::get_unexpected_change(unsigned int flags) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_unexpected_change",
                    "extern": [
                        "unsigned int",
                        "PandaNode$_$get_unexpected_change(PandaNode const *param0, unsigned int param1)"
                    ],
                    "fn": "get_unexpected_change",
                    "indexed": "PandaNode$139$get_unexpected_change",
                    "mangled": "_inCAAAA9YBk",
                    "ot": "unsigned int",
                    "rt": "unsigned int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "flags"
                    ],
                    "args": [
                        "unsigned int flags"
                    ],
                    "argt": [
                        "unsigned int"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "unsigned int"
                    ],
                    "c_ref": "PandaNode$_$clear_unexpected_change(PandaNode *param0, unsigned int param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_unexpected_change_v_pI",
                    "cni_args": "pI",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f756e65787065637465645f6368616e676528706172616d31293b",
                    "cpp_ref": "void PandaNode::clear_unexpected_change(unsigned int flags)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_unexpected_change",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_unexpected_change(PandaNode *param0, unsigned int param1)"
                    ],
                    "fn": "clear_unexpected_change",
                    "indexed": "PandaNode$140$clear_unexpected_change",
                    "mangled": "_inCAAAADKYD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaNode$_$get_overall_bit()",
                    "c_type": "DrawMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_overall_bit_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720447261774d61736b2850616e64614e6f64653a3a6765745f6f766572616c6c5f6269742829293b",
                    "cpp_ref": "static inline DrawMask PandaNode::get_overall_bit(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_overall_bit",
                    "extern": [
                        "DrawMask *",
                        "PandaNode$_$get_overall_bit()"
                    ],
                    "fn": "get_overall_bit",
                    "indexed": "PandaNode$141$get_overall_bit",
                    "mangled": "_inCAAAAMVSB",
                    "ot": "inline DrawMask",
                    "rt": "DrawMask"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaNode$_$get_all_camera_mask()",
                    "c_type": "DrawMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_all_camera_mask_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720447261774d61736b2850616e64614e6f64653a3a6765745f616c6c5f63616d6572615f6d61736b2829293b",
                    "cpp_ref": "static inline DrawMask PandaNode::get_all_camera_mask(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_all_camera_mask",
                    "extern": [
                        "DrawMask *",
                        "PandaNode$_$get_all_camera_mask()"
                    ],
                    "fn": "get_all_camera_mask",
                    "indexed": "PandaNode$142$get_all_camera_mask",
                    "mangled": "_inCAAAAD1n5",
                    "ot": "inline DrawMask",
                    "rt": "DrawMask"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_overall_hidden(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_overall_hidden_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f6f766572616c6c5f68696464656e28293b",
                    "cpp_ref": "inline bool PandaNode::is_overall_hidden(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_overall_hidden",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_overall_hidden(PandaNode const *param0)"
                    ],
                    "fn": "is_overall_hidden",
                    "indexed": "PandaNode$143$is_overall_hidden",
                    "mangled": "_inCAAAAc4fq",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "overall_hidden"
                    ],
                    "args": [
                        "bool overall_hidden"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "bool"
                    ],
                    "c_ref": "PandaNode$_$set_overall_hidden(PandaNode *param0, bool param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_overall_hidden_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6f766572616c6c5f68696464656e28706172616d31293b",
                    "cpp_ref": "inline void PandaNode::set_overall_hidden(bool overall_hidden)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_overall_hidden",
                    "extern": [
                        "void",
                        "PandaNode$_$set_overall_hidden(PandaNode *param0, bool param1)"
                    ],
                    "fn": "set_overall_hidden",
                    "indexed": "PandaNode$144$set_overall_hidden",
                    "mangled": "_inCAAAApN5m",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "show_mask",
                        "hide_mask",
                        "clear_mask"
                    ],
                    "args": [
                        "DrawMask show_mask",
                        "DrawMask hide_mask",
                        "DrawMask clear_mask"
                    ],
                    "argt": [
                        "DrawMask",
                        "DrawMask",
                        "DrawMask"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "DrawMask *",
                        "DrawMask *",
                        "DrawMask *"
                    ],
                    "c_ref": "PandaNode$_$adjust_draw_mask(PandaNode *param0, DrawMask *param1, DrawMask *param2, DrawMask *param3)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_adjust_draw_mask_v_pppp",
                    "cni_args": "pppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e61646a7573745f647261775f6d61736b282a706172616d312c202a706172616d322c202a706172616d33293b",
                    "cpp_ref": "void PandaNode::adjust_draw_mask(DrawMask show_mask, DrawMask hide_mask, DrawMask clear_mask)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$adjust_draw_mask",
                    "extern": [
                        "void",
                        "PandaNode$_$adjust_draw_mask(PandaNode *param0, DrawMask *param1, DrawMask *param2, DrawMask *param3)"
                    ],
                    "fn": "adjust_draw_mask",
                    "indexed": "PandaNode$145$adjust_draw_mask",
                    "mangled": "_inCAAAAvhTC",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_draw_control_mask(PandaNode const *param0)",
                    "c_type": "DrawMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_draw_control_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720447261774d61736b28282a706172616d30292e6765745f647261775f636f6e74726f6c5f6d61736b2829293b",
                    "cpp_ref": "inline DrawMask PandaNode::get_draw_control_mask(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_draw_control_mask",
                    "extern": [
                        "DrawMask *",
                        "PandaNode$_$get_draw_control_mask(PandaNode const *param0)"
                    ],
                    "fn": "get_draw_control_mask",
                    "indexed": "PandaNode$146$get_draw_control_mask",
                    "mangled": "_inCAAAAaVGC",
                    "ot": "inline DrawMask",
                    "rt": "DrawMask"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_draw_show_mask(PandaNode const *param0)",
                    "c_type": "DrawMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_draw_show_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720447261774d61736b28282a706172616d30292e6765745f647261775f73686f775f6d61736b2829293b",
                    "cpp_ref": "inline DrawMask PandaNode::get_draw_show_mask(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_draw_show_mask",
                    "extern": [
                        "DrawMask *",
                        "PandaNode$_$get_draw_show_mask(PandaNode const *param0)"
                    ],
                    "fn": "get_draw_show_mask",
                    "indexed": "PandaNode$147$get_draw_show_mask",
                    "mangled": "_inCAAAAkxUA",
                    "ot": "inline DrawMask",
                    "rt": "DrawMask"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_net_draw_control_mask(PandaNode const *param0)",
                    "c_type": "DrawMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_net_draw_control_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720447261774d61736b28282a706172616d30292e6765745f6e65745f647261775f636f6e74726f6c5f6d61736b2829293b",
                    "cpp_ref": "DrawMask PandaNode::get_net_draw_control_mask(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_net_draw_control_mask",
                    "extern": [
                        "DrawMask *",
                        "PandaNode$_$get_net_draw_control_mask(PandaNode const *param0)"
                    ],
                    "fn": "get_net_draw_control_mask",
                    "indexed": "PandaNode$148$get_net_draw_control_mask",
                    "mangled": "_inCAAAAVZQn",
                    "ot": "DrawMask",
                    "rt": "DrawMask"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_net_draw_show_mask(PandaNode const *param0)",
                    "c_type": "DrawMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_net_draw_show_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720447261774d61736b28282a706172616d30292e6765745f6e65745f647261775f73686f775f6d61736b2829293b",
                    "cpp_ref": "DrawMask PandaNode::get_net_draw_show_mask(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_net_draw_show_mask",
                    "extern": [
                        "DrawMask *",
                        "PandaNode$_$get_net_draw_show_mask(PandaNode const *param0)"
                    ],
                    "fn": "get_net_draw_show_mask",
                    "indexed": "PandaNode$149$get_net_draw_show_mask",
                    "mangled": "_inCAAAAthHn",
                    "ot": "DrawMask",
                    "rt": "DrawMask"
                },
                {
                    "argc": 1,
                    "argn": [
                        "mask"
                    ],
                    "args": [
                        "CollideMask mask"
                    ],
                    "argt": [
                        "CollideMask"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "CollideMask *"
                    ],
                    "c_ref": "PandaNode$_$set_into_collide_mask(PandaNode *param0, CollideMask *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_into_collide_mask_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f696e746f5f636f6c6c6964655f6d61736b282a706172616d31293b",
                    "cpp_ref": "void PandaNode::set_into_collide_mask(CollideMask mask)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_into_collide_mask",
                    "extern": [
                        "void",
                        "PandaNode$_$set_into_collide_mask(PandaNode *param0, CollideMask *param1)"
                    ],
                    "fn": "set_into_collide_mask",
                    "indexed": "PandaNode$150$set_into_collide_mask",
                    "mangled": "_inCAAAAd531",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_into_collide_mask(PandaNode const *param0)",
                    "c_type": "CollideMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_into_collide_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6c6c6964654d61736b28282a706172616d30292e6765745f696e746f5f636f6c6c6964655f6d61736b2829293b",
                    "cpp_ref": "inline CollideMask PandaNode::get_into_collide_mask(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_into_collide_mask",
                    "extern": [
                        "CollideMask *",
                        "PandaNode$_$get_into_collide_mask(PandaNode const *param0)"
                    ],
                    "fn": "get_into_collide_mask",
                    "indexed": "PandaNode$151$get_into_collide_mask",
                    "mangled": "_inCAAAAc3Cf",
                    "ot": "inline CollideMask",
                    "rt": "CollideMask"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_legal_collide_mask(PandaNode const *param0)",
                    "c_type": "CollideMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_legal_collide_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6c6c6964654d61736b28282a706172616d30292e6765745f6c6567616c5f636f6c6c6964655f6d61736b2829293b",
                    "cpp_ref": "virtual CollideMask PandaNode::get_legal_collide_mask(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_legal_collide_mask",
                    "extern": [
                        "CollideMask *",
                        "PandaNode$_$get_legal_collide_mask(PandaNode const *param0)"
                    ],
                    "fn": "get_legal_collide_mask",
                    "indexed": "PandaNode$152$get_legal_collide_mask",
                    "mangled": "_inCAAAAtnOA",
                    "ot": "virtual CollideMask",
                    "rt": "CollideMask"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_net_collide_mask(PandaNode const *param0, Thread *param1)",
                    "c_type": "CollideMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_net_collide_mask_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6c6c6964654d61736b28282a706172616d30292e6765745f6e65745f636f6c6c6964655f6d61736b28706172616d3129293b",
                    "cpp_ref": "CollideMask PandaNode::get_net_collide_mask(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_net_collide_mask",
                    "extern": [
                        "CollideMask *",
                        "PandaNode$_$get_net_collide_mask(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_net_collide_mask",
                    "indexed": "PandaNode$153$get_net_collide_mask",
                    "mangled": "_inCAAAABjl_",
                    "ot": "CollideMask",
                    "rt": "CollideMask"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_net_collide_mask(PandaNode const *param0)",
                    "c_type": "CollideMask *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_net_collide_mask_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6c6c6964654d61736b28282a706172616d30292e6765745f6e65745f636f6c6c6964655f6d61736b2829293b",
                    "cpp_ref": "CollideMask PandaNode::get_net_collide_mask(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_net_collide_mask",
                    "extern": [
                        "CollideMask *",
                        "PandaNode$_$get_net_collide_mask(PandaNode const *param0)"
                    ],
                    "fn": "get_net_collide_mask",
                    "indexed": "PandaNode$154$get_net_collide_mask",
                    "mangled": "_inCAAAA4l_T",
                    "ot": "CollideMask",
                    "rt": "CollideMask"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_off_clip_planes(PandaNode const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< RenderAttrib > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_off_clip_planes_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e646572417474726962203e28282a706172616d30292e6765745f6f66665f636c69705f706c616e657328706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< RenderAttrib > PandaNode::get_off_clip_planes(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_off_clip_planes",
                    "extern": [
                        "ConstPointerTo< RenderAttrib > *",
                        "PandaNode$_$get_off_clip_planes(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_off_clip_planes",
                    "indexed": "PandaNode$155$get_off_clip_planes",
                    "mangled": "_inCAAAAK84o",
                    "ot": "ConstPointerTo< RenderAttrib >",
                    "rt": "RenderAttrib"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_off_clip_planes(PandaNode const *param0)",
                    "c_type": "ConstPointerTo< RenderAttrib > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_off_clip_planes_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c2052656e646572417474726962203e28282a706172616d30292e6765745f6f66665f636c69705f706c616e65732829293b",
                    "cpp_ref": "ConstPointerTo< RenderAttrib > PandaNode::get_off_clip_planes(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_off_clip_planes",
                    "extern": [
                        "ConstPointerTo< RenderAttrib > *",
                        "PandaNode$_$get_off_clip_planes(PandaNode const *param0)"
                    ],
                    "fn": "get_off_clip_planes",
                    "indexed": "PandaNode$156$get_off_clip_planes",
                    "mangled": "_inCAAAAIxkn",
                    "ot": "ConstPointerTo< RenderAttrib >",
                    "rt": "RenderAttrib"
                },
                {
                    "argc": 2,
                    "argn": [
                        "gsg",
                        "node_state"
                    ],
                    "args": [
                        "GraphicsStateGuardianBase *gsg",
                        "RenderState const *node_state"
                    ],
                    "argt": [
                        "GraphicsStateGuardianBase*",
                        "RenderState const*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "GraphicsStateGuardianBase *",
                        "RenderState const *"
                    ],
                    "c_ref": "PandaNode$_$prepare_scene(PandaNode *param0, GraphicsStateGuardianBase *param1, RenderState const *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_prepare_scene_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e707265706172655f7363656e6528706172616d312c20706172616d32293b",
                    "cpp_ref": "void PandaNode::prepare_scene(GraphicsStateGuardianBase *gsg, RenderState const *node_state)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$prepare_scene",
                    "extern": [
                        "void",
                        "PandaNode$_$prepare_scene(PandaNode *param0, GraphicsStateGuardianBase *param1, RenderState const *param2)"
                    ],
                    "fn": "prepare_scene",
                    "indexed": "PandaNode$157$prepare_scene",
                    "mangled": "_inCAAAA9vAT",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_scene_root(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_scene_root_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f7363656e655f726f6f7428293b",
                    "cpp_ref": "bool PandaNode::is_scene_root(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_scene_root",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_scene_root(PandaNode const *param0)"
                    ],
                    "fn": "is_scene_root",
                    "indexed": "PandaNode$158$is_scene_root",
                    "mangled": "_inCAAAAhUEh",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_under_scene_root(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_under_scene_root_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f756e6465725f7363656e655f726f6f7428293b",
                    "cpp_ref": "bool PandaNode::is_under_scene_root(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_under_scene_root",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_under_scene_root(PandaNode const *param0)"
                    ],
                    "fn": "is_under_scene_root",
                    "indexed": "PandaNode$159$is_under_scene_root",
                    "mangled": "_inCAAAAUA6g",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "std::ostream *"
                    ],
                    "c_ref": "PandaNode$_$output(PandaNode const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "virtual void PandaNode::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$output",
                    "extern": [
                        "void",
                        "PandaNode$_$output(PandaNode const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "PandaNode$160$output",
                    "mangled": "_inCAAAAhDX9",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$write(PandaNode const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_write_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d312c20706172616d32293b",
                    "cpp_ref": "virtual void PandaNode::write(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$write",
                    "extern": [
                        "void",
                        "PandaNode$_$write(PandaNode const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "write",
                    "indexed": "PandaNode$161$write",
                    "mangled": "_inCAAAA6i2k",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "out",
                        "indent_level"
                    ],
                    "args": [
                        "std::ostream &out",
                        "int indent_level"
                    ],
                    "argt": [
                        "std::ostream&",
                        "int"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "std::ostream *",
                        "int"
                    ],
                    "c_ref": "PandaNode$_$ls(PandaNode const *param0, std::ostream *param1, int param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_ls_v_ppi",
                    "cni_args": "ppi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c73282a706172616d312c20706172616d32293b",
                    "cpp_ref": "inline void PandaNode::ls(std::ostream &out, int indent_level) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$ls",
                    "extern": [
                        "void",
                        "PandaNode$_$ls(PandaNode const *param0, std::ostream *param1, int param2)"
                    ],
                    "fn": "ls",
                    "indexed": "PandaNode$162$ls",
                    "mangled": "_inCAAAAF2_1",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "bounds_type"
                    ],
                    "args": [
                        "BoundingVolume::BoundsType bounds_type"
                    ],
                    "argt": [
                        "BoundingVolume::BoundsType"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "BoundingVolume::BoundsType"
                    ],
                    "c_ref": "PandaNode$_$set_bounds_type(PandaNode *param0, BoundingVolume::BoundsType param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_bounds_type_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f626f756e64735f7479706528706172616d31293b",
                    "cpp_ref": "void PandaNode::set_bounds_type(BoundingVolume::BoundsType bounds_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_bounds_type",
                    "extern": [
                        "void",
                        "PandaNode$_$set_bounds_type(PandaNode *param0, BoundingVolume::BoundsType param1)"
                    ],
                    "fn": "set_bounds_type",
                    "indexed": "PandaNode$163$set_bounds_type",
                    "mangled": "_inCAAAAb2UJ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_bounds_type(PandaNode const *param0)",
                    "c_type": "BoundingVolume::BoundsType",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_bounds_type_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f626f756e64735f7479706528293b",
                    "cpp_ref": "BoundingVolume::BoundsType PandaNode::get_bounds_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_bounds_type",
                    "extern": [
                        "BoundingVolume::BoundsType",
                        "PandaNode$_$get_bounds_type(PandaNode const *param0)"
                    ],
                    "fn": "get_bounds_type",
                    "indexed": "PandaNode$164$get_bounds_type",
                    "mangled": "_inCAAAA6V3e",
                    "ot": "BoundingVolume::BoundsType",
                    "rt": "BoundingVolume::BoundsType"
                },
                {
                    "argc": 1,
                    "argn": [
                        "volume"
                    ],
                    "args": [
                        "BoundingVolume const *volume"
                    ],
                    "argt": [
                        "BoundingVolume const*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "BoundingVolume const *"
                    ],
                    "c_ref": "PandaNode$_$set_bounds(PandaNode *param0, BoundingVolume const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_bounds_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f626f756e647328706172616d31293b",
                    "cpp_ref": "void PandaNode::set_bounds(BoundingVolume const *volume)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_bounds",
                    "extern": [
                        "void",
                        "PandaNode$_$set_bounds(PandaNode *param0, BoundingVolume const *param1)"
                    ],
                    "fn": "set_bounds",
                    "indexed": "PandaNode$165$set_bounds",
                    "mangled": "_inCAAAAAQ3k",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "volume"
                    ],
                    "args": [
                        "BoundingVolume const *volume"
                    ],
                    "argt": [
                        "BoundingVolume const*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "BoundingVolume const *"
                    ],
                    "c_ref": "PandaNode$_$set_bound(PandaNode *param0, BoundingVolume const *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_bound_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f626f756e6428706172616d31293b",
                    "cpp_ref": "void PandaNode::set_bound(BoundingVolume const *volume)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_bound",
                    "extern": [
                        "void",
                        "PandaNode$_$set_bound(PandaNode *param0, BoundingVolume const *param1)"
                    ],
                    "fn": "set_bound",
                    "indexed": "PandaNode$166$set_bound",
                    "mangled": "_inCAAAAphxO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$clear_bounds(PandaNode *param0)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_clear_bounds_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e636c6561725f626f756e647328293b",
                    "cpp_ref": "inline void PandaNode::clear_bounds(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$clear_bounds",
                    "extern": [
                        "void",
                        "PandaNode$_$clear_bounds(PandaNode *param0)"
                    ],
                    "fn": "clear_bounds",
                    "indexed": "PandaNode$167$clear_bounds",
                    "mangled": "_inCAAAAzkwy",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_bounds(PandaNode const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< BoundingVolume > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_bounds_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f626f756e647328706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< BoundingVolume > PandaNode::get_bounds(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_bounds",
                    "extern": [
                        "ConstPointerTo< BoundingVolume > *",
                        "PandaNode$_$get_bounds(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_bounds",
                    "indexed": "PandaNode$168$get_bounds",
                    "mangled": "_inCAAAADKe6",
                    "ot": "ConstPointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_bounds(PandaNode const *param0)",
                    "c_type": "ConstPointerTo< BoundingVolume > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_bounds_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f626f756e64732829293b",
                    "cpp_ref": "ConstPointerTo< BoundingVolume > PandaNode::get_bounds(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_bounds",
                    "extern": [
                        "ConstPointerTo< BoundingVolume > *",
                        "PandaNode$_$get_bounds(PandaNode const *param0)"
                    ],
                    "fn": "get_bounds",
                    "indexed": "PandaNode$169$get_bounds",
                    "mangled": "_inCAAAA9E3v",
                    "ot": "ConstPointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 2,
                    "argn": [
                        "seq",
                        "current_thread"
                    ],
                    "args": [
                        "UpdateSeq &seq",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "UpdateSeq&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "UpdateSeq *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_bounds(PandaNode const *param0, UpdateSeq *param1, Thread *param2)",
                    "c_type": "ConstPointerTo< BoundingVolume > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_bounds_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f626f756e6473282a706172616d312c20706172616d3229293b",
                    "cpp_ref": "ConstPointerTo< BoundingVolume > PandaNode::get_bounds(UpdateSeq &seq, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_bounds",
                    "extern": [
                        "ConstPointerTo< BoundingVolume > *",
                        "PandaNode$_$get_bounds(PandaNode const *param0, UpdateSeq *param1, Thread *param2)"
                    ],
                    "fn": "get_bounds",
                    "indexed": "PandaNode$170$get_bounds",
                    "mangled": "_inCAAAAmNRe",
                    "ot": "ConstPointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 1,
                    "argn": [
                        "seq"
                    ],
                    "args": [
                        "UpdateSeq &seq"
                    ],
                    "argt": [
                        "UpdateSeq&"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "UpdateSeq *"
                    ],
                    "c_ref": "PandaNode$_$get_bounds(PandaNode const *param0, UpdateSeq *param1)",
                    "c_type": "ConstPointerTo< BoundingVolume > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_bounds_p_pp_1_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f626f756e6473282a706172616d3129293b",
                    "cpp_ref": "ConstPointerTo< BoundingVolume > PandaNode::get_bounds(UpdateSeq &seq, Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_bounds",
                    "extern": [
                        "ConstPointerTo< BoundingVolume > *",
                        "PandaNode$_$get_bounds(PandaNode const *param0, UpdateSeq *param1)"
                    ],
                    "fn": "get_bounds",
                    "indexed": "PandaNode$171$get_bounds",
                    "mangled": "_inCAAAA9yDH",
                    "ot": "ConstPointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_nested_vertices(PandaNode const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_nested_vertices_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e65737465645f766572746963657328706172616d31293b",
                    "cpp_ref": "int PandaNode::get_nested_vertices(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_nested_vertices",
                    "extern": [
                        "int",
                        "PandaNode$_$get_nested_vertices(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_nested_vertices",
                    "indexed": "PandaNode$172$get_nested_vertices",
                    "mangled": "_inCAAAAauzv",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_nested_vertices(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_nested_vertices_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e65737465645f766572746963657328293b",
                    "cpp_ref": "int PandaNode::get_nested_vertices(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_nested_vertices",
                    "extern": [
                        "int",
                        "PandaNode$_$get_nested_vertices(PandaNode const *param0)"
                    ],
                    "fn": "get_nested_vertices",
                    "indexed": "PandaNode$173$get_nested_vertices",
                    "mangled": "_inCAAAARfeu",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_internal_bounds(PandaNode const *param0, Thread *param1)",
                    "c_type": "ConstPointerTo< BoundingVolume > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_internal_bounds_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f696e7465726e616c5f626f756e647328706172616d3129293b",
                    "cpp_ref": "inline ConstPointerTo< BoundingVolume > PandaNode::get_internal_bounds(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_internal_bounds",
                    "extern": [
                        "ConstPointerTo< BoundingVolume > *",
                        "PandaNode$_$get_internal_bounds(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_internal_bounds",
                    "indexed": "PandaNode$174$get_internal_bounds",
                    "mangled": "_inCAAAAxMGh",
                    "ot": "inline ConstPointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_internal_bounds(PandaNode const *param0)",
                    "c_type": "ConstPointerTo< BoundingVolume > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_internal_bounds_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720436f6e7374506f696e746572546f3c20426f756e64696e67566f6c756d65203e28282a706172616d30292e6765745f696e7465726e616c5f626f756e64732829293b",
                    "cpp_ref": "inline ConstPointerTo< BoundingVolume > PandaNode::get_internal_bounds(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_internal_bounds",
                    "extern": [
                        "ConstPointerTo< BoundingVolume > *",
                        "PandaNode$_$get_internal_bounds(PandaNode const *param0)"
                    ],
                    "fn": "get_internal_bounds",
                    "indexed": "PandaNode$175$get_internal_bounds",
                    "mangled": "_inCAAAAjqxf",
                    "ot": "inline ConstPointerTo< BoundingVolume >",
                    "rt": "BoundingVolume"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_internal_vertices(PandaNode const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_internal_vertices_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f696e7465726e616c5f766572746963657328706172616d31293b",
                    "cpp_ref": "inline int PandaNode::get_internal_vertices(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_internal_vertices",
                    "extern": [
                        "int",
                        "PandaNode$_$get_internal_vertices(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_internal_vertices",
                    "indexed": "PandaNode$176$get_internal_vertices",
                    "mangled": "_inCAAAAOmTK",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_internal_vertices(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_internal_vertices_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f696e7465726e616c5f766572746963657328293b",
                    "cpp_ref": "inline int PandaNode::get_internal_vertices(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_internal_vertices",
                    "extern": [
                        "int",
                        "PandaNode$_$get_internal_vertices(PandaNode const *param0)"
                    ],
                    "fn": "get_internal_vertices",
                    "indexed": "PandaNode$177$get_internal_vertices",
                    "mangled": "_inCAAAAxQZ2",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$mark_bounds_stale(PandaNode const *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_mark_bounds_stale_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d61726b5f626f756e64735f7374616c6528706172616d31293b",
                    "cpp_ref": "void PandaNode::mark_bounds_stale(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$mark_bounds_stale",
                    "extern": [
                        "void",
                        "PandaNode$_$mark_bounds_stale(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "mark_bounds_stale",
                    "indexed": "PandaNode$178$mark_bounds_stale",
                    "mangled": "_inCAAAAIbN9",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$mark_bounds_stale(PandaNode const *param0)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_mark_bounds_stale_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d61726b5f626f756e64735f7374616c6528293b",
                    "cpp_ref": "void PandaNode::mark_bounds_stale(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$mark_bounds_stale",
                    "extern": [
                        "void",
                        "PandaNode$_$mark_bounds_stale(PandaNode const *param0)"
                    ],
                    "fn": "mark_bounds_stale",
                    "indexed": "PandaNode$179$mark_bounds_stale",
                    "mangled": "_inCAAAAddK_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$mark_internal_bounds_stale(PandaNode *param0, Thread *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_mark_internal_bounds_stale_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d61726b5f696e7465726e616c5f626f756e64735f7374616c6528706172616d31293b",
                    "cpp_ref": "void PandaNode::mark_internal_bounds_stale(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$mark_internal_bounds_stale",
                    "extern": [
                        "void",
                        "PandaNode$_$mark_internal_bounds_stale(PandaNode *param0, Thread *param1)"
                    ],
                    "fn": "mark_internal_bounds_stale",
                    "indexed": "PandaNode$180$mark_internal_bounds_stale",
                    "mangled": "_inCAAAAl4WP",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$mark_internal_bounds_stale(PandaNode *param0)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_mark_internal_bounds_stale_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d61726b5f696e7465726e616c5f626f756e64735f7374616c6528293b",
                    "cpp_ref": "void PandaNode::mark_internal_bounds_stale(Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$mark_internal_bounds_stale",
                    "extern": [
                        "void",
                        "PandaNode$_$mark_internal_bounds_stale(PandaNode *param0)"
                    ],
                    "fn": "mark_internal_bounds_stale",
                    "indexed": "PandaNode$181$mark_internal_bounds_stale",
                    "mangled": "_inCAAAApy5K",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_bounds_stale(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_bounds_stale_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f626f756e64735f7374616c6528293b",
                    "cpp_ref": "inline bool PandaNode::is_bounds_stale(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_bounds_stale",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_bounds_stale(PandaNode const *param0)"
                    ],
                    "fn": "is_bounds_stale",
                    "indexed": "PandaNode$182$is_bounds_stale",
                    "mangled": "_inCAAAA8mxQ",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "flag"
                    ],
                    "args": [
                        "bool flag"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "bool"
                    ],
                    "c_ref": "PandaNode$_$set_final(PandaNode *param0, bool param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_set_final_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f66696e616c28706172616d31293b",
                    "cpp_ref": "inline void PandaNode::set_final(bool flag)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$set_final",
                    "extern": [
                        "void",
                        "PandaNode$_$set_final(PandaNode *param0, bool param1)"
                    ],
                    "fn": "set_final",
                    "indexed": "PandaNode$183$set_final",
                    "mangled": "_inCAAAAfUw8",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$is_final(PandaNode const *param0, Thread *param1)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_final_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f66696e616c28706172616d31293b",
                    "cpp_ref": "inline bool PandaNode::is_final(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_final",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_final(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "is_final",
                    "indexed": "PandaNode$184$is_final",
                    "mangled": "_inCAAAAitT8",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_final(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_final_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f66696e616c28293b",
                    "cpp_ref": "inline bool PandaNode::is_final(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_final",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_final(PandaNode const *param0)"
                    ],
                    "fn": "is_final",
                    "indexed": "PandaNode$185$is_final",
                    "mangled": "_inCAAAA8p0D",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_geom_node(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_geom_node_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f67656f6d5f6e6f646528293b",
                    "cpp_ref": "virtual bool PandaNode::is_geom_node(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_geom_node",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_geom_node(PandaNode const *param0)"
                    ],
                    "fn": "is_geom_node",
                    "indexed": "PandaNode$186$is_geom_node",
                    "mangled": "_inCAAAAxAx3",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_lod_node(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_lod_node_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f6c6f645f6e6f646528293b",
                    "cpp_ref": "virtual bool PandaNode::is_lod_node(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_lod_node",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_lod_node(PandaNode const *param0)"
                    ],
                    "fn": "is_lod_node",
                    "indexed": "PandaNode$187$is_lod_node",
                    "mangled": "_inCAAAAhW8z",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_collision_node(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_collision_node_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f636f6c6c6973696f6e5f6e6f646528293b",
                    "cpp_ref": "virtual bool PandaNode::is_collision_node(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_collision_node",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_collision_node(PandaNode const *param0)"
                    ],
                    "fn": "is_collision_node",
                    "indexed": "PandaNode$188$is_collision_node",
                    "mangled": "_inCAAAA5usX",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$as_light(PandaNode *param0)",
                    "c_type": "Light *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_as_light_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e61735f6c6967687428293b",
                    "cpp_ref": "virtual Light *PandaNode::as_light(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$as_light",
                    "extern": [
                        "Light *",
                        "PandaNode$_$as_light(PandaNode *param0)"
                    ],
                    "fn": "as_light",
                    "indexed": "PandaNode$189$as_light",
                    "mangled": "_inCAAAAbCbs",
                    "ot": "virtual Light*",
                    "rt": "Light"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$is_ambient_light(PandaNode const *param0)",
                    "c_type": "bool",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_is_ambient_light_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f616d6269656e745f6c6967687428293b",
                    "cpp_ref": "virtual bool PandaNode::is_ambient_light(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$is_ambient_light",
                    "extern": [
                        "bool",
                        "PandaNode$_$is_ambient_light(PandaNode const *param0)"
                    ],
                    "fn": "is_ambient_light",
                    "indexed": "PandaNode$190$is_ambient_light",
                    "mangled": "_inCAAAAz1Gk",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_fancy_bits(PandaNode const *param0, Thread *param1)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_fancy_bits_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f66616e63795f6269747328706172616d31293b",
                    "cpp_ref": "inline int PandaNode::get_fancy_bits(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_fancy_bits",
                    "extern": [
                        "int",
                        "PandaNode$_$get_fancy_bits(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_fancy_bits",
                    "indexed": "PandaNode$191$get_fancy_bits",
                    "mangled": "_inCAAAAoTW8",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_fancy_bits(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_fancy_bits_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f66616e63795f6269747328293b",
                    "cpp_ref": "inline int PandaNode::get_fancy_bits(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_fancy_bits",
                    "extern": [
                        "int",
                        "PandaNode$_$get_fancy_bits(PandaNode const *param0)"
                    ],
                    "fn": "get_fancy_bits",
                    "indexed": "PandaNode$192$get_fancy_bits",
                    "mangled": "_inCAAAAnxtb",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 2,
                    "argn": [
                        "data",
                        "reader"
                    ],
                    "args": [
                        "vector_uchar data",
                        "BamReader *reader"
                    ],
                    "argt": [
                        "vector_uchar",
                        "BamReader*"
                    ],
                    "c_argv": [
                        "vector_uchar",
                        "BamReader *"
                    ],
                    "c_ref": "PandaNode$_$decode_from_bam_stream(vector_uchar param0, BamReader *param1)",
                    "c_type": "PointerTo< PandaNode > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_decode_from_bam_stream_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2050616e64614e6f6465203e2850616e64614e6f64653a3a6465636f64655f66726f6d5f62616d5f73747265616d28706172616d302c20706172616d3129293b",
                    "cpp_ref": "static PointerTo< PandaNode > PandaNode::decode_from_bam_stream(vector_uchar data, BamReader *reader)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaNode$_$decode_from_bam_stream",
                    "extern": [
                        "PointerTo< PandaNode > *",
                        "PandaNode$_$decode_from_bam_stream(vector_uchar param0, BamReader *param1)"
                    ],
                    "fn": "decode_from_bam_stream",
                    "indexed": "PandaNode$193$decode_from_bam_stream",
                    "mangled": "_inCAAAAPxIY",
                    "ot": "PointerTo< PandaNode >",
                    "rt": "PandaNode"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "vector_uchar data"
                    ],
                    "argt": [
                        "vector_uchar"
                    ],
                    "c_argv": [
                        "vector_uchar"
                    ],
                    "c_ref": "PandaNode$_$decode_from_bam_stream(vector_uchar param0)",
                    "c_type": "PointerTo< PandaNode > *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_decode_from_bam_stream_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c2050616e64614e6f6465203e2850616e64614e6f64653a3a6465636f64655f66726f6d5f62616d5f73747265616d28706172616d3029293b",
                    "cpp_ref": "static PointerTo< PandaNode > PandaNode::decode_from_bam_stream(vector_uchar data, BamReader *reader)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaNode$_$decode_from_bam_stream",
                    "extern": [
                        "PointerTo< PandaNode > *",
                        "PandaNode$_$decode_from_bam_stream(vector_uchar param0)"
                    ],
                    "fn": "decode_from_bam_stream",
                    "indexed": "PandaNode$194$decode_from_bam_stream",
                    "mangled": "_inCAAAAGt4Y",
                    "ot": "PointerTo< PandaNode >",
                    "rt": "PandaNode"
                },
                {
                    "argc": 4,
                    "argn": [
                        "gsg",
                        "node_state",
                        "transformer",
                        "current_thread"
                    ],
                    "args": [
                        "GraphicsStateGuardianBase *gsg",
                        "RenderState const *node_state",
                        "GeomTransformer &transformer",
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "GraphicsStateGuardianBase*",
                        "RenderState const*",
                        "GeomTransformer&",
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "GraphicsStateGuardianBase *",
                        "RenderState const *",
                        "GeomTransformer *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$r_prepare_scene(PandaNode *param0, GraphicsStateGuardianBase *param1, RenderState const *param2, GeomTransformer *param3, Thread *param4)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_r_prepare_scene_v_ppppp",
                    "cni_args": "ppppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e725f707265706172655f7363656e6528706172616d312c20706172616d322c202a706172616d332c20706172616d34293b",
                    "cpp_ref": "virtual void PandaNode::r_prepare_scene(GraphicsStateGuardianBase *gsg, RenderState const *node_state, GeomTransformer &transformer, Thread *current_thread)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$r_prepare_scene",
                    "extern": [
                        "void",
                        "PandaNode$_$r_prepare_scene(PandaNode *param0, GraphicsStateGuardianBase *param1, RenderState const *param2, GeomTransformer *param3, Thread *param4)"
                    ],
                    "fn": "r_prepare_scene",
                    "indexed": "PandaNode$195$r_prepare_scene",
                    "mangled": "_inCAAAAbIrU",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_children(PandaNode const *param0, Thread *param1)",
                    "c_type": "PandaNode::Children *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_children_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772050616e64614e6f64653a3a4368696c6472656e28282a706172616d30292e6765745f6368696c6472656e28706172616d3129293b",
                    "cpp_ref": "inline PandaNode::Children PandaNode::get_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_children",
                    "extern": [
                        "PandaNode::Children *",
                        "PandaNode$_$get_children(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_children",
                    "indexed": "PandaNode$196$get_children",
                    "mangled": "_inCAAAA_Mhk",
                    "ot": "inline PandaNode::Children",
                    "rt": "PandaNode::Children"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_children(PandaNode const *param0)",
                    "c_type": "PandaNode::Children *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_children_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772050616e64614e6f64653a3a4368696c6472656e28282a706172616d30292e6765745f6368696c6472656e2829293b",
                    "cpp_ref": "inline PandaNode::Children PandaNode::get_children(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_children",
                    "extern": [
                        "PandaNode::Children *",
                        "PandaNode$_$get_children(PandaNode const *param0)"
                    ],
                    "fn": "get_children",
                    "indexed": "PandaNode$197$get_children",
                    "mangled": "_inCAAAABn_E",
                    "ot": "inline PandaNode::Children",
                    "rt": "PandaNode::Children"
                },
                {
                    "argc": 1,
                    "argn": [
                        "current_thread"
                    ],
                    "args": [
                        "Thread *current_thread"
                    ],
                    "argt": [
                        "Thread*"
                    ],
                    "c_argv": [
                        "PandaNode const *",
                        "Thread *"
                    ],
                    "c_ref": "PandaNode$_$get_parents(PandaNode const *param0, Thread *param1)",
                    "c_type": "PandaNode::Parents *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_parents_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772050616e64614e6f64653a3a506172656e747328282a706172616d30292e6765745f706172656e747328706172616d3129293b",
                    "cpp_ref": "inline PandaNode::Parents PandaNode::get_parents(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_parents",
                    "extern": [
                        "PandaNode::Parents *",
                        "PandaNode$_$get_parents(PandaNode const *param0, Thread *param1)"
                    ],
                    "fn": "get_parents",
                    "indexed": "PandaNode$198$get_parents",
                    "mangled": "_inCAAAAD3JQ",
                    "ot": "inline PandaNode::Parents",
                    "rt": "PandaNode::Parents"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_parents(PandaNode const *param0)",
                    "c_type": "PandaNode::Parents *",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_parents_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772050616e64614e6f64653a3a506172656e747328282a706172616d30292e6765745f706172656e74732829293b",
                    "cpp_ref": "inline PandaNode::Parents PandaNode::get_parents(Thread *current_thread) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_parents",
                    "extern": [
                        "PandaNode::Parents *",
                        "PandaNode$_$get_parents(PandaNode const *param0)"
                    ],
                    "fn": "get_parents",
                    "indexed": "PandaNode$199$get_parents",
                    "mangled": "_inCAAAA7eN7",
                    "ot": "inline PandaNode::Parents",
                    "rt": "PandaNode::Parents"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaNode$_$register_with_read_factory()",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_register_with_read_factory_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202050616e64614e6f64653a3a72656769737465725f776974685f726561645f666163746f727928293b",
                    "cpp_ref": "static void PandaNode::register_with_read_factory(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaNode$_$register_with_read_factory",
                    "extern": [
                        "void",
                        "PandaNode$_$register_with_read_factory()"
                    ],
                    "fn": "register_with_read_factory",
                    "indexed": "PandaNode$200$register_with_read_factory",
                    "mangled": "_inCAAAAixvn",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "PandaNode$_$write_datagram(PandaNode *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void PandaNode::write_datagram(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$write_datagram",
                    "extern": [
                        "void",
                        "PandaNode$_$write_datagram(PandaNode *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "PandaNode$201$write_datagram",
                    "mangled": "_inCAAAAZIxB",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "manager"
                    ],
                    "args": [
                        "BamWriter *manager"
                    ],
                    "argt": [
                        "BamWriter*"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "BamWriter *"
                    ],
                    "c_ref": "PandaNode$_$update_bam_nested(PandaNode *param0, BamWriter *param1)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_update_bam_nested_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7570646174655f62616d5f6e657374656428706172616d31293b",
                    "cpp_ref": "virtual void PandaNode::update_bam_nested(BamWriter *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$update_bam_nested",
                    "extern": [
                        "void",
                        "PandaNode$_$update_bam_nested(PandaNode *param0, BamWriter *param1)"
                    ],
                    "fn": "update_bam_nested",
                    "indexed": "PandaNode$202$update_bam_nested",
                    "mangled": "_inCAAAA6DZU",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "PandaNode *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "PandaNode$_$write_recorder(PandaNode *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_write_recorder_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f7265636f7264657228706172616d312c202a706172616d32293b",
                    "cpp_ref": "void PandaNode::write_recorder(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$write_recorder",
                    "extern": [
                        "void",
                        "PandaNode$_$write_recorder(PandaNode *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_recorder",
                    "indexed": "PandaNode$203$write_recorder",
                    "mangled": "_inCAAAAB3Ta",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaNode$_$get_class_type()",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202850616e64614e6f64653a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle PandaNode::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_class_type",
                    "extern": [
                        "int",
                        "PandaNode$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "PandaNode$204$get_class_type",
                    "mangled": "_inCAAAA6Ap_",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaNode$_$init_type()",
                    "c_type": "void",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202050616e64614e6f64653a3a696e69745f7479706528293b",
                    "cpp_ref": "static void PandaNode::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaNode$_$init_type",
                    "extern": [
                        "void",
                        "PandaNode$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "PandaNode$205$init_type",
                    "mangled": "_inCAAAAlwrO",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode const *"
                    ],
                    "c_ref": "PandaNode$_$get_type(PandaNode const *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle PandaNode::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$get_type",
                    "extern": [
                        "int",
                        "PandaNode$_$get_type(PandaNode const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "PandaNode$206$get_type",
                    "mangled": "_inCAAAAZbhg",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaNode *"
                    ],
                    "c_ref": "PandaNode$_$force_init_type(PandaNode *param0)",
                    "c_type": "int",
                    "cn": "PandaNode",
                    "cni": "PandaNode_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle PandaNode::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaNode$_$force_init_type",
                    "extern": [
                        "int",
                        "PandaNode$_$force_init_type(PandaNode *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "PandaNode$207$force_init_type",
                    "mangled": "_inCAAAANJzF",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "PandaSystem": {
            "bases": [],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_version_string()",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_version_string_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d2050616e646153797374656d3a3a6765745f76657273696f6e5f737472696e6728293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string PandaSystem::get_version_string(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_version_string",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_version_string()"
                    ],
                    "fn": "get_version_string",
                    "indexed": "PandaSystem$1$get_version_string",
                    "mangled": "_inCAAAATzDo",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_package_version_string()",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_package_version_string_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d2050616e646153797374656d3a3a6765745f7061636b6167655f76657273696f6e5f737472696e6728293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string PandaSystem::get_package_version_string(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_package_version_string",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_package_version_string()"
                    ],
                    "fn": "get_package_version_string",
                    "indexed": "PandaSystem$2$get_package_version_string",
                    "mangled": "_inCAAAA3E_r",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_package_host_url()",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_package_host_url_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d2050616e646153797374656d3a3a6765745f7061636b6167655f686f73745f75726c28293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string PandaSystem::get_package_host_url(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_package_host_url",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_package_host_url()"
                    ],
                    "fn": "get_package_host_url",
                    "indexed": "PandaSystem$3$get_package_host_url",
                    "mangled": "_inCAAAAFXHg",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_p3d_coreapi_version_string()",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_p3d_coreapi_version_string_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d2050616e646153797374656d3a3a6765745f7033645f636f72656170695f76657273696f6e5f737472696e6728293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string PandaSystem::get_p3d_coreapi_version_string(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_p3d_coreapi_version_string",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_p3d_coreapi_version_string()"
                    ],
                    "fn": "get_p3d_coreapi_version_string",
                    "indexed": "PandaSystem$4$get_p3d_coreapi_version_string",
                    "mangled": "_inCAAAA_hDl",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_major_version()",
                    "c_type": "int",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_major_version_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2050616e646153797374656d3a3a6765745f6d616a6f725f76657273696f6e28293b",
                    "cpp_ref": "static int PandaSystem::get_major_version(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_major_version",
                    "extern": [
                        "int",
                        "PandaSystem$_$get_major_version()"
                    ],
                    "fn": "get_major_version",
                    "indexed": "PandaSystem$5$get_major_version",
                    "mangled": "_inCAAAAlpKc",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_minor_version()",
                    "c_type": "int",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_minor_version_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2050616e646153797374656d3a3a6765745f6d696e6f725f76657273696f6e28293b",
                    "cpp_ref": "static int PandaSystem::get_minor_version(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_minor_version",
                    "extern": [
                        "int",
                        "PandaSystem$_$get_minor_version()"
                    ],
                    "fn": "get_minor_version",
                    "indexed": "PandaSystem$6$get_minor_version",
                    "mangled": "_inCAAAAB4NU",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_sequence_version()",
                    "c_type": "int",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_sequence_version_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2050616e646153797374656d3a3a6765745f73657175656e63655f76657273696f6e28293b",
                    "cpp_ref": "static int PandaSystem::get_sequence_version(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_sequence_version",
                    "extern": [
                        "int",
                        "PandaSystem$_$get_sequence_version()"
                    ],
                    "fn": "get_sequence_version",
                    "indexed": "PandaSystem$7$get_sequence_version",
                    "mangled": "_inCAAAAoXlJ",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$is_official_version()",
                    "c_type": "bool",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_is_official_version_B_v",
                    "cni_args": "",
                    "cni_rt": "B",
                    "code": "2020202072657475726e2050616e646153797374656d3a3a69735f6f6666696369616c5f76657273696f6e28293b",
                    "cpp_ref": "static bool PandaSystem::is_official_version(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$is_official_version",
                    "extern": [
                        "bool",
                        "PandaSystem$_$is_official_version()"
                    ],
                    "fn": "is_official_version",
                    "indexed": "PandaSystem$8$is_official_version",
                    "mangled": "_inCAAAACKGJ",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_memory_alignment()",
                    "c_type": "int",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_memory_alignment_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2050616e646153797374656d3a3a6765745f6d656d6f72795f616c69676e6d656e7428293b",
                    "cpp_ref": "static int PandaSystem::get_memory_alignment(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_memory_alignment",
                    "extern": [
                        "int",
                        "PandaSystem$_$get_memory_alignment()"
                    ],
                    "fn": "get_memory_alignment",
                    "indexed": "PandaSystem$9$get_memory_alignment",
                    "mangled": "_inCAAAA_9Ms",
                    "ot": "int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_distributor()",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_distributor_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d2050616e646153797374656d3a3a6765745f6469737472696275746f7228293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string PandaSystem::get_distributor(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_distributor",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_distributor()"
                    ],
                    "fn": "get_distributor",
                    "indexed": "PandaSystem$10$get_distributor",
                    "mangled": "_inCAAAAu2tG",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_compiler()",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_compiler_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d2050616e646153797374656d3a3a6765745f636f6d70696c657228293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string PandaSystem::get_compiler(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_compiler",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_compiler()"
                    ],
                    "fn": "get_compiler",
                    "indexed": "PandaSystem$11$get_compiler",
                    "mangled": "_inCAAAAcM8j",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_build_date()",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_build_date_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d2050616e646153797374656d3a3a6765745f6275696c645f6461746528293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string PandaSystem::get_build_date(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_build_date",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_build_date()"
                    ],
                    "fn": "get_build_date",
                    "indexed": "PandaSystem$12$get_build_date",
                    "mangled": "_inCAAAAPPs0",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_git_commit()",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_git_commit_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d2050616e646153797374656d3a3a6765745f6769745f636f6d6d697428293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string PandaSystem::get_git_commit(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_git_commit",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_git_commit()"
                    ],
                    "fn": "get_git_commit",
                    "indexed": "PandaSystem$13$get_git_commit",
                    "mangled": "_inCAAAAxlmj",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_platform()",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_platform_s_v",
                    "cni_args": "",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d2050616e646153797374656d3a3a6765745f706c6174666f726d28293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "static std::string PandaSystem::get_platform(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_platform",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_platform()"
                    ],
                    "fn": "get_platform",
                    "indexed": "PandaSystem$14$get_platform",
                    "mangled": "_inCAAAA9Y1A",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "system"
                    ],
                    "args": [
                        "std::string const &system"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaSystem const *",
                        "char const *"
                    ],
                    "c_ref": "PandaSystem$_$has_system(PandaSystem const *param0, char const *param1)",
                    "c_type": "bool",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_has_system_B_ps",
                    "cni_args": "ps",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f73797374656d287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "bool PandaSystem::has_system(std::string const &system) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$has_system",
                    "extern": [
                        "bool",
                        "PandaSystem$_$has_system(PandaSystem const *param0, char const *param1)"
                    ],
                    "fn": "has_system",
                    "indexed": "PandaSystem$15$has_system",
                    "mangled": "_inCAAAAMn7K",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "PandaSystem const *"
                    ],
                    "c_ref": "PandaSystem$_$get_num_systems(PandaSystem const *param0)",
                    "c_type": "std::size_t",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_num_systems_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f73797374656d7328293b",
                    "cpp_ref": "std::size_t PandaSystem::get_num_systems(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_num_systems",
                    "extern": [
                        "std::size_t",
                        "PandaSystem$_$get_num_systems(PandaSystem const *param0)"
                    ],
                    "fn": "get_num_systems",
                    "indexed": "PandaSystem$16$get_num_systems",
                    "mangled": "_inCAAAAcMuF",
                    "ot": "std::size_t",
                    "rt": "std::size_t"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "std::size_t n"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "PandaSystem const *",
                        "std::size_t"
                    ],
                    "c_ref": "PandaSystem$_$get_system(PandaSystem const *param0, std::size_t param1)",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_system_s_pp",
                    "cni_args": "pp",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f73797374656d28706172616d31293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string PandaSystem::get_system(std::size_t n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_system",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_system(PandaSystem const *param0, std::size_t param1)"
                    ],
                    "fn": "get_system",
                    "indexed": "PandaSystem$17$get_system",
                    "mangled": "_inCAAAATSlk",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 2,
                    "argn": [
                        "system",
                        "tag"
                    ],
                    "args": [
                        "std::string const &system",
                        "std::string const &tag"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaSystem const *",
                        "char const *",
                        "char const *"
                    ],
                    "c_ref": "PandaSystem$_$get_system_tag(PandaSystem const *param0, char const *param1, char const *param2)",
                    "c_type": "char const *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_system_tag_s_pss",
                    "cni_args": "pss",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f73797374656d5f746167287374643a3a737472696e6728706172616d31292c207374643a3a737472696e6728706172616d3229293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "std::string PandaSystem::get_system_tag(std::string const &system, std::string const &tag) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_system_tag",
                    "extern": [
                        "char const *",
                        "PandaSystem$_$get_system_tag(PandaSystem const *param0, char const *param1, char const *param2)"
                    ],
                    "fn": "get_system_tag",
                    "indexed": "PandaSystem$18$get_system_tag",
                    "mangled": "_inCAAAAv2z_",
                    "ot": "std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 1,
                    "argn": [
                        "system"
                    ],
                    "args": [
                        "std::string const &system"
                    ],
                    "argt": [
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaSystem *",
                        "char const *"
                    ],
                    "c_ref": "PandaSystem$_$add_system(PandaSystem *param0, char const *param1)",
                    "c_type": "void",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_add_system_v_ps",
                    "cni_args": "ps",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6164645f73797374656d287374643a3a737472696e6728706172616d3129293b",
                    "cpp_ref": "void PandaSystem::add_system(std::string const &system)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$add_system",
                    "extern": [
                        "void",
                        "PandaSystem$_$add_system(PandaSystem *param0, char const *param1)"
                    ],
                    "fn": "add_system",
                    "indexed": "PandaSystem$19$add_system",
                    "mangled": "_inCAAAAu_FG",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 3,
                    "argn": [
                        "system",
                        "tag",
                        "value"
                    ],
                    "args": [
                        "std::string const &system",
                        "std::string const &tag",
                        "std::string const &value"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "PandaSystem *",
                        "char const *",
                        "char const *",
                        "char const *"
                    ],
                    "c_ref": "PandaSystem$_$set_system_tag(PandaSystem *param0, char const *param1, char const *param2, char const *param3)",
                    "c_type": "void",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_set_system_tag_v_psss",
                    "cni_args": "psss",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f73797374656d5f746167287374643a3a737472696e6728706172616d31292c207374643a3a737472696e6728706172616d32292c207374643a3a737472696e6728706172616d3329293b",
                    "cpp_ref": "void PandaSystem::set_system_tag(std::string const &system, std::string const &tag, std::string const &value)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$set_system_tag",
                    "extern": [
                        "void",
                        "PandaSystem$_$set_system_tag(PandaSystem *param0, char const *param1, char const *param2, char const *param3)"
                    ],
                    "fn": "set_system_tag",
                    "indexed": "PandaSystem$20$set_system_tag",
                    "mangled": "_inCAAAA3vBP",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pad"
                    ],
                    "args": [
                        "std::size_t pad"
                    ],
                    "argt": [
                        "std::size_t"
                    ],
                    "c_argv": [
                        "PandaSystem *",
                        "std::size_t"
                    ],
                    "c_ref": "PandaSystem$_$heap_trim(PandaSystem *param0, std::size_t param1)",
                    "c_type": "bool",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_heap_trim_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e686561705f7472696d28706172616d31293b",
                    "cpp_ref": "bool PandaSystem::heap_trim(std::size_t pad)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$heap_trim",
                    "extern": [
                        "bool",
                        "PandaSystem$_$heap_trim(PandaSystem *param0, std::size_t param1)"
                    ],
                    "fn": "heap_trim",
                    "indexed": "PandaSystem$21$heap_trim",
                    "mangled": "_inCAAAAp7d3",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "PandaSystem const *",
                        "std::ostream *"
                    ],
                    "c_ref": "PandaSystem$_$output(PandaSystem const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "void PandaSystem::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$output",
                    "extern": [
                        "void",
                        "PandaSystem$_$output(PandaSystem const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "PandaSystem$22$output",
                    "mangled": "_inCAAAAcfNj",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "PandaSystem const *",
                        "std::ostream *"
                    ],
                    "c_ref": "PandaSystem$_$write(PandaSystem const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_write_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7772697465282a706172616d31293b",
                    "cpp_ref": "void PandaSystem::write(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$write",
                    "extern": [
                        "void",
                        "PandaSystem$_$write(PandaSystem const *param0, std::ostream *param1)"
                    ],
                    "fn": "write",
                    "indexed": "PandaSystem$23$write",
                    "mangled": "_inCAAAA__e5",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_global_ptr()",
                    "c_type": "PandaSystem *",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_global_ptr_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2050616e646153797374656d3a3a6765745f676c6f62616c5f70747228293b",
                    "cpp_ref": "static PandaSystem *PandaSystem::get_global_ptr(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_global_ptr",
                    "extern": [
                        "PandaSystem *",
                        "PandaSystem$_$get_global_ptr()"
                    ],
                    "fn": "get_global_ptr",
                    "indexed": "PandaSystem$24$get_global_ptr",
                    "mangled": "_inCAAAAF_U4",
                    "ot": "PandaSystem*",
                    "rt": "PandaSystem"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$get_class_type()",
                    "c_type": "int",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202850616e646153797374656d3a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle PandaSystem::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$get_class_type",
                    "extern": [
                        "int",
                        "PandaSystem$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "PandaSystem$25$get_class_type",
                    "mangled": "_inCAAAAO5cE",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "PandaSystem$_$init_type()",
                    "c_type": "void",
                    "cn": "PandaSystem",
                    "cni": "PandaSystem_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202050616e646153797374656d3a3a696e69745f7479706528293b",
                    "cpp_ref": "static void PandaSystem::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "PandaSystem$_$init_type",
                    "extern": [
                        "void",
                        "PandaSystem$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "PandaSystem$26$init_type",
                    "mangled": "_inCAAAAx_BK",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "ReferenceCount": {
            "bases": [
                "MemoryBase"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount *"
                    ],
                    "c_ref": "ReferenceCount$_$upcast_to_MemoryBase(ReferenceCount *param0)",
                    "c_type": "MemoryBase *",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_upcast_to_MemoryBase_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20284d656d6f727942617365202a29706172616d303b",
                    "cpp_ref": "MemoryBase *ReferenceCount::upcast_to_MemoryBase(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$upcast_to_MemoryBase",
                    "extern": [
                        "MemoryBase *",
                        "ReferenceCount$_$upcast_to_MemoryBase(ReferenceCount *param0)"
                    ],
                    "fn": "upcast_to_MemoryBase",
                    "indexed": "ReferenceCount$1$upcast_to_MemoryBase",
                    "mangled": "_inCAAAA5zFh",
                    "ot": "MemoryBase*",
                    "rt": "MemoryBase"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount const *"
                    ],
                    "c_ref": "ReferenceCount$_$get_ref_count(ReferenceCount const *param0)",
                    "c_type": "int",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_get_ref_count_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7265665f636f756e7428293b",
                    "cpp_ref": "inline int ReferenceCount::get_ref_count(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$get_ref_count",
                    "extern": [
                        "int",
                        "ReferenceCount$_$get_ref_count(ReferenceCount const *param0)"
                    ],
                    "fn": "get_ref_count",
                    "indexed": "ReferenceCount$2$get_ref_count",
                    "mangled": "_inCAAAAP11_",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount const *"
                    ],
                    "c_ref": "ReferenceCount$_$ref(ReferenceCount const *param0)",
                    "c_type": "void",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_ref_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e72656628293b",
                    "cpp_ref": "inline void ReferenceCount::ref(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$ref",
                    "extern": [
                        "void",
                        "ReferenceCount$_$ref(ReferenceCount const *param0)"
                    ],
                    "fn": "ref",
                    "indexed": "ReferenceCount$3$ref",
                    "mangled": "_inCAAAAaS5_",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount const *"
                    ],
                    "c_ref": "ReferenceCount$_$unref(ReferenceCount const *param0)",
                    "c_type": "bool",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_unref_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e756e72656628293b",
                    "cpp_ref": "virtual inline bool ReferenceCount::unref(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$unref",
                    "extern": [
                        "bool",
                        "ReferenceCount$_$unref(ReferenceCount const *param0)"
                    ],
                    "fn": "unref",
                    "indexed": "ReferenceCount$4$unref",
                    "mangled": "_inCAAAAwyVy",
                    "ot": "virtual inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount const *"
                    ],
                    "c_ref": "ReferenceCount$_$test_ref_count_integrity(ReferenceCount const *param0)",
                    "c_type": "bool",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_test_ref_count_integrity_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e746573745f7265665f636f756e745f696e7465677269747928293b",
                    "cpp_ref": "inline bool ReferenceCount::test_ref_count_integrity(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$test_ref_count_integrity",
                    "extern": [
                        "bool",
                        "ReferenceCount$_$test_ref_count_integrity(ReferenceCount const *param0)"
                    ],
                    "fn": "test_ref_count_integrity",
                    "indexed": "ReferenceCount$5$test_ref_count_integrity",
                    "mangled": "_inCAAAAvpj2",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount const *"
                    ],
                    "c_ref": "ReferenceCount$_$test_ref_count_nonzero(ReferenceCount const *param0)",
                    "c_type": "bool",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_test_ref_count_nonzero_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e746573745f7265665f636f756e745f6e6f6e7a65726f28293b",
                    "cpp_ref": "inline bool ReferenceCount::test_ref_count_nonzero(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$test_ref_count_nonzero",
                    "extern": [
                        "bool",
                        "ReferenceCount$_$test_ref_count_nonzero(ReferenceCount const *param0)"
                    ],
                    "fn": "test_ref_count_nonzero",
                    "indexed": "ReferenceCount$6$test_ref_count_nonzero",
                    "mangled": "_inCAAAAtT6g",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount *"
                    ],
                    "c_ref": "ReferenceCount$_$local_object(ReferenceCount *param0)",
                    "c_type": "void",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_local_object_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f63616c5f6f626a65637428293b",
                    "cpp_ref": "inline void ReferenceCount::local_object(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$local_object",
                    "extern": [
                        "void",
                        "ReferenceCount$_$local_object(ReferenceCount *param0)"
                    ],
                    "fn": "local_object",
                    "indexed": "ReferenceCount$7$local_object",
                    "mangled": "_inCAAAATZpk",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount const *"
                    ],
                    "c_ref": "ReferenceCount$_$has_weak_list(ReferenceCount const *param0)",
                    "c_type": "bool",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_has_weak_list_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6861735f7765616b5f6c69737428293b",
                    "cpp_ref": "inline bool ReferenceCount::has_weak_list(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$has_weak_list",
                    "extern": [
                        "bool",
                        "ReferenceCount$_$has_weak_list(ReferenceCount const *param0)"
                    ],
                    "fn": "has_weak_list",
                    "indexed": "ReferenceCount$8$has_weak_list",
                    "mangled": "_inCAAAALXVj",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount const *"
                    ],
                    "c_ref": "ReferenceCount$_$get_weak_list(ReferenceCount const *param0)",
                    "c_type": "WeakReferenceList *",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_get_weak_list_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7765616b5f6c69737428293b",
                    "cpp_ref": "inline WeakReferenceList *ReferenceCount::get_weak_list(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$get_weak_list",
                    "extern": [
                        "WeakReferenceList *",
                        "ReferenceCount$_$get_weak_list(ReferenceCount const *param0)"
                    ],
                    "fn": "get_weak_list",
                    "indexed": "ReferenceCount$9$get_weak_list",
                    "mangled": "_inCAAAAjKVW",
                    "ot": "inline WeakReferenceList*",
                    "rt": "WeakReferenceList"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount *"
                    ],
                    "c_ref": "ReferenceCount$_$weak_ref(ReferenceCount *param0)",
                    "c_type": "WeakReferenceList *",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_weak_ref_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e7765616b5f72656628293b",
                    "cpp_ref": "inline WeakReferenceList *ReferenceCount::weak_ref(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$weak_ref",
                    "extern": [
                        "WeakReferenceList *",
                        "ReferenceCount$_$weak_ref(ReferenceCount *param0)"
                    ],
                    "fn": "weak_ref",
                    "indexed": "ReferenceCount$10$weak_ref",
                    "mangled": "_inCAAAADxOx",
                    "ot": "inline WeakReferenceList*",
                    "rt": "WeakReferenceList"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount *"
                    ],
                    "c_ref": "ReferenceCount$_$weak_unref(ReferenceCount *param0)",
                    "c_type": "void",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_weak_unref_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7765616b5f756e72656628293b",
                    "cpp_ref": "inline void ReferenceCount::weak_unref(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$weak_unref",
                    "extern": [
                        "void",
                        "ReferenceCount$_$weak_unref(ReferenceCount *param0)"
                    ],
                    "fn": "weak_unref",
                    "indexed": "ReferenceCount$11$weak_unref",
                    "mangled": "_inCAAAALN15",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "ReferenceCount const *"
                    ],
                    "c_ref": "ReferenceCount$_$ref_if_nonzero(ReferenceCount const *param0)",
                    "c_type": "bool",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_ref_if_nonzero_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e7265665f69665f6e6f6e7a65726f28293b",
                    "cpp_ref": "inline bool ReferenceCount::ref_if_nonzero(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$ref_if_nonzero",
                    "extern": [
                        "bool",
                        "ReferenceCount$_$ref_if_nonzero(ReferenceCount const *param0)"
                    ],
                    "fn": "ref_if_nonzero",
                    "indexed": "ReferenceCount$12$ref_if_nonzero",
                    "mangled": "_inCAAAA5NW5",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "ReferenceCount$_$get_class_type()",
                    "c_type": "int",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20285265666572656e6365436f756e743a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle ReferenceCount::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$get_class_type",
                    "extern": [
                        "int",
                        "ReferenceCount$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "ReferenceCount$13$get_class_type",
                    "mangled": "_inCAAAAn3ZO",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "ReferenceCount$_$init_type()",
                    "c_type": "void",
                    "cn": "ReferenceCount",
                    "cni": "ReferenceCount_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "202020205265666572656e6365436f756e743a3a696e69745f7479706528293b",
                    "cpp_ref": "static void ReferenceCount::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "ReferenceCount$_$init_type",
                    "extern": [
                        "void",
                        "ReferenceCount$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "ReferenceCount$14$init_type",
                    "mangled": "_inCAAAAssbs",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "Thread": {
            "bases": [
                "TypedReferenceCount",
                "Namable"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread *"
                    ],
                    "c_ref": "Thread$_$upcast_to_TypedReferenceCount(Thread *param0)",
                    "c_type": "TypedReferenceCount *",
                    "cn": "Thread",
                    "cni": "Thread_C_upcast_to_TypedReferenceCount_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202854797065645265666572656e6365436f756e74202a29706172616d303b",
                    "cpp_ref": "TypedReferenceCount *Thread::upcast_to_TypedReferenceCount(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$upcast_to_TypedReferenceCount",
                    "extern": [
                        "TypedReferenceCount *",
                        "Thread$_$upcast_to_TypedReferenceCount(Thread *param0)"
                    ],
                    "fn": "upcast_to_TypedReferenceCount",
                    "indexed": "Thread$1$upcast_to_TypedReferenceCount",
                    "mangled": "_inCAAAAm7Dx",
                    "ot": "TypedReferenceCount*",
                    "rt": "TypedReferenceCount"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread *"
                    ],
                    "c_ref": "Thread$_$upcast_to_Namable(Thread *param0)",
                    "c_type": "Namable *",
                    "cn": "Thread",
                    "cni": "Thread_C_upcast_to_Namable_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20284e616d61626c65202a29706172616d303b",
                    "cpp_ref": "Namable *Thread::upcast_to_Namable(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$upcast_to_Namable",
                    "extern": [
                        "Namable *",
                        "Thread$_$upcast_to_Namable(Thread *param0)"
                    ],
                    "fn": "upcast_to_Namable",
                    "indexed": "Thread$2$upcast_to_Namable",
                    "mangled": "_inCAAAAlnUX",
                    "ot": "Namable*",
                    "rt": "Namable"
                },
                {
                    "argc": 2,
                    "argn": [
                        "name",
                        "sync_name"
                    ],
                    "args": [
                        "std::string const &name",
                        "std::string const &sync_name"
                    ],
                    "argt": [
                        "std::string const&",
                        "std::string const&"
                    ],
                    "c_argv": [
                        "char const *",
                        "char const *"
                    ],
                    "c_ref": "Thread$_$bind_thread(char const *param0, char const *param1)",
                    "c_type": "PointerTo< Thread > *",
                    "cn": "Thread",
                    "cni": "Thread_C_bind_thread_p_ss",
                    "cni_args": "ss",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e657720506f696e746572546f3c20546872656164203e285468726561643a3a62696e645f746872656164287374643a3a737472696e6728706172616d30292c207374643a3a737472696e6728706172616d312929293b",
                    "cpp_ref": "static PointerTo< Thread > Thread::bind_thread(std::string const &name, std::string const &sync_name)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$bind_thread",
                    "extern": [
                        "PointerTo< Thread > *",
                        "Thread$_$bind_thread(char const *param0, char const *param1)"
                    ],
                    "fn": "bind_thread",
                    "indexed": "Thread$3$bind_thread",
                    "mangled": "_inCAAAAXWfm",
                    "ot": "PointerTo< Thread >",
                    "rt": "Thread"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$get_sync_name(Thread const *param0)",
                    "c_type": "char const *",
                    "cn": "Thread",
                    "cni": "Thread_C_get_sync_name_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f73796e635f6e616d652829292e635f73747228293b",
                    "cpp_ref": "inline std::string const &Thread::get_sync_name(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$get_sync_name",
                    "extern": [
                        "char const *",
                        "Thread$_$get_sync_name(Thread const *param0)"
                    ],
                    "fn": "get_sync_name",
                    "indexed": "Thread$4$get_sync_name",
                    "mangled": "_inCAAAAjq87",
                    "ot": "inline std::string const&",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$get_pstats_index(Thread const *param0)",
                    "c_type": "int",
                    "cn": "Thread",
                    "cni": "Thread_C_get_pstats_index_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7073746174735f696e64657828293b",
                    "cpp_ref": "inline int Thread::get_pstats_index(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$get_pstats_index",
                    "extern": [
                        "int",
                        "Thread$_$get_pstats_index(Thread const *param0)"
                    ],
                    "fn": "get_pstats_index",
                    "indexed": "Thread$5$get_pstats_index",
                    "mangled": "_inCAAAAH7ri",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$get_python_index(Thread const *param0)",
                    "c_type": "int",
                    "cn": "Thread",
                    "cni": "Thread_C_get_python_index_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f707974686f6e5f696e64657828293b",
                    "cpp_ref": "inline int Thread::get_python_index(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$get_python_index",
                    "extern": [
                        "int",
                        "Thread$_$get_python_index(Thread const *param0)"
                    ],
                    "fn": "get_python_index",
                    "indexed": "Thread$6$get_python_index",
                    "mangled": "_inCAAAApgPT",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$get_unique_id(Thread const *param0)",
                    "c_type": "char const *",
                    "cn": "Thread",
                    "cni": "Thread_C_get_unique_id_s_p",
                    "cni_args": "p",
                    "cni_rt": "s",
                    "code": "2020202073746174696320737472696e6720737472696e675f686f6c646572203d20282a706172616d30292e6765745f756e697175655f696428293b0a2020202072657475726e20737472696e675f686f6c6465722e635f73747228293b",
                    "cpp_ref": "inline std::string Thread::get_unique_id(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$get_unique_id",
                    "extern": [
                        "char const *",
                        "Thread$_$get_unique_id(Thread const *param0)"
                    ],
                    "fn": "get_unique_id",
                    "indexed": "Thread$7$get_unique_id",
                    "mangled": "_inCAAAAgw2i",
                    "ot": "inline std::string",
                    "rt": "std::string"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$get_pipeline_stage(Thread const *param0)",
                    "c_type": "int",
                    "cn": "Thread",
                    "cni": "Thread_C_get_pipeline_stage_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f706970656c696e655f737461676528293b",
                    "cpp_ref": "inline int Thread::get_pipeline_stage(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$get_pipeline_stage",
                    "extern": [
                        "int",
                        "Thread$_$get_pipeline_stage(Thread const *param0)"
                    ],
                    "fn": "get_pipeline_stage",
                    "indexed": "Thread$8$get_pipeline_stage",
                    "mangled": "_inCAAAAmKhn",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pipeline_stage"
                    ],
                    "args": [
                        "int pipeline_stage"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "Thread *",
                        "int"
                    ],
                    "c_ref": "Thread$_$set_pipeline_stage(Thread *param0, int param1)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_set_pipeline_stage_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706970656c696e655f737461676528706172616d31293b",
                    "cpp_ref": "void Thread::set_pipeline_stage(int pipeline_stage)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$set_pipeline_stage",
                    "extern": [
                        "void",
                        "Thread$_$set_pipeline_stage(Thread *param0, int param1)"
                    ],
                    "fn": "set_pipeline_stage",
                    "indexed": "Thread$9$set_pipeline_stage",
                    "mangled": "_inCAAAAiVSW",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "min_pipeline_stage"
                    ],
                    "args": [
                        "int min_pipeline_stage"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "Thread *",
                        "int"
                    ],
                    "c_ref": "Thread$_$set_min_pipeline_stage(Thread *param0, int param1)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_set_min_pipeline_stage_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6d696e5f706970656c696e655f737461676528706172616d31293b",
                    "cpp_ref": "inline void Thread::set_min_pipeline_stage(int min_pipeline_stage)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$set_min_pipeline_stage",
                    "extern": [
                        "void",
                        "Thread$_$set_min_pipeline_stage(Thread *param0, int param1)"
                    ],
                    "fn": "set_min_pipeline_stage",
                    "indexed": "Thread$10$set_min_pipeline_stage",
                    "mangled": "_inCAAAAOmlk",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$get_main_thread()",
                    "c_type": "Thread *",
                    "cn": "Thread",
                    "cni": "Thread_C_get_main_thread_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e205468726561643a3a6765745f6d61696e5f74687265616428293b",
                    "cpp_ref": "static inline Thread *Thread::get_main_thread(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$get_main_thread",
                    "extern": [
                        "Thread *",
                        "Thread$_$get_main_thread()"
                    ],
                    "fn": "get_main_thread",
                    "indexed": "Thread$11$get_main_thread",
                    "mangled": "_inCAAAAY2Dw",
                    "ot": "inline Thread*",
                    "rt": "Thread"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$get_external_thread()",
                    "c_type": "Thread *",
                    "cn": "Thread",
                    "cni": "Thread_C_get_external_thread_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e205468726561643a3a6765745f65787465726e616c5f74687265616428293b",
                    "cpp_ref": "static inline Thread *Thread::get_external_thread(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$get_external_thread",
                    "extern": [
                        "Thread *",
                        "Thread$_$get_external_thread()"
                    ],
                    "fn": "get_external_thread",
                    "indexed": "Thread$12$get_external_thread",
                    "mangled": "_inCAAAAD1UC",
                    "ot": "inline Thread*",
                    "rt": "Thread"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$get_current_thread()",
                    "c_type": "Thread *",
                    "cn": "Thread",
                    "cni": "Thread_C_get_current_thread_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e205468726561643a3a6765745f63757272656e745f74687265616428293b",
                    "cpp_ref": "static inline Thread *Thread::get_current_thread(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$get_current_thread",
                    "extern": [
                        "Thread *",
                        "Thread$_$get_current_thread()"
                    ],
                    "fn": "get_current_thread",
                    "indexed": "Thread$13$get_current_thread",
                    "mangled": "_inCAAAA3TiV",
                    "ot": "inline Thread*",
                    "rt": "Thread"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$get_current_pipeline_stage()",
                    "c_type": "int",
                    "cn": "Thread",
                    "cni": "Thread_C_get_current_pipeline_stage_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e205468726561643a3a6765745f63757272656e745f706970656c696e655f737461676528293b",
                    "cpp_ref": "static inline int Thread::get_current_pipeline_stage(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$get_current_pipeline_stage",
                    "extern": [
                        "int",
                        "Thread$_$get_current_pipeline_stage()"
                    ],
                    "fn": "get_current_pipeline_stage",
                    "indexed": "Thread$14$get_current_pipeline_stage",
                    "mangled": "_inCAAAAqF2R",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$is_threading_supported()",
                    "c_type": "bool",
                    "cn": "Thread",
                    "cni": "Thread_C_is_threading_supported_B_v",
                    "cni_args": "",
                    "cni_rt": "B",
                    "code": "2020202072657475726e205468726561643a3a69735f746872656164696e675f737570706f7274656428293b",
                    "cpp_ref": "static inline bool Thread::is_threading_supported(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$is_threading_supported",
                    "extern": [
                        "bool",
                        "Thread$_$is_threading_supported()"
                    ],
                    "fn": "is_threading_supported",
                    "indexed": "Thread$15$is_threading_supported",
                    "mangled": "_inCAAAA5vLQ",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$is_true_threads()",
                    "c_type": "bool",
                    "cn": "Thread",
                    "cni": "Thread_C_is_true_threads_B_v",
                    "cni_args": "",
                    "cni_rt": "B",
                    "code": "2020202072657475726e205468726561643a3a69735f747275655f7468726561647328293b",
                    "cpp_ref": "static inline bool Thread::is_true_threads(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$is_true_threads",
                    "extern": [
                        "bool",
                        "Thread$_$is_true_threads()"
                    ],
                    "fn": "is_true_threads",
                    "indexed": "Thread$16$is_true_threads",
                    "mangled": "_inCAAAAyg5j",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$is_simple_threads()",
                    "c_type": "bool",
                    "cn": "Thread",
                    "cni": "Thread_C_is_simple_threads_B_v",
                    "cni_args": "",
                    "cni_rt": "B",
                    "code": "2020202072657475726e205468726561643a3a69735f73696d706c655f7468726561647328293b",
                    "cpp_ref": "static inline bool Thread::is_simple_threads(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$is_simple_threads",
                    "extern": [
                        "bool",
                        "Thread$_$is_simple_threads()"
                    ],
                    "fn": "is_simple_threads",
                    "indexed": "Thread$17$is_simple_threads",
                    "mangled": "_inCAAAAQd5Y",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "seconds"
                    ],
                    "args": [
                        "double seconds"
                    ],
                    "argt": [
                        "double"
                    ],
                    "c_argv": [
                        "double"
                    ],
                    "c_ref": "Thread$_$sleep(double param0)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_sleep_v_d",
                    "cni_args": "d",
                    "cni_rt": "v",
                    "code": "202020205468726561643a3a736c65657028706172616d30293b",
                    "cpp_ref": "static inline void Thread::sleep(double seconds)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$sleep",
                    "extern": [
                        "void",
                        "Thread$_$sleep(double param0)"
                    ],
                    "fn": "sleep",
                    "indexed": "Thread$18$sleep",
                    "mangled": "_inCAAAAEK72",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$force_yield()",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_force_yield_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "202020205468726561643a3a666f7263655f7969656c6428293b",
                    "cpp_ref": "static inline void Thread::force_yield(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$force_yield",
                    "extern": [
                        "void",
                        "Thread$_$force_yield()"
                    ],
                    "fn": "force_yield",
                    "indexed": "Thread$19$force_yield",
                    "mangled": "_inCAAAAA_Rs",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$consider_yield()",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_consider_yield_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "202020205468726561643a3a636f6e73696465725f7969656c6428293b",
                    "cpp_ref": "static inline void Thread::consider_yield(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$consider_yield",
                    "extern": [
                        "void",
                        "Thread$_$consider_yield()"
                    ],
                    "fn": "consider_yield",
                    "indexed": "Thread$20$consider_yield",
                    "mangled": "_inCAAAAMrcC",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "Thread const *",
                        "std::ostream *"
                    ],
                    "c_ref": "Thread$_$output(Thread const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_output_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f7574707574282a706172616d31293b",
                    "cpp_ref": "virtual void Thread::output(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$output",
                    "extern": [
                        "void",
                        "Thread$_$output(Thread const *param0, std::ostream *param1)"
                    ],
                    "fn": "output",
                    "indexed": "Thread$21$output",
                    "mangled": "_inCAAAAUeB8",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "Thread const *",
                        "std::ostream *"
                    ],
                    "c_ref": "Thread$_$output_blocker(Thread const *param0, std::ostream *param1)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_output_blocker_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6f75747075745f626c6f636b6572282a706172616d31293b",
                    "cpp_ref": "void Thread::output_blocker(std::ostream &out) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$output_blocker",
                    "extern": [
                        "void",
                        "Thread$_$output_blocker(Thread const *param0, std::ostream *param1)"
                    ],
                    "fn": "output_blocker",
                    "indexed": "Thread$22$output_blocker",
                    "mangled": "_inCAAAA8roA",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "out"
                    ],
                    "args": [
                        "std::ostream &out"
                    ],
                    "argt": [
                        "std::ostream&"
                    ],
                    "c_argv": [
                        "std::ostream *"
                    ],
                    "c_ref": "Thread$_$write_status(std::ostream *param0)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_write_status_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "202020205468726561643a3a77726974655f737461747573282a706172616d30293b",
                    "cpp_ref": "static void Thread::write_status(std::ostream &out)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$write_status",
                    "extern": [
                        "void",
                        "Thread$_$write_status(std::ostream *param0)"
                    ],
                    "fn": "write_status",
                    "indexed": "Thread$23$write_status",
                    "mangled": "_inCAAAAw3QC",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$is_started(Thread const *param0)",
                    "c_type": "bool",
                    "cn": "Thread",
                    "cni": "Thread_C_is_started_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f7374617274656428293b",
                    "cpp_ref": "inline bool Thread::is_started(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$is_started",
                    "extern": [
                        "bool",
                        "Thread$_$is_started(Thread const *param0)"
                    ],
                    "fn": "is_started",
                    "indexed": "Thread$24$is_started",
                    "mangled": "_inCAAAA9pHH",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$is_joinable(Thread const *param0)",
                    "c_type": "bool",
                    "cn": "Thread",
                    "cni": "Thread_C_is_joinable_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f6a6f696e61626c6528293b",
                    "cpp_ref": "inline bool Thread::is_joinable(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$is_joinable",
                    "extern": [
                        "bool",
                        "Thread$_$is_joinable(Thread const *param0)"
                    ],
                    "fn": "is_joinable",
                    "indexed": "Thread$25$is_joinable",
                    "mangled": "_inCAAAAfYmX",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "priority",
                        "joinable"
                    ],
                    "args": [
                        "ThreadPriority priority",
                        "bool joinable"
                    ],
                    "argt": [
                        "ThreadPriority",
                        "bool"
                    ],
                    "c_argv": [
                        "Thread *",
                        "ThreadPriority",
                        "bool"
                    ],
                    "c_ref": "Thread$_$start(Thread *param0, ThreadPriority param1, bool param2)",
                    "c_type": "bool",
                    "cn": "Thread",
                    "cni": "Thread_C_start_B_ppB",
                    "cni_args": "ppB",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e737461727428706172616d312c20706172616d32293b",
                    "cpp_ref": "bool Thread::start(ThreadPriority priority, bool joinable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$start",
                    "extern": [
                        "bool",
                        "Thread$_$start(Thread *param0, ThreadPriority param1, bool param2)"
                    ],
                    "fn": "start",
                    "indexed": "Thread$26$start",
                    "mangled": "_inCAAAA6vf2",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread *"
                    ],
                    "c_ref": "Thread$_$join(Thread *param0)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_join_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6a6f696e28293b",
                    "cpp_ref": "inline void Thread::join(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$join",
                    "extern": [
                        "void",
                        "Thread$_$join(Thread *param0)"
                    ],
                    "fn": "join",
                    "indexed": "Thread$27$join",
                    "mangled": "_inCAAAAz6lV",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread *"
                    ],
                    "c_ref": "Thread$_$preempt(Thread *param0)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_preempt_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e707265656d707428293b",
                    "cpp_ref": "inline void Thread::preempt(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$preempt",
                    "extern": [
                        "void",
                        "Thread$_$preempt(Thread *param0)"
                    ],
                    "fn": "preempt",
                    "indexed": "Thread$28$preempt",
                    "mangled": "_inCAAAAEmqG",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$get_current_task(Thread const *param0)",
                    "c_type": "TypedReferenceCount *",
                    "cn": "Thread",
                    "cni": "Thread_C_get_current_task_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f63757272656e745f7461736b28293b",
                    "cpp_ref": "inline TypedReferenceCount *Thread::get_current_task(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$get_current_task",
                    "extern": [
                        "TypedReferenceCount *",
                        "Thread$_$get_current_task(Thread const *param0)"
                    ],
                    "fn": "get_current_task",
                    "indexed": "Thread$29$get_current_task",
                    "mangled": "_inCAAAAHhFW",
                    "ot": "inline TypedReferenceCount*",
                    "rt": "TypedReferenceCount"
                },
                {
                    "argc": 1,
                    "argn": [
                        "index"
                    ],
                    "args": [
                        "int index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "Thread *",
                        "int"
                    ],
                    "c_ref": "Thread$_$set_python_index(Thread *param0, int param1)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_set_python_index_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f707974686f6e5f696e64657828706172616d31293b",
                    "cpp_ref": "inline void Thread::set_python_index(int index)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$set_python_index",
                    "extern": [
                        "void",
                        "Thread$_$set_python_index(Thread *param0, int param1)"
                    ],
                    "fn": "set_python_index",
                    "indexed": "Thread$30$set_python_index",
                    "mangled": "_inCAAAAE6VW",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$prepare_for_exit()",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_prepare_for_exit_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "202020205468726561643a3a707265706172655f666f725f6578697428293b",
                    "cpp_ref": "static inline void Thread::prepare_for_exit(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$prepare_for_exit",
                    "extern": [
                        "void",
                        "Thread$_$prepare_for_exit()"
                    ],
                    "fn": "prepare_for_exit",
                    "indexed": "Thread$31$prepare_for_exit",
                    "mangled": "_inCAAAAwYwm",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pstats_index"
                    ],
                    "args": [
                        "int pstats_index"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "Thread *",
                        "int"
                    ],
                    "c_ref": "Thread$_$set_pstats_index(Thread *param0, int param1)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_set_pstats_index_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7073746174735f696e64657828706172616d31293b",
                    "cpp_ref": "inline void Thread::set_pstats_index(int pstats_index)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$set_pstats_index",
                    "extern": [
                        "void",
                        "Thread$_$set_pstats_index(Thread *param0, int param1)"
                    ],
                    "fn": "set_pstats_index",
                    "indexed": "Thread$32$set_pstats_index",
                    "mangled": "_inCAAAA77wl",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "pstats_callback"
                    ],
                    "args": [
                        "Thread::PStatsCallback *pstats_callback"
                    ],
                    "argt": [
                        "Thread::PStatsCallback*"
                    ],
                    "c_argv": [
                        "Thread *",
                        "Thread::PStatsCallback *"
                    ],
                    "c_ref": "Thread$_$set_pstats_callback(Thread *param0, Thread::PStatsCallback *param1)",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_set_pstats_callback_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7073746174735f63616c6c6261636b28706172616d31293b",
                    "cpp_ref": "inline void Thread::set_pstats_callback(Thread::PStatsCallback *pstats_callback)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$set_pstats_callback",
                    "extern": [
                        "void",
                        "Thread$_$set_pstats_callback(Thread *param0, Thread::PStatsCallback *param1)"
                    ],
                    "fn": "set_pstats_callback",
                    "indexed": "Thread$33$set_pstats_callback",
                    "mangled": "_inCAAAADnHA",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$get_pstats_callback(Thread const *param0)",
                    "c_type": "Thread::PStatsCallback *",
                    "cn": "Thread",
                    "cni": "Thread_C_get_pstats_callback_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7073746174735f63616c6c6261636b28293b",
                    "cpp_ref": "inline Thread::PStatsCallback *Thread::get_pstats_callback(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$get_pstats_callback",
                    "extern": [
                        "Thread::PStatsCallback *",
                        "Thread$_$get_pstats_callback(Thread const *param0)"
                    ],
                    "fn": "get_pstats_callback",
                    "indexed": "Thread$34$get_pstats_callback",
                    "mangled": "_inCAAAAFEBN",
                    "ot": "inline Thread::PStatsCallback*",
                    "rt": "Thread::PStatsCallback"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$get_class_type()",
                    "c_type": "int",
                    "cn": "Thread",
                    "cni": "Thread_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20285468726561643a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle Thread::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$get_class_type",
                    "extern": [
                        "int",
                        "Thread$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "Thread$35$get_class_type",
                    "mangled": "_inCAAAA_lqM",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "Thread$_$init_type()",
                    "c_type": "void",
                    "cn": "Thread",
                    "cni": "Thread_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "202020205468726561643a3a696e69745f7479706528293b",
                    "cpp_ref": "static void Thread::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "Thread$_$init_type",
                    "extern": [
                        "void",
                        "Thread$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "Thread$36$init_type",
                    "mangled": "_inCAAAAx9dP",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread const *"
                    ],
                    "c_ref": "Thread$_$get_type(Thread const *param0)",
                    "c_type": "int",
                    "cn": "Thread",
                    "cni": "Thread_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle Thread::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$get_type",
                    "extern": [
                        "int",
                        "Thread$_$get_type(Thread const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "Thread$37$get_type",
                    "mangled": "_inCAAAAxNNE",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "Thread *"
                    ],
                    "c_ref": "Thread$_$force_init_type(Thread *param0)",
                    "c_type": "int",
                    "cn": "Thread",
                    "cni": "Thread_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle Thread::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "Thread$_$force_init_type",
                    "extern": [
                        "int",
                        "Thread$_$force_init_type(Thread *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "Thread$38$force_init_type",
                    "mangled": "_inCAAAAGz5S",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "TypedObject": {
            "bases": [
                "MemoryBase"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedObject *"
                    ],
                    "c_ref": "TypedObject$_$upcast_to_MemoryBase(TypedObject *param0)",
                    "c_type": "MemoryBase *",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_upcast_to_MemoryBase_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20284d656d6f727942617365202a29706172616d303b",
                    "cpp_ref": "MemoryBase *TypedObject::upcast_to_MemoryBase(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedObject$_$upcast_to_MemoryBase",
                    "extern": [
                        "MemoryBase *",
                        "TypedObject$_$upcast_to_MemoryBase(TypedObject *param0)"
                    ],
                    "fn": "upcast_to_MemoryBase",
                    "indexed": "TypedObject$1$upcast_to_MemoryBase",
                    "mangled": "_inCAAAAr4rO",
                    "ot": "MemoryBase*",
                    "rt": "MemoryBase"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedObject const *"
                    ],
                    "c_ref": "TypedObject$_$get_type(TypedObject const *param0)",
                    "c_type": "int",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle TypedObject::get_type(void) const = 0",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedObject$_$get_type",
                    "extern": [
                        "int",
                        "TypedObject$_$get_type(TypedObject const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "TypedObject$2$get_type",
                    "mangled": "_inCAAAA1uxI",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedObject const *"
                    ],
                    "c_ref": "TypedObject$_$get_type_index(TypedObject const *param0)",
                    "c_type": "int",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_get_type_index_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f747970655f696e64657828293b",
                    "cpp_ref": "inline int TypedObject::get_type_index(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedObject$_$get_type_index",
                    "extern": [
                        "int",
                        "TypedObject$_$get_type_index(TypedObject const *param0)"
                    ],
                    "fn": "get_type_index",
                    "indexed": "TypedObject$3$get_type_index",
                    "mangled": "_inCAAAAm7AU",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "handle"
                    ],
                    "args": [
                        "TypeHandle handle"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "TypedObject const *",
                        "int"
                    ],
                    "c_ref": "TypedObject$_$is_of_type(TypedObject const *param0, int param1)",
                    "c_type": "bool",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_is_of_type_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f6f665f74797065285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline bool TypedObject::is_of_type(TypeHandle handle) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedObject$_$is_of_type",
                    "extern": [
                        "bool",
                        "TypedObject$_$is_of_type(TypedObject const *param0, int param1)"
                    ],
                    "fn": "is_of_type",
                    "indexed": "TypedObject$4$is_of_type",
                    "mangled": "_inCAAAAnFKt",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "handle"
                    ],
                    "args": [
                        "TypeHandle handle"
                    ],
                    "argt": [
                        "TypeHandle"
                    ],
                    "c_argv": [
                        "TypedObject const *",
                        "int"
                    ],
                    "c_ref": "TypedObject$_$is_exact_type(TypedObject const *param0, int param1)",
                    "c_type": "bool",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_is_exact_type_B_pi",
                    "cni_args": "pi",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e69735f65786163745f74797065285479706548616e646c653a3a66726f6d5f696e64657828706172616d3129293b",
                    "cpp_ref": "inline bool TypedObject::is_exact_type(TypeHandle handle) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedObject$_$is_exact_type",
                    "extern": [
                        "bool",
                        "TypedObject$_$is_exact_type(TypedObject const *param0, int param1)"
                    ],
                    "fn": "is_exact_type",
                    "indexed": "TypedObject$5$is_exact_type",
                    "mangled": "_inCAAAA7Xzz",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "arg1"
                    ],
                    "args": [
                        "set< int > const &"
                    ],
                    "argt": [
                        "set< int > const&"
                    ],
                    "c_argv": [
                        "TypedObject const *",
                        "set< int > const *"
                    ],
                    "c_ref": "TypedObject$_$get_best_parent_from_Set(TypedObject const *param0, set< int > const *param1)",
                    "c_type": "int",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_get_best_parent_from_Set_i_pp",
                    "cni_args": "pp",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f626573745f706172656e745f66726f6d5f536574282a706172616d31293b",
                    "cpp_ref": "inline int TypedObject::get_best_parent_from_Set(set< int > const &) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedObject$_$get_best_parent_from_Set",
                    "extern": [
                        "int",
                        "TypedObject$_$get_best_parent_from_Set(TypedObject const *param0, set< int > const *param1)"
                    ],
                    "fn": "get_best_parent_from_Set",
                    "indexed": "TypedObject$6$get_best_parent_from_Set",
                    "mangled": "_inCAAAA6oYG",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedObject *"
                    ],
                    "c_ref": "TypedObject$_$force_init_type(TypedObject *param0)",
                    "c_type": "int",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle TypedObject::force_init_type(void) = 0",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedObject$_$force_init_type",
                    "extern": [
                        "int",
                        "TypedObject$_$force_init_type(TypedObject *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "TypedObject$7$force_init_type",
                    "mangled": "_inCAAAA_bFm",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedObject *"
                    ],
                    "c_ref": "TypedObject$_$as_typed_object(TypedObject *param0)",
                    "c_type": "TypedObject *",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_as_typed_object_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e61735f74797065645f6f626a65637428293b",
                    "cpp_ref": "inline TypedObject *TypedObject::as_typed_object(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedObject$_$as_typed_object",
                    "extern": [
                        "TypedObject *",
                        "TypedObject$_$as_typed_object(TypedObject *param0)"
                    ],
                    "fn": "as_typed_object",
                    "indexed": "TypedObject$8$as_typed_object",
                    "mangled": "_inCAAAARuCO",
                    "ot": "inline TypedObject*",
                    "rt": "TypedObject"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedObject const *"
                    ],
                    "c_ref": "TypedObject$_$as_typed_object(TypedObject const *param0)",
                    "c_type": "TypedObject const *",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_as_typed_object_p_p_1_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e61735f74797065645f6f626a65637428293b",
                    "cpp_ref": "inline TypedObject const *TypedObject::as_typed_object(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedObject$_$as_typed_object",
                    "extern": [
                        "TypedObject const *",
                        "TypedObject$_$as_typed_object(TypedObject const *param0)"
                    ],
                    "fn": "as_typed_object",
                    "indexed": "TypedObject$9$as_typed_object",
                    "mangled": "_inCAAAAWG8l",
                    "ot": "inline TypedObject const*",
                    "rt": "TypedObject"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "TypedObject$_$get_class_type()",
                    "c_type": "int",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202854797065644f626a6563743a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle TypedObject::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "TypedObject$_$get_class_type",
                    "extern": [
                        "int",
                        "TypedObject$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "TypedObject$10$get_class_type",
                    "mangled": "_inCAAAAEGqZ",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "TypedObject$_$init_type()",
                    "c_type": "void",
                    "cn": "TypedObject",
                    "cni": "TypedObject_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202054797065644f626a6563743a3a696e69745f7479706528293b",
                    "cpp_ref": "static void TypedObject::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "TypedObject$_$init_type",
                    "extern": [
                        "void",
                        "TypedObject$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "TypedObject$11$init_type",
                    "mangled": "_inCAAAAS8Pf",
                    "ot": "void",
                    "rt": "void"
                }
            ]
        },
        "TypedReferenceCount": {
            "bases": [
                "TypedObject",
                "ReferenceCount"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedReferenceCount *"
                    ],
                    "c_ref": "TypedReferenceCount$_$downcast_to_Thread(TypedReferenceCount *param0)",
                    "c_type": "Thread *",
                    "cn": "TypedReferenceCount",
                    "cni": "TypedReferenceCount_C_downcast_to_Thread_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2028546872656164202a29706172616d303b",
                    "cpp_ref": "Thread *TypedReferenceCount::downcast_to_Thread(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedReferenceCount$_$downcast_to_Thread",
                    "extern": [
                        "Thread *",
                        "TypedReferenceCount$_$downcast_to_Thread(TypedReferenceCount *param0)"
                    ],
                    "fn": "downcast_to_Thread",
                    "indexed": "TypedReferenceCount$1$downcast_to_Thread",
                    "mangled": "_inCAAAAiO2P",
                    "ot": "Thread*",
                    "rt": "Thread"
                }
            ]
        },
        "TypedWritable": {
            "bases": [
                "TypedObject"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "TypedWritable$_$TypedWritable()",
                    "c_type": "TypedWritable *",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_ctor_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772054797065645772697461626c6528293b",
                    "cpp_ref": "inline TypedWritable::TypedWritable(void)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "TypedWritable$_$TypedWritable",
                    "extern": [
                        "TypedWritable *",
                        "TypedWritable$_$TypedWritable()"
                    ],
                    "fn": "TypedWritable",
                    "indexed": "TypedWritable$1$TypedWritable",
                    "mangled": "_inCAAAA1b__",
                    "ot": "inline",
                    "rt": "TypedWritable"
                },
                {
                    "argc": 1,
                    "argn": [
                        "copy"
                    ],
                    "args": [
                        "TypedWritable const &copy"
                    ],
                    "argt": [
                        "TypedWritable const&"
                    ],
                    "c_argv": [
                        "TypedWritable const *"
                    ],
                    "c_ref": "TypedWritable$_$TypedWritable(TypedWritable const *param0)",
                    "c_type": "TypedWritable *",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772054797065645772697461626c65282a706172616d30293b",
                    "cpp_ref": "inline TypedWritable::TypedWritable(TypedWritable const &copy)",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "TypedWritable$_$TypedWritable",
                    "extern": [
                        "TypedWritable *",
                        "TypedWritable$_$TypedWritable(TypedWritable const *param0)"
                    ],
                    "fn": "TypedWritable",
                    "indexed": "TypedWritable$2$TypedWritable",
                    "mangled": "_inCAAAAMQjn",
                    "ot": "inline",
                    "rt": "TypedWritable"
                },
                {
                    "argc": 2,
                    "argn": [
                        "manager",
                        "dg"
                    ],
                    "args": [
                        "BamWriter *manager",
                        "Datagram &dg"
                    ],
                    "argt": [
                        "BamWriter*",
                        "Datagram&"
                    ],
                    "c_argv": [
                        "TypedWritable *",
                        "BamWriter *",
                        "Datagram *"
                    ],
                    "c_ref": "TypedWritable$_$write_datagram(TypedWritable *param0, BamWriter *param1, Datagram *param2)",
                    "c_type": "void",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_write_datagram_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e77726974655f646174616772616d28706172616d312c202a706172616d32293b",
                    "cpp_ref": "virtual void TypedWritable::write_datagram(BamWriter *manager, Datagram &dg)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$write_datagram",
                    "extern": [
                        "void",
                        "TypedWritable$_$write_datagram(TypedWritable *param0, BamWriter *param1, Datagram *param2)"
                    ],
                    "fn": "write_datagram",
                    "indexed": "TypedWritable$3$write_datagram",
                    "mangled": "_inCAAAAOPd_",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "manager"
                    ],
                    "args": [
                        "BamWriter *manager"
                    ],
                    "argt": [
                        "BamWriter*"
                    ],
                    "c_argv": [
                        "TypedWritable *",
                        "BamWriter *"
                    ],
                    "c_ref": "TypedWritable$_$update_bam_nested(TypedWritable *param0, BamWriter *param1)",
                    "c_type": "void",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_update_bam_nested_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7570646174655f62616d5f6e657374656428706172616d31293b",
                    "cpp_ref": "virtual void TypedWritable::update_bam_nested(BamWriter *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$update_bam_nested",
                    "extern": [
                        "void",
                        "TypedWritable$_$update_bam_nested(TypedWritable *param0, BamWriter *param1)"
                    ],
                    "fn": "update_bam_nested",
                    "indexed": "TypedWritable$4$update_bam_nested",
                    "mangled": "_inCAAAA2GsH",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedWritable const *"
                    ],
                    "c_ref": "TypedWritable$_$require_fully_complete(TypedWritable const *param0)",
                    "c_type": "bool",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_require_fully_complete_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e726571756972655f66756c6c795f636f6d706c65746528293b",
                    "cpp_ref": "virtual bool TypedWritable::require_fully_complete(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$require_fully_complete",
                    "extern": [
                        "bool",
                        "TypedWritable$_$require_fully_complete(TypedWritable const *param0)"
                    ],
                    "fn": "require_fully_complete",
                    "indexed": "TypedWritable$5$require_fully_complete",
                    "mangled": "_inCAAAAKIGl",
                    "ot": "virtual bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "scan",
                        "manager"
                    ],
                    "args": [
                        "DatagramIterator &scan",
                        "BamReader *manager"
                    ],
                    "argt": [
                        "DatagramIterator&",
                        "BamReader*"
                    ],
                    "c_argv": [
                        "TypedWritable *",
                        "DatagramIterator *",
                        "BamReader *"
                    ],
                    "c_ref": "TypedWritable$_$fillin(TypedWritable *param0, DatagramIterator *param1, BamReader *param2)",
                    "c_type": "void",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_fillin_v_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e66696c6c696e282a706172616d312c20706172616d32293b",
                    "cpp_ref": "virtual void TypedWritable::fillin(DatagramIterator &scan, BamReader *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$fillin",
                    "extern": [
                        "void",
                        "TypedWritable$_$fillin(TypedWritable *param0, DatagramIterator *param1, BamReader *param2)"
                    ],
                    "fn": "fillin",
                    "indexed": "TypedWritable$6$fillin",
                    "mangled": "_inCAAAARMeY",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "manager"
                    ],
                    "args": [
                        "BamReader *manager"
                    ],
                    "argt": [
                        "BamReader*"
                    ],
                    "c_argv": [
                        "TypedWritable *",
                        "BamReader *"
                    ],
                    "c_ref": "TypedWritable$_$finalize(TypedWritable *param0, BamReader *param1)",
                    "c_type": "void",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_finalize_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e66696e616c697a6528706172616d31293b",
                    "cpp_ref": "virtual void TypedWritable::finalize(BamReader *manager)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$finalize",
                    "extern": [
                        "void",
                        "TypedWritable$_$finalize(TypedWritable *param0, BamReader *param1)"
                    ],
                    "fn": "finalize",
                    "indexed": "TypedWritable$7$finalize",
                    "mangled": "_inCAAAAj9ba",
                    "ot": "virtual void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedWritable *"
                    ],
                    "c_ref": "TypedWritable$_$as_reference_count(TypedWritable *param0)",
                    "c_type": "ReferenceCount *",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_as_reference_count_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e61735f7265666572656e63655f636f756e7428293b",
                    "cpp_ref": "virtual ReferenceCount *TypedWritable::as_reference_count(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$as_reference_count",
                    "extern": [
                        "ReferenceCount *",
                        "TypedWritable$_$as_reference_count(TypedWritable *param0)"
                    ],
                    "fn": "as_reference_count",
                    "indexed": "TypedWritable$8$as_reference_count",
                    "mangled": "_inCAAAAnUPd",
                    "ot": "virtual ReferenceCount*",
                    "rt": "ReferenceCount"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedWritable *"
                    ],
                    "c_ref": "TypedWritable$_$mark_bam_modified(TypedWritable *param0)",
                    "c_type": "void",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_mark_bam_modified_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6d61726b5f62616d5f6d6f64696669656428293b",
                    "cpp_ref": "inline void TypedWritable::mark_bam_modified(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$mark_bam_modified",
                    "extern": [
                        "void",
                        "TypedWritable$_$mark_bam_modified(TypedWritable *param0)"
                    ],
                    "fn": "mark_bam_modified",
                    "indexed": "TypedWritable$9$mark_bam_modified",
                    "mangled": "_inCAAAAh86d",
                    "ot": "inline void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedWritable const *"
                    ],
                    "c_ref": "TypedWritable$_$get_bam_modified(TypedWritable const *param0)",
                    "c_type": "UpdateSeq *",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_get_bam_modified_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772055706461746553657128282a706172616d30292e6765745f62616d5f6d6f6469666965642829293b",
                    "cpp_ref": "inline UpdateSeq TypedWritable::get_bam_modified(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$get_bam_modified",
                    "extern": [
                        "UpdateSeq *",
                        "TypedWritable$_$get_bam_modified(TypedWritable const *param0)"
                    ],
                    "fn": "get_bam_modified",
                    "indexed": "TypedWritable$10$get_bam_modified",
                    "mangled": "_inCAAAAA1uu",
                    "ot": "inline UpdateSeq",
                    "rt": "UpdateSeq"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedWritable const *"
                    ],
                    "c_ref": "TypedWritable$_$encode_to_bam_stream(TypedWritable const *param0)",
                    "c_type": "vector_uchar",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_encode_to_bam_stream_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e656e636f64655f746f5f62616d5f73747265616d28293b",
                    "cpp_ref": "inline vector_uchar TypedWritable::encode_to_bam_stream(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$encode_to_bam_stream",
                    "extern": [
                        "vector_uchar",
                        "TypedWritable$_$encode_to_bam_stream(TypedWritable const *param0)"
                    ],
                    "fn": "encode_to_bam_stream",
                    "indexed": "TypedWritable$11$encode_to_bam_stream",
                    "mangled": "_inCAAAASud2",
                    "ot": "inline vector_uchar",
                    "rt": "vector_uchar"
                },
                {
                    "argc": 2,
                    "argn": [
                        "data",
                        "writer"
                    ],
                    "args": [
                        "vector_uchar &data",
                        "BamWriter *writer"
                    ],
                    "argt": [
                        "vector_uchar&",
                        "BamWriter*"
                    ],
                    "c_argv": [
                        "TypedWritable const *",
                        "vector_uchar *",
                        "BamWriter *"
                    ],
                    "c_ref": "TypedWritable$_$encode_to_bam_stream(TypedWritable const *param0, vector_uchar *param1, BamWriter *param2)",
                    "c_type": "bool",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_encode_to_bam_stream_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e656e636f64655f746f5f62616d5f73747265616d282a706172616d312c20706172616d32293b",
                    "cpp_ref": "bool TypedWritable::encode_to_bam_stream(vector_uchar &data, BamWriter *writer) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$encode_to_bam_stream",
                    "extern": [
                        "bool",
                        "TypedWritable$_$encode_to_bam_stream(TypedWritable const *param0, vector_uchar *param1, BamWriter *param2)"
                    ],
                    "fn": "encode_to_bam_stream",
                    "indexed": "TypedWritable$12$encode_to_bam_stream",
                    "mangled": "_inCAAAABLPl",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 1,
                    "argn": [
                        "data"
                    ],
                    "args": [
                        "vector_uchar &data"
                    ],
                    "argt": [
                        "vector_uchar&"
                    ],
                    "c_argv": [
                        "TypedWritable const *",
                        "vector_uchar *"
                    ],
                    "c_ref": "TypedWritable$_$encode_to_bam_stream(TypedWritable const *param0, vector_uchar *param1)",
                    "c_type": "bool",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_encode_to_bam_stream_B_pp",
                    "cni_args": "pp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e656e636f64655f746f5f62616d5f73747265616d282a706172616d31293b",
                    "cpp_ref": "bool TypedWritable::encode_to_bam_stream(vector_uchar &data, BamWriter *writer) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$encode_to_bam_stream",
                    "extern": [
                        "bool",
                        "TypedWritable$_$encode_to_bam_stream(TypedWritable const *param0, vector_uchar *param1)"
                    ],
                    "fn": "encode_to_bam_stream",
                    "indexed": "TypedWritable$13$encode_to_bam_stream",
                    "mangled": "_inCAAAACPVb",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "TypedWritable$_$get_class_type()",
                    "c_type": "int",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202854797065645772697461626c653a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle TypedWritable::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$get_class_type",
                    "extern": [
                        "int",
                        "TypedWritable$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "TypedWritable$14$get_class_type",
                    "mangled": "_inCAAAATBaO",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "TypedWritable$_$init_type()",
                    "c_type": "void",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202054797065645772697461626c653a3a696e69745f7479706528293b",
                    "cpp_ref": "static void TypedWritable::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$init_type",
                    "extern": [
                        "void",
                        "TypedWritable$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "TypedWritable$15$init_type",
                    "mangled": "_inCAAAA79XL",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedWritable *"
                    ],
                    "c_ref": "TypedWritable$_$force_init_type(TypedWritable *param0)",
                    "c_type": "int",
                    "cn": "TypedWritable",
                    "cni": "TypedWritable_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle TypedWritable::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritable$_$force_init_type",
                    "extern": [
                        "int",
                        "TypedWritable$_$force_init_type(TypedWritable *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "TypedWritable$16$force_init_type",
                    "mangled": "_inCAAAAlbzG",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                }
            ]
        },
        "TypedWritableReferenceCount": {
            "bases": [
                "TypedWritable",
                "ReferenceCount"
            ],
            "enums": {},
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedWritableReferenceCount *"
                    ],
                    "c_ref": "TypedWritableReferenceCount$_$downcast_to_PandaNode(TypedWritableReferenceCount *param0)",
                    "c_type": "PandaNode *",
                    "cn": "TypedWritableReferenceCount",
                    "cni": "TypedWritableReferenceCount_C_downcast_to_PandaNode_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202850616e64614e6f6465202a29706172616d303b",
                    "cpp_ref": "PandaNode *TypedWritableReferenceCount::downcast_to_PandaNode(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritableReferenceCount$_$downcast_to_PandaNode",
                    "extern": [
                        "PandaNode *",
                        "TypedWritableReferenceCount$_$downcast_to_PandaNode(TypedWritableReferenceCount *param0)"
                    ],
                    "fn": "downcast_to_PandaNode",
                    "indexed": "TypedWritableReferenceCount$1$downcast_to_PandaNode",
                    "mangled": "_inCAAAAV0o9",
                    "ot": "PandaNode*",
                    "rt": "PandaNode"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "TypedWritableReferenceCount *"
                    ],
                    "c_ref": "TypedWritableReferenceCount$_$downcast_to_GeomVertexFormat(TypedWritableReferenceCount *param0)",
                    "c_type": "GeomVertexFormat *",
                    "cn": "TypedWritableReferenceCount",
                    "cni": "TypedWritableReferenceCount_C_downcast_to_GeomVertexFormat_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e202847656f6d566572746578466f726d6174202a29706172616d303b",
                    "cpp_ref": "GeomVertexFormat *TypedWritableReferenceCount::downcast_to_GeomVertexFormat(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "TypedWritableReferenceCount$_$downcast_to_GeomVertexFormat",
                    "extern": [
                        "GeomVertexFormat *",
                        "TypedWritableReferenceCount$_$downcast_to_GeomVertexFormat(TypedWritableReferenceCount *param0)"
                    ],
                    "fn": "downcast_to_GeomVertexFormat",
                    "indexed": "TypedWritableReferenceCount$2$downcast_to_GeomVertexFormat",
                    "mangled": "_inCAAAA8_96",
                    "ot": "GeomVertexFormat*",
                    "rt": "GeomVertexFormat"
                }
            ]
        },
        "WindowFramework": {
            "bases": [
                "TypedWritableReferenceCount"
            ],
            "enums": {
                "BackgroundType": [
                    [
                        "BT_black",
                        2
                    ],
                    [
                        "BT_default",
                        1
                    ],
                    [
                        "BT_gray",
                        3
                    ],
                    [
                        "BT_none",
                        5
                    ],
                    [
                        "BT_other",
                        0
                    ],
                    [
                        "BT_white",
                        4
                    ]
                ],
                "SplitType": [
                    [
                        "ST_default",
                        0
                    ],
                    [
                        "ST_horizontal",
                        1
                    ],
                    [
                        "ST_vertical",
                        2
                    ]
                ]
            },
            "proto": [
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_panda_framework(WindowFramework const *param0)",
                    "c_type": "PandaFramework *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_panda_framework_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f70616e64615f6672616d65776f726b28293b",
                    "cpp_ref": "inline PandaFramework *WindowFramework::get_panda_framework(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_panda_framework",
                    "extern": [
                        "PandaFramework *",
                        "WindowFramework$_$get_panda_framework(WindowFramework const *param0)"
                    ],
                    "fn": "get_panda_framework",
                    "indexed": "WindowFramework$1$get_panda_framework",
                    "mangled": "_inCAAAAYGdR",
                    "ot": "inline PandaFramework*",
                    "rt": "PandaFramework"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_graphics_window(WindowFramework const *param0)",
                    "c_type": "GraphicsWindow *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_graphics_window_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f67726170686963735f77696e646f7728293b",
                    "cpp_ref": "inline GraphicsWindow *WindowFramework::get_graphics_window(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_graphics_window",
                    "extern": [
                        "GraphicsWindow *",
                        "WindowFramework$_$get_graphics_window(WindowFramework const *param0)"
                    ],
                    "fn": "get_graphics_window",
                    "indexed": "WindowFramework$2$get_graphics_window",
                    "mangled": "_inCAAAAllyB",
                    "ot": "inline GraphicsWindow*",
                    "rt": "GraphicsWindow"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_graphics_output(WindowFramework const *param0)",
                    "c_type": "GraphicsOutput *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_graphics_output_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f67726170686963735f6f757470757428293b",
                    "cpp_ref": "inline GraphicsOutput *WindowFramework::get_graphics_output(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_graphics_output",
                    "extern": [
                        "GraphicsOutput *",
                        "WindowFramework$_$get_graphics_output(WindowFramework const *param0)"
                    ],
                    "fn": "get_graphics_output",
                    "indexed": "WindowFramework$3$get_graphics_output",
                    "mangled": "_inCAAAAaLWw",
                    "ot": "inline GraphicsOutput*",
                    "rt": "GraphicsOutput"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$get_camera_group(WindowFramework *param0)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_camera_group_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f63616d6572615f67726f75702829293b",
                    "cpp_ref": "NodePath WindowFramework::get_camera_group(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_camera_group",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$get_camera_group(WindowFramework *param0)"
                    ],
                    "fn": "get_camera_group",
                    "indexed": "WindowFramework$4$get_camera_group",
                    "mangled": "_inCAAAAKUbp",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_num_cameras(WindowFramework const *param0)",
                    "c_type": "int",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_num_cameras_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6e756d5f63616d6572617328293b",
                    "cpp_ref": "inline int WindowFramework::get_num_cameras(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_num_cameras",
                    "extern": [
                        "int",
                        "WindowFramework$_$get_num_cameras(WindowFramework const *param0)"
                    ],
                    "fn": "get_num_cameras",
                    "indexed": "WindowFramework$5$get_num_cameras",
                    "mangled": "_inCAAAAOQs1",
                    "ot": "inline int",
                    "rt": "int"
                },
                {
                    "argc": 1,
                    "argn": [
                        "n"
                    ],
                    "args": [
                        "int n"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "WindowFramework const *",
                        "int"
                    ],
                    "c_ref": "WindowFramework$_$get_camera(WindowFramework const *param0, int param1)",
                    "c_type": "Camera *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_camera_p_pi",
                    "cni_args": "pi",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f63616d65726128706172616d31293b",
                    "cpp_ref": "inline Camera *WindowFramework::get_camera(int n) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_camera",
                    "extern": [
                        "Camera *",
                        "WindowFramework$_$get_camera(WindowFramework const *param0, int param1)"
                    ],
                    "fn": "get_camera",
                    "indexed": "WindowFramework$6$get_camera",
                    "mangled": "_inCAAAAJdpp",
                    "ot": "inline Camera*",
                    "rt": "Camera"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_display_region_2d(WindowFramework const *param0)",
                    "c_type": "DisplayRegion *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_display_region_2d_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f646973706c61795f726567696f6e5f326428293b",
                    "cpp_ref": "inline DisplayRegion *WindowFramework::get_display_region_2d(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_display_region_2d",
                    "extern": [
                        "DisplayRegion *",
                        "WindowFramework$_$get_display_region_2d(WindowFramework const *param0)"
                    ],
                    "fn": "get_display_region_2d",
                    "indexed": "WindowFramework$7$get_display_region_2d",
                    "mangled": "_inCAAAALKl9",
                    "ot": "inline DisplayRegion*",
                    "rt": "DisplayRegion"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_display_region_3d(WindowFramework const *param0)",
                    "c_type": "DisplayRegion *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_display_region_3d_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f646973706c61795f726567696f6e5f336428293b",
                    "cpp_ref": "inline DisplayRegion *WindowFramework::get_display_region_3d(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_display_region_3d",
                    "extern": [
                        "DisplayRegion *",
                        "WindowFramework$_$get_display_region_3d(WindowFramework const *param0)"
                    ],
                    "fn": "get_display_region_3d",
                    "indexed": "WindowFramework$8$get_display_region_3d",
                    "mangled": "_inCAAAAVKsL",
                    "ot": "inline DisplayRegion*",
                    "rt": "DisplayRegion"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$get_render(WindowFramework *param0)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_render_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f72656e6465722829293b",
                    "cpp_ref": "NodePath WindowFramework::get_render(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_render",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$get_render(WindowFramework *param0)"
                    ],
                    "fn": "get_render",
                    "indexed": "WindowFramework$9$get_render",
                    "mangled": "_inCAAAApiA7",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$get_render_2d(WindowFramework *param0)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_render_2d_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f72656e6465725f32642829293b",
                    "cpp_ref": "NodePath WindowFramework::get_render_2d(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_render_2d",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$get_render_2d(WindowFramework *param0)"
                    ],
                    "fn": "get_render_2d",
                    "indexed": "WindowFramework$10$get_render_2d",
                    "mangled": "_inCAAAASEBt",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$get_aspect_2d(WindowFramework *param0)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_aspect_2d_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f6173706563745f32642829293b",
                    "cpp_ref": "NodePath WindowFramework::get_aspect_2d(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_aspect_2d",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$get_aspect_2d(WindowFramework *param0)"
                    ],
                    "fn": "get_aspect_2d",
                    "indexed": "WindowFramework$11$get_aspect_2d",
                    "mangled": "_inCAAAAeVBf",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$get_pixel_2d(WindowFramework *param0)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_pixel_2d_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f706978656c5f32642829293b",
                    "cpp_ref": "NodePath WindowFramework::get_pixel_2d(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_pixel_2d",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$get_pixel_2d(WindowFramework *param0)"
                    ],
                    "fn": "get_pixel_2d",
                    "indexed": "WindowFramework$12$get_pixel_2d",
                    "mangled": "_inCAAAAmE42",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$get_mouse(WindowFramework *param0)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_mouse_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f6d6f7573652829293b",
                    "cpp_ref": "NodePath WindowFramework::get_mouse(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_mouse",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$get_mouse(WindowFramework *param0)"
                    ],
                    "fn": "get_mouse",
                    "indexed": "WindowFramework$13$get_mouse",
                    "mangled": "_inCAAAA9Hqw",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$get_button_thrower(WindowFramework *param0)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_button_thrower_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6765745f627574746f6e5f7468726f7765722829293b",
                    "cpp_ref": "NodePath WindowFramework::get_button_thrower(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_button_thrower",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$get_button_thrower(WindowFramework *param0)"
                    ],
                    "fn": "get_button_thrower",
                    "indexed": "WindowFramework$14$get_button_thrower",
                    "mangled": "_inCAAAAIxxZ",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$enable_keyboard(WindowFramework *param0)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_enable_keyboard_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e656e61626c655f6b6579626f61726428293b",
                    "cpp_ref": "void WindowFramework::enable_keyboard(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$enable_keyboard",
                    "extern": [
                        "void",
                        "WindowFramework$_$enable_keyboard(WindowFramework *param0)"
                    ],
                    "fn": "enable_keyboard",
                    "indexed": "WindowFramework$15$enable_keyboard",
                    "mangled": "_inCAAAABlvn",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$setup_trackball(WindowFramework *param0)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_setup_trackball_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e73657475705f747261636b62616c6c28293b",
                    "cpp_ref": "void WindowFramework::setup_trackball(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$setup_trackball",
                    "extern": [
                        "void",
                        "WindowFramework$_$setup_trackball(WindowFramework *param0)"
                    ],
                    "fn": "setup_trackball",
                    "indexed": "WindowFramework$16$setup_trackball",
                    "mangled": "_inCAAAAMtUh",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "object"
                    ],
                    "args": [
                        "NodePath const &object"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "NodePath const *"
                    ],
                    "c_ref": "WindowFramework$_$center_trackball(WindowFramework *param0, NodePath const *param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_center_trackball_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e63656e7465725f747261636b62616c6c282a706172616d31293b",
                    "cpp_ref": "void WindowFramework::center_trackball(NodePath const &object)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$center_trackball",
                    "extern": [
                        "void",
                        "WindowFramework$_$center_trackball(WindowFramework *param0, NodePath const *param1)"
                    ],
                    "fn": "center_trackball",
                    "indexed": "WindowFramework$17$center_trackball",
                    "mangled": "_inCAAAAa23a",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 2,
                    "argn": [
                        "parent",
                        "files"
                    ],
                    "args": [
                        "NodePath const &parent",
                        "pvector< Filename > const &files"
                    ],
                    "argt": [
                        "NodePath const&",
                        "pvector< Filename > const&"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "NodePath const *",
                        "pvector< Filename > const *"
                    ],
                    "c_ref": "WindowFramework$_$load_models(WindowFramework *param0, NodePath const *param1, pvector< Filename > const *param2)",
                    "c_type": "bool",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_load_models_B_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6c6f61645f6d6f64656c73282a706172616d312c202a706172616d32293b",
                    "cpp_ref": "bool WindowFramework::load_models(NodePath const &parent, pvector< Filename > const &files)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$load_models",
                    "extern": [
                        "bool",
                        "WindowFramework$_$load_models(WindowFramework *param0, NodePath const *param1, pvector< Filename > const *param2)"
                    ],
                    "fn": "load_models",
                    "indexed": "WindowFramework$18$load_models",
                    "mangled": "_inCAAAA8CuG",
                    "ot": "bool",
                    "rt": "bool"
                },
                {
                    "argc": 2,
                    "argn": [
                        "parent",
                        "filename"
                    ],
                    "args": [
                        "NodePath const &parent",
                        "Filename filename"
                    ],
                    "argt": [
                        "NodePath const&",
                        "Filename"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "NodePath const *",
                        "Filename *"
                    ],
                    "c_ref": "WindowFramework$_$load_model(WindowFramework *param0, NodePath const *param1, Filename *param2)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_load_model_p_ppp",
                    "cni_args": "ppp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6c6f61645f6d6f64656c282a706172616d312c202a706172616d3229293b",
                    "cpp_ref": "NodePath WindowFramework::load_model(NodePath const &parent, Filename filename)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$load_model",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$load_model(WindowFramework *param0, NodePath const *param1, Filename *param2)"
                    ],
                    "fn": "load_model",
                    "indexed": "WindowFramework$19$load_model",
                    "mangled": "_inCAAAAc3x2",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "parent"
                    ],
                    "args": [
                        "NodePath const &parent"
                    ],
                    "argt": [
                        "NodePath const&"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "NodePath const *"
                    ],
                    "c_ref": "WindowFramework$_$load_default_model(WindowFramework *param0, NodePath const *param1)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_load_default_model_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6c6f61645f64656661756c745f6d6f64656c282a706172616d3129293b",
                    "cpp_ref": "NodePath WindowFramework::load_default_model(NodePath const &parent)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$load_default_model",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$load_default_model(WindowFramework *param0, NodePath const *param1)"
                    ],
                    "fn": "load_default_model",
                    "indexed": "WindowFramework$20$load_default_model",
                    "mangled": "_inCAAAANSSi",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 1,
                    "argn": [
                        "hierarchy_match_flags"
                    ],
                    "args": [
                        "int hierarchy_match_flags"
                    ],
                    "argt": [
                        "int"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "int"
                    ],
                    "c_ref": "WindowFramework$_$loop_animations(WindowFramework *param0, int param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_loop_animations_v_pi",
                    "cni_args": "pi",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f6f705f616e696d6174696f6e7328706172616d31293b",
                    "cpp_ref": "void WindowFramework::loop_animations(int hierarchy_match_flags)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$loop_animations",
                    "extern": [
                        "void",
                        "WindowFramework$_$loop_animations(WindowFramework *param0, int param1)"
                    ],
                    "fn": "loop_animations",
                    "indexed": "WindowFramework$21$loop_animations",
                    "mangled": "_inCAAAAYumN",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$loop_animations(WindowFramework *param0)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_loop_animations_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6c6f6f705f616e696d6174696f6e7328293b",
                    "cpp_ref": "void WindowFramework::loop_animations(int hierarchy_match_flags)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$loop_animations",
                    "extern": [
                        "void",
                        "WindowFramework$_$loop_animations(WindowFramework *param0)"
                    ],
                    "fn": "loop_animations",
                    "indexed": "WindowFramework$22$loop_animations",
                    "mangled": "_inCAAAADybn",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$stagger_animations(WindowFramework *param0)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_stagger_animations_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e737461676765725f616e696d6174696f6e7328293b",
                    "cpp_ref": "void WindowFramework::stagger_animations(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$stagger_animations",
                    "extern": [
                        "void",
                        "WindowFramework$_$stagger_animations(WindowFramework *param0)"
                    ],
                    "fn": "stagger_animations",
                    "indexed": "WindowFramework$23$stagger_animations",
                    "mangled": "_inCAAAAaLMj",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$next_anim_control(WindowFramework *param0)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_next_anim_control_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e6e6578745f616e696d5f636f6e74726f6c28293b",
                    "cpp_ref": "void WindowFramework::next_anim_control(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$next_anim_control",
                    "extern": [
                        "void",
                        "WindowFramework$_$next_anim_control(WindowFramework *param0)"
                    ],
                    "fn": "next_anim_control",
                    "indexed": "WindowFramework$24$next_anim_control",
                    "mangled": "_inCAAAAshAJ",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "bool"
                    ],
                    "c_ref": "WindowFramework$_$set_anim_controls(WindowFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_set_anim_controls_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f616e696d5f636f6e74726f6c7328706172616d31293b",
                    "cpp_ref": "void WindowFramework::set_anim_controls(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$set_anim_controls",
                    "extern": [
                        "void",
                        "WindowFramework$_$set_anim_controls(WindowFramework *param0, bool param1)"
                    ],
                    "fn": "set_anim_controls",
                    "indexed": "WindowFramework$25$set_anim_controls",
                    "mangled": "_inCAAAAGF8O",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_anim_controls(WindowFramework const *param0)",
                    "c_type": "bool",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_anim_controls_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f616e696d5f636f6e74726f6c7328293b",
                    "cpp_ref": "inline bool WindowFramework::get_anim_controls(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_anim_controls",
                    "extern": [
                        "bool",
                        "WindowFramework$_$get_anim_controls(WindowFramework const *param0)"
                    ],
                    "fn": "get_anim_controls",
                    "indexed": "WindowFramework$26$get_anim_controls",
                    "mangled": "_inCAAAAsD3B",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$adjust_dimensions(WindowFramework *param0)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_adjust_dimensions_v_p",
                    "cni_args": "p",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e61646a7573745f64696d656e73696f6e7328293b",
                    "cpp_ref": "void WindowFramework::adjust_dimensions(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$adjust_dimensions",
                    "extern": [
                        "void",
                        "WindowFramework$_$adjust_dimensions(WindowFramework *param0)"
                    ],
                    "fn": "adjust_dimensions",
                    "indexed": "WindowFramework$27$adjust_dimensions",
                    "mangled": "_inCAAAA8SXt",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "split_type"
                    ],
                    "args": [
                        "WindowFramework::SplitType split_type"
                    ],
                    "argt": [
                        "WindowFramework::SplitType"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "WindowFramework::SplitType"
                    ],
                    "c_ref": "WindowFramework$_$split_window(WindowFramework *param0, WindowFramework::SplitType param1)",
                    "c_type": "WindowFramework *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_split_window_p_pp",
                    "cni_args": "pp",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e73706c69745f77696e646f7728706172616d31293b",
                    "cpp_ref": "WindowFramework *WindowFramework::split_window(WindowFramework::SplitType split_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$split_window",
                    "extern": [
                        "WindowFramework *",
                        "WindowFramework$_$split_window(WindowFramework *param0, WindowFramework::SplitType param1)"
                    ],
                    "fn": "split_window",
                    "indexed": "WindowFramework$28$split_window",
                    "mangled": "_inCAAAAjG7H",
                    "ot": "WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$split_window(WindowFramework *param0)",
                    "c_type": "WindowFramework *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_split_window_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e73706c69745f77696e646f7728293b",
                    "cpp_ref": "WindowFramework *WindowFramework::split_window(WindowFramework::SplitType split_type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$split_window",
                    "extern": [
                        "WindowFramework *",
                        "WindowFramework$_$split_window(WindowFramework *param0)"
                    ],
                    "fn": "split_window",
                    "indexed": "WindowFramework$29$split_window",
                    "mangled": "_inCAAAAjmfa",
                    "ot": "WindowFramework*",
                    "rt": "WindowFramework"
                },
                {
                    "argc": 2,
                    "argn": [
                        "enable",
                        "filled"
                    ],
                    "args": [
                        "bool enable",
                        "bool filled"
                    ],
                    "argt": [
                        "bool",
                        "bool"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "bool",
                        "bool"
                    ],
                    "c_ref": "WindowFramework$_$set_wireframe(WindowFramework *param0, bool param1, bool param2)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_set_wireframe_v_pBB",
                    "cni_args": "pBB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f776972656672616d6528706172616d312c20706172616d32293b",
                    "cpp_ref": "void WindowFramework::set_wireframe(bool enable, bool filled)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$set_wireframe",
                    "extern": [
                        "void",
                        "WindowFramework$_$set_wireframe(WindowFramework *param0, bool param1, bool param2)"
                    ],
                    "fn": "set_wireframe",
                    "indexed": "WindowFramework$30$set_wireframe",
                    "mangled": "_inCAAAACZGB",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "bool"
                    ],
                    "c_ref": "WindowFramework$_$set_wireframe(WindowFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_set_wireframe_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f776972656672616d6528706172616d31293b",
                    "cpp_ref": "void WindowFramework::set_wireframe(bool enable, bool filled)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$set_wireframe",
                    "extern": [
                        "void",
                        "WindowFramework$_$set_wireframe(WindowFramework *param0, bool param1)"
                    ],
                    "fn": "set_wireframe",
                    "indexed": "WindowFramework$31$set_wireframe",
                    "mangled": "_inCAAAAkSnp",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "bool"
                    ],
                    "c_ref": "WindowFramework$_$set_texture(WindowFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_set_texture_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f7465787475726528706172616d31293b",
                    "cpp_ref": "void WindowFramework::set_texture(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$set_texture",
                    "extern": [
                        "void",
                        "WindowFramework$_$set_texture(WindowFramework *param0, bool param1)"
                    ],
                    "fn": "set_texture",
                    "indexed": "WindowFramework$32$set_texture",
                    "mangled": "_inCAAAAa6_v",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "bool"
                    ],
                    "c_ref": "WindowFramework$_$set_two_sided(WindowFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_set_two_sided_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f74776f5f736964656428706172616d31293b",
                    "cpp_ref": "void WindowFramework::set_two_sided(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$set_two_sided",
                    "extern": [
                        "void",
                        "WindowFramework$_$set_two_sided(WindowFramework *param0, bool param1)"
                    ],
                    "fn": "set_two_sided",
                    "indexed": "WindowFramework$33$set_two_sided",
                    "mangled": "_inCAAAAOTGD",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "bool"
                    ],
                    "c_ref": "WindowFramework$_$set_one_sided_reverse(WindowFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_set_one_sided_reverse_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6f6e655f73696465645f7265766572736528706172616d31293b",
                    "cpp_ref": "void WindowFramework::set_one_sided_reverse(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$set_one_sided_reverse",
                    "extern": [
                        "void",
                        "WindowFramework$_$set_one_sided_reverse(WindowFramework *param0, bool param1)"
                    ],
                    "fn": "set_one_sided_reverse",
                    "indexed": "WindowFramework$34$set_one_sided_reverse",
                    "mangled": "_inCAAAADrUc",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "bool"
                    ],
                    "c_ref": "WindowFramework$_$set_lighting(WindowFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_set_lighting_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6c69676874696e6728706172616d31293b",
                    "cpp_ref": "void WindowFramework::set_lighting(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$set_lighting",
                    "extern": [
                        "void",
                        "WindowFramework$_$set_lighting(WindowFramework *param0, bool param1)"
                    ],
                    "fn": "set_lighting",
                    "indexed": "WindowFramework$35$set_lighting",
                    "mangled": "_inCAAAAuwb_",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "enable"
                    ],
                    "args": [
                        "bool enable"
                    ],
                    "argt": [
                        "bool"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "bool"
                    ],
                    "c_ref": "WindowFramework$_$set_perpixel(WindowFramework *param0, bool param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_set_perpixel_v_pB",
                    "cni_args": "pB",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f706572706978656c28706172616d31293b",
                    "cpp_ref": "void WindowFramework::set_perpixel(bool enable)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$set_perpixel",
                    "extern": [
                        "void",
                        "WindowFramework$_$set_perpixel(WindowFramework *param0, bool param1)"
                    ],
                    "fn": "set_perpixel",
                    "indexed": "WindowFramework$36$set_perpixel",
                    "mangled": "_inCAAAASqNR",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 1,
                    "argn": [
                        "type"
                    ],
                    "args": [
                        "WindowFramework::BackgroundType type"
                    ],
                    "argt": [
                        "WindowFramework::BackgroundType"
                    ],
                    "c_argv": [
                        "WindowFramework *",
                        "WindowFramework::BackgroundType"
                    ],
                    "c_ref": "WindowFramework$_$set_background_type(WindowFramework *param0, WindowFramework::BackgroundType param1)",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_set_background_type_v_pp",
                    "cni_args": "pp",
                    "cni_rt": "v",
                    "code": "20202020282a706172616d30292e7365745f6261636b67726f756e645f7479706528706172616d31293b",
                    "cpp_ref": "void WindowFramework::set_background_type(WindowFramework::BackgroundType type)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$set_background_type",
                    "extern": [
                        "void",
                        "WindowFramework$_$set_background_type(WindowFramework *param0, WindowFramework::BackgroundType param1)"
                    ],
                    "fn": "set_background_type",
                    "indexed": "WindowFramework$37$set_background_type",
                    "mangled": "_inCAAAAv13J",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_wireframe(WindowFramework const *param0)",
                    "c_type": "bool",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_wireframe_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f776972656672616d6528293b",
                    "cpp_ref": "inline bool WindowFramework::get_wireframe(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_wireframe",
                    "extern": [
                        "bool",
                        "WindowFramework$_$get_wireframe(WindowFramework const *param0)"
                    ],
                    "fn": "get_wireframe",
                    "indexed": "WindowFramework$38$get_wireframe",
                    "mangled": "_inCAAAASe1v",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_wireframe_filled(WindowFramework const *param0)",
                    "c_type": "bool",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_wireframe_filled_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f776972656672616d655f66696c6c656428293b",
                    "cpp_ref": "inline bool WindowFramework::get_wireframe_filled(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_wireframe_filled",
                    "extern": [
                        "bool",
                        "WindowFramework$_$get_wireframe_filled(WindowFramework const *param0)"
                    ],
                    "fn": "get_wireframe_filled",
                    "indexed": "WindowFramework$39$get_wireframe_filled",
                    "mangled": "_inCAAAAEzZA",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_texture(WindowFramework const *param0)",
                    "c_type": "bool",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_texture_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f7465787475726528293b",
                    "cpp_ref": "inline bool WindowFramework::get_texture(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_texture",
                    "extern": [
                        "bool",
                        "WindowFramework$_$get_texture(WindowFramework const *param0)"
                    ],
                    "fn": "get_texture",
                    "indexed": "WindowFramework$40$get_texture",
                    "mangled": "_inCAAAAVZbH",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_two_sided(WindowFramework const *param0)",
                    "c_type": "bool",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_two_sided_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f74776f5f736964656428293b",
                    "cpp_ref": "inline bool WindowFramework::get_two_sided(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_two_sided",
                    "extern": [
                        "bool",
                        "WindowFramework$_$get_two_sided(WindowFramework const *param0)"
                    ],
                    "fn": "get_two_sided",
                    "indexed": "WindowFramework$41$get_two_sided",
                    "mangled": "_inCAAAAMZUJ",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_one_sided_reverse(WindowFramework const *param0)",
                    "c_type": "bool",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_one_sided_reverse_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6f6e655f73696465645f7265766572736528293b",
                    "cpp_ref": "inline bool WindowFramework::get_one_sided_reverse(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_one_sided_reverse",
                    "extern": [
                        "bool",
                        "WindowFramework$_$get_one_sided_reverse(WindowFramework const *param0)"
                    ],
                    "fn": "get_one_sided_reverse",
                    "indexed": "WindowFramework$42$get_one_sided_reverse",
                    "mangled": "_inCAAAAeADy",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_lighting(WindowFramework const *param0)",
                    "c_type": "bool",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_lighting_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6c69676874696e6728293b",
                    "cpp_ref": "inline bool WindowFramework::get_lighting(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_lighting",
                    "extern": [
                        "bool",
                        "WindowFramework$_$get_lighting(WindowFramework const *param0)"
                    ],
                    "fn": "get_lighting",
                    "indexed": "WindowFramework$43$get_lighting",
                    "mangled": "_inCAAAAGGkv",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_perpixel(WindowFramework const *param0)",
                    "c_type": "bool",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_perpixel_B_p",
                    "cni_args": "p",
                    "cni_rt": "B",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f706572706978656c28293b",
                    "cpp_ref": "inline bool WindowFramework::get_perpixel(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_perpixel",
                    "extern": [
                        "bool",
                        "WindowFramework$_$get_perpixel(WindowFramework const *param0)"
                    ],
                    "fn": "get_perpixel",
                    "indexed": "WindowFramework$44$get_perpixel",
                    "mangled": "_inCAAAASlWB",
                    "ot": "inline bool",
                    "rt": "bool"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_background_type(WindowFramework const *param0)",
                    "c_type": "WindowFramework::BackgroundType",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_background_type_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e20282a706172616d30292e6765745f6261636b67726f756e645f7479706528293b",
                    "cpp_ref": "inline WindowFramework::BackgroundType WindowFramework::get_background_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_background_type",
                    "extern": [
                        "WindowFramework::BackgroundType",
                        "WindowFramework$_$get_background_type(WindowFramework const *param0)"
                    ],
                    "fn": "get_background_type",
                    "indexed": "WindowFramework$45$get_background_type",
                    "mangled": "_inCAAAAUJm4",
                    "ot": "inline WindowFramework::BackgroundType",
                    "rt": "WindowFramework::BackgroundType"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "WindowFramework$_$get_shuttle_controls_font()",
                    "c_type": "TextFont *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_shuttle_controls_font_p_v",
                    "cni_args": "",
                    "cni_rt": "p",
                    "code": "2020202072657475726e2057696e646f774672616d65776f726b3a3a6765745f73687574746c655f636f6e74726f6c735f666f6e7428293b",
                    "cpp_ref": "static TextFont *WindowFramework::get_shuttle_controls_font(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_shuttle_controls_font",
                    "extern": [
                        "TextFont *",
                        "WindowFramework$_$get_shuttle_controls_font()"
                    ],
                    "fn": "get_shuttle_controls_font",
                    "indexed": "WindowFramework$46$get_shuttle_controls_font",
                    "mangled": "_inCAAAAkcq_",
                    "ot": "TextFont*",
                    "rt": "TextFont"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$make_camera(WindowFramework *param0)",
                    "c_type": "NodePath *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_make_camera_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e6577204e6f64655061746828282a706172616d30292e6d616b655f63616d6572612829293b",
                    "cpp_ref": "NodePath WindowFramework::make_camera(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$make_camera",
                    "extern": [
                        "NodePath *",
                        "WindowFramework$_$make_camera(WindowFramework *param0)"
                    ],
                    "fn": "make_camera",
                    "indexed": "WindowFramework$47$make_camera",
                    "mangled": "_inCAAAACIRR",
                    "ot": "NodePath",
                    "rt": "NodePath"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "WindowFramework$_$get_class_type()",
                    "c_type": "int",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_class_type_i_v",
                    "cni_args": "",
                    "cni_rt": "i",
                    "code": "2020202072657475726e202857696e646f774672616d65776f726b3a3a6765745f636c6173735f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "static TypeHandle WindowFramework::get_class_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_class_type",
                    "extern": [
                        "int",
                        "WindowFramework$_$get_class_type()"
                    ],
                    "fn": "get_class_type",
                    "indexed": "WindowFramework$48$get_class_type",
                    "mangled": "_inCAAAAO0fX",
                    "ot": "TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [],
                    "c_ref": "WindowFramework$_$init_type()",
                    "c_type": "void",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_init_type_v_v",
                    "cni_args": "",
                    "cni_rt": "v",
                    "code": "2020202057696e646f774672616d65776f726b3a3a696e69745f7479706528293b",
                    "cpp_ref": "static void WindowFramework::init_type(void)",
                    "ct": "s",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$init_type",
                    "extern": [
                        "void",
                        "WindowFramework$_$init_type()"
                    ],
                    "fn": "init_type",
                    "indexed": "WindowFramework$49$init_type",
                    "mangled": "_inCAAAA2D1X",
                    "ot": "void",
                    "rt": "void"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$get_type(WindowFramework const *param0)",
                    "c_type": "int",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_get_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e6765745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle WindowFramework::get_type(void) const",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$get_type",
                    "extern": [
                        "int",
                        "WindowFramework$_$get_type(WindowFramework const *param0)"
                    ],
                    "fn": "get_type",
                    "indexed": "WindowFramework$50$get_type",
                    "mangled": "_inCAAAAvhbO",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 0,
                    "argn": [],
                    "args": [],
                    "argt": [],
                    "c_argv": [
                        "WindowFramework *"
                    ],
                    "c_ref": "WindowFramework$_$force_init_type(WindowFramework *param0)",
                    "c_type": "int",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_force_init_type_i_p",
                    "cni_args": "p",
                    "cni_rt": "i",
                    "code": "2020202072657475726e2028282a706172616d30292e666f7263655f696e69745f747970652829292e6765745f696e64657828293b",
                    "cpp_ref": "virtual TypeHandle WindowFramework::force_init_type(void)",
                    "ct": "d",
                    "ctor": 0,
                    "demangled": "WindowFramework$_$force_init_type",
                    "extern": [
                        "int",
                        "WindowFramework$_$force_init_type(WindowFramework *param0)"
                    ],
                    "fn": "force_init_type",
                    "indexed": "WindowFramework$51$force_init_type",
                    "mangled": "_inCAAAAi4Rg",
                    "ot": "virtual TypeHandle",
                    "rt": "TypeHandle"
                },
                {
                    "argc": 1,
                    "argn": [
                        "arg0"
                    ],
                    "args": [
                        "WindowFramework const &"
                    ],
                    "argt": [
                        "WindowFramework const&"
                    ],
                    "c_argv": [
                        "WindowFramework const *"
                    ],
                    "c_ref": "WindowFramework$_$WindowFramework(WindowFramework const *param0)",
                    "c_type": "WindowFramework *",
                    "cn": "WindowFramework",
                    "cni": "WindowFramework_C_ctor_p_p",
                    "cni_args": "p",
                    "cni_rt": "p",
                    "code": "2020202072657475726e206e65772057696e646f774672616d65776f726b282a706172616d30293b",
                    "cpp_ref": "inline WindowFramework::WindowFramework(WindowFramework const &) = default",
                    "ct": "s",
                    "ctor": 1,
                    "demangled": "WindowFramework$_$WindowFramework",
                    "extern": [
                        "WindowFramework *",
                        "WindowFramework$_$WindowFramework(WindowFramework const *param0)"
                    ],
                    "fn": "WindowFramework",
                    "indexed": "WindowFramework$52$WindowFramework",
                    "mangled": "_inCAAAAp5TH",
                    "ot": "inline",
                    "rt": "WindowFramework"
                }
            ]
        }
    },
    "export": [
        [
            "NodePath *",
            "_inCAAAAfxyW(NodePath *param0, NodePath *param1)"
        ],
        [
            "NodePath *",
            "_inCAAAArj60(NodePath *param0, NodePath const *param1)"
        ],
        [
            "bool",
            "_inCAAAAHpLG(NodePath const *param0)"
        ],
        [
            "NodePath *",
            "_inCAAAA3gAF(NodePathCollection const *param0, std::size_t param1)"
        ],
        [
            "NodePathCollection *",
            "_inCAAAA5pUd(NodePathCollection *param0, NodePathCollection const *param1)"
        ],
        [
            "NodePathCollection *",
            "_inCAAAAwPWd(NodePathCollection const *param0, NodePathCollection const *param1)"
        ],
        [
            "bool",
            "_inCAAAAzIl9(NodePath const *param0, NodePath const *param1)"
        ],
        [
            "bool",
            "_inCAAAAKnOz(NodePath const *param0, WeakNodePath const *param1)"
        ],
        [
            "bool",
            "_inCAAAAROU9(NodePath const *param0, NodePath const *param1)"
        ],
        [
            "bool",
            "_inCAAAAod8y(NodePath const *param0, WeakNodePath const *param1)"
        ],
        [
            "bool",
            "_inCAAAAM90s(NodePath const *param0, NodePath const *param1)"
        ],
        [
            "bool",
            "_inCAAAAh9eK(NodePath const *param0, WeakNodePath const *param1)"
        ],
        [
            "bool",
            "_inCAAAAGBR_(ConfigPage const *param0, ConfigPage const *param1)"
        ],
        [
            "Filename *",
            "_inCAAAAUZ8w(Filename *param0, Filename *param1)"
        ],
        [
            "Filename *",
            "_inCAAAAe4GP(Filename *param0, Filename const *param1)"
        ],
        [
            "Filename *",
            "_inCAAAAAn_g(Filename *param0, char const *param1)"
        ],
        [
            "Filename *",
            "_inCAAAAAEbr(Filename *param0, char const *param1)"
        ],
        [
            "Filename *",
            "_inCAAAAwt4w(Filename *param0, wchar_t const *param1)"
        ],
        [
            "char const *",
            "_inCAAAACFZV(Filename const *param0)"
        ],
        [
            "char",
            "_inCAAAAPYDQ(Filename const *param0, std::size_t param1)"
        ],
        [
            "Filename *",
            "_inCAAAA_CCc(Filename *param0, char const *param1)"
        ],
        [
            "Filename *",
            "_inCAAAAdG6k(Filename const *param0, char const *param1)"
        ],
        [
            "Filename *",
            "_inCAAAApD3m(Filename const *param0, Filename const *param1)"
        ],
        [
            "bool",
            "_inCAAAAOBrR(Filename const *param0, char const *param1)"
        ],
        [
            "bool",
            "_inCAAAAsEaR(Filename const *param0, char const *param1)"
        ],
        [
            "bool",
            "_inCAAAAYSEF(Filename const *param0, char const *param1)"
        ],
        [
            "Geom *",
            "_inCAAAAk_XE(Geom *param0, Geom const *param1)"
        ],
        [
            "void",
            "_inCAAAAKSRA(Geom *param0, std::size_t param1)"
        ],
        [
            "GeomPrimitive *",
            "_inCAAAAxNhI(GeomPrimitive *param0, GeomPrimitive const *param1)"
        ],
        [
            "void",
            "_inCAAAArbyj(GeomPrimitive *param0, std::size_t param1)"
        ],
        [
            "void",
            "_inCAAAAAqHs(GeomTriangles *param0, std::size_t param1)"
        ],
        [
            "GeomVertexData *",
            "_inCAAAADxOu(GeomVertexData *param0, GeomVertexData const *param1)"
        ],
        [
            "void",
            "_inCAAAA5RVU(GeomVertexData *param0, std::size_t param1)"
        ],
        [
            "GeomVertexFormat *",
            "_inCAAAAqp4g(GeomVertexFormat *param0, GeomVertexFormat const *param1)"
        ],
        [
            "GeomVertexWriter *",
            "_inCAAAAR3bG(GeomVertexWriter *param0, GeomVertexWriter const *param1)"
        ],
        [
            "void",
            "_inCAAAA4Nkp(LVecBase3f *param0, std::size_t param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAqOP9(LVecBase3f *param0, LVecBase3f const *param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAArfXC(LVecBase3f *param0, float param1)"
        ],
        [
            "void",
            "_inCAAAA01HX(LVecBase3f *param0, int param1, float param2)"
        ],
        [
            "float",
            "_inCAAAAnq7z(LVecBase3f const *param0, int param1)"
        ],
        [
            "bool",
            "_inCAAAAdE8o(LVecBase3f const *param0, LVecBase3f const *param1)"
        ],
        [
            "bool",
            "_inCAAAAFt4v(LVecBase3f const *param0, LVecBase3f const *param1)"
        ],
        [
            "bool",
            "_inCAAAABNge(LVecBase3f const *param0, LVecBase3f const *param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAiO_P(LVecBase3f const *param0)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAfM9C(LVecBase3f const *param0, LVecBase3f const *param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAf8eW(LVecBase3f const *param0, LVecBase3f const *param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAHdlj(LVecBase3f const *param0, float param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAY1ZU(LVecBase3f const *param0, float param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAGqXQ(LVecBase3f *param0, LVecBase3f const *param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAGa5j(LVecBase3f *param0, LVecBase3f const *param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAPZfq(LVecBase3f *param0, float param1)"
        ],
        [
            "LVecBase3f *",
            "_inCAAAAOhTb(LVecBase3f *param0, float param1)"
        ],
        [
            "void",
            "_inCAAAAzEa6(MemoryBase *param0, std::size_t param1)"
        ],
        [
            "void",
            "_inCAAAApQ24(MemoryBase *param0, std::size_t param1)"
        ],
        [
            "TypedObject *",
            "_inCAAAAzYpP(TypedObject *param0, TypedObject const *param1)"
        ],
        [
            "TypedWritable *",
            "_inCAAAAPg9y(TypedWritable *param0, TypedWritable const *param1)"
        ],
        [
            "int",
            "_inCAAAAauEK()"
        ],
        [
            "void",
            "_inCAAAAuA06()"
        ],
        [
            "void",
            "_inCAAAAnI9S()"
        ],
        [
            "void",
            "_inCAAAA_8Jg(int param0)"
        ]
    ]
}